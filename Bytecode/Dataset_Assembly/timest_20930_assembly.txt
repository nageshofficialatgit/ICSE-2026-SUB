
mstore
(
0x40
 0x80
)
0x5ab94de9
0x0
sstore
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xe58fc54c
eq
tag
_2
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_3
jumpi
0x0
dup1
revert
tag
_3
pop
tag
_4
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_5
)
tag
_4
mload
(
0x40
)
dup1
dup3
iszero
iszero
iszero
iszero
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
0x0
dup1
0x0
dup1
sload
timestamp
gt
iszero
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
dup4
swap2
pop
0x64
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0x70a08231
address
mload
(
0x40
)
dup3
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
0x20
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup8
dup1
extcodesize
iszero
dup1
iszero
tag
_8
jumpi
0x0
dup1
revert
tag
_8
pop
gas
call
iszero
dup1
iszero
tag
_9
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_9
pop
pop
pop
pop
mload
(
0x40
)
returndatasize
0x20
dup2
lt
iszero
tag
_10
jumpi
0x0
dup1
revert
tag
_10
dup2
add
swap1
dup1
dup1
mload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
dup2
iszero
iszero
tag
_11
jumpi
invalid
tag
_11
div
swap1
pop
0x78
sload
(
0x0
)
add
0x0
dup2
swap1
sstore
pop
0x1
swap3
pop
pop
pop
swap2
swap1
pop
jump	
}
