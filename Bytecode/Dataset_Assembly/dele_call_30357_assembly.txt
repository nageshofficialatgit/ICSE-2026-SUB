
mstore
(
0x40
 0x80
)
0x1a2c5c3ba7182b572512a60a22d9f79a48a93164
0x0
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
0x457
0x1
sstore
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xd4e93292
eq
tag
_2
jumpi
tag
_1
0x0
dup1
revert
tag
_2
tag
_3
jump
(
tag
_4
)
tag
_3
stop
tag
_4
sload
(
0x1
)
callvalue
gt
iszero
tag
_6
jumpi
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
mload
(
0x40
)
dup1
dup1
0x6c6f674576656e74282900000000000000000000000000000000000000000000
dup2
mstore
pop
0xa
add
swap1
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
keccak256
0x100000000000000000000000000000000000000000000000000000000
swap1
div
mload
(
0x40
)
dup2
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup7
gas
delegatecall
swap3
pop
pop
pop
pop
tag
_6
jump	
}
