
mstore
(
0x40
 0x60
)
caller
0x0
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 iszero
(
calldatasize
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x18160ddd
eq
tag
_2
jumpi
dup1
0x27e235e3
eq
tag
_3
jumpi
dup1
0x3eaaf86b
eq
tag
_4
jumpi
dup1
0x70a08231
eq
tag
_5
jumpi
dup1
0x8da5cb5b
eq
tag
_6
jumpi
dup1
0xa9059cbb
eq
tag
_7
jumpi
tag
_1
0x0
dup1
revert
tag
_2
jumpi
(
tag
_8
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_8
tag
_9
jump
(
tag
_10
)
tag
_9
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
jumpi
(
tag
_11
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_11
tag
_12
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_13
)
tag
_12
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
jumpi
(
tag
_14
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_14
tag
_15
jump
(
tag
_16
)
tag
_15
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
jumpi
(
tag
_17
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_17
tag
_18
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_19
)
tag
_18
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_6
jumpi
(
tag
_20
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_20
tag
_21
jump
(
tag
_22
)
tag
_21
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_7
jumpi
(
tag
_23
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_23
tag
_24
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_25
)
tag
_24
stop
tag
_10
0x0
sload
(
0x1
)
swap1
pop
swap1
jump	
tag
_13
mstore
(
0x20
 0x2
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_16
sload
(
0x1
)
dup2
jump	
tag
_19
0x0
0x2
0x0
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
swap1
pop
swap2
swap1
pop
jump	
tag
_22
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_25
tag
_29
dup2
0x2
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
tag
_30
swap1
swap2
swap1
0xffffffff
and
jump	tag
_29
0x2
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
dup2
swap1
sstore
pop
tag
_31
dup2
0x2
0x0
dup6
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
tag
_32
swap1
swap2
swap1
0xffffffff
and
jump	tag
_31
0x2
0x0
dup5
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
dup2
swap1
sstore
pop
dup2
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
dup4
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
log3
pop
pop
jump	
tag
_30
0x0
dup3
dup3
gt
iszero
iszero
iszero
tag
_34
jumpi
invalid
tag
_34
dup2
dup4
sub
swap1
pop
swap3
swap2
pop
pop
jump	
tag
_32
0x0
dup1
dup3
dup5
add
swap1
pop
dup4
dup2
lt
iszero
iszero
iszero
tag
_36
jumpi
invalid
tag
_36
dup1
swap2
pop
pop
swap3
swap2
pop
pop
jump	
}
mstore
(
0x40
 0x60
)
0x40
dup1
mload
swap1
dup2
add
0x40
mstore
dup1
0xf
dup2
mstore
0x20
add
0x4861636b61626c65205465746865720000000000000000000000000000000000
dup2
mstore
pop
0x3
swap1
dup1
mload
swap1
0x20
add
swap1
tag
_1
swap3
swap2
swap1
jump	tag
_1
pop
0x40
dup1
mload
swap1
dup2
add
0x40
mstore
dup1
0x5
dup2
mstore
0x20
add
0x4854455448000000000000000000000000000000000000000000000000000000
dup2
mstore
pop
0x4
swap1
dup1
mload
swap1
0x20
add
swap1
tag
_3
swap3
swap2
swap1
jump	tag
_3
pop
0x6
0x5
sstore
jumpi
(
tag
_4
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_4
mload
(
0x40
)
0x20
dup1
bytecodeSize
dup4
codecopy
dup2
add
0x40
mstore
dup1
dup1
mload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
caller
0x0
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
dup1
0x1
dup2
swap1
sstore
pop
dup1
0x2
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
dup2
swap1
sstore
pop
pop
jump
(
tag
_9
)
tag
_2
dup3
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
0x1f
add
0x20
swap1
div
dup2
add
swap3
dup3
0x1f
lt
tag
_11
jumpi
dup1
mload
not
(
0xff
)
and
dup4
dup1
add
or
dup6
sstore
jump
(
tag
_10
)
tag
_11
dup3
dup1
add
0x1
add
dup6
sstore
dup3
iszero
tag
_10
jumpi
swap2
dup3
add
tag
_12
dup3
dup2
gt
iszero
tag
_13
jumpi
dup3
mload
dup3
sstore
swap2
0x20
add
swap2
swap1
0x1
add
swap1
jump
(
tag
_12
)
tag
_13
tag
_10
pop
swap1
pop
tag
_14
swap2
swap1
jump	tag
_14
pop
swap1
jump	tag
_15
tag
_16
swap2
swap1
tag
_17
dup1
dup3
gt
iszero
tag
_18
jumpi
0x0
dup2
0x0
swap1
sstore
pop
0x1
add
jump
(
tag
_17
)
tag
_18
pop
swap1
jump
tag
_16
swap1
jump	tag
_9
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 iszero
(
calldatasize
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x6fdde03
eq
tag
_2
jumpi
dup1
0x18160ddd
eq
tag
_3
jumpi
dup1
0x27e235e3
eq
tag
_4
jumpi
dup1
0x313ce567
eq
tag
_5
jumpi
dup1
0x3eaaf86b
eq
tag
_6
jumpi
dup1
0x70a08231
eq
tag
_7
jumpi
dup1
0x8da5cb5b
eq
tag
_8
jumpi
dup1
0x95d89b41
eq
tag
_9
jumpi
dup1
0xa9059cbb
eq
tag
_10
jumpi
dup1
0xcc872b66
eq
tag
_11
jumpi
tag
_1
0x0
dup1
revert
tag
_2
jumpi
(
tag
_12
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_12
tag
_13
jump
(
tag
_14
)
tag
_13
mload
(
0x40
)
dup1
dup1
0x20
add
dup3
dup2
sub
dup3
mstore
dup4
dup2
dup2
mload
dup2
mstore
0x20
add
swap2
pop
dup1
mload
swap1
0x20
add
swap1
dup1
dup4
dup4
0x0
tag
_15
dup4
dup2
lt
iszero
tag
_16
jumpi
dup1
dup3
add
mload
dup2
dup5
add
mstore
0x20
dup2
add
swap1
pop
jump
(
tag
_15
)
tag
_16
pop
pop
pop
pop
swap1
pop
swap1
dup2
add
swap1
0x1f
and
dup1
iszero
tag
_18
jumpi
dup1
dup3
sub
dup1
mload
0x1
dup4
0x20
sub
0x100
exp
sub
not
and
dup2
mstore
0x20
add
swap2
pop
tag
_18
pop
swap3
pop
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
jumpi
(
tag
_19
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_19
tag
_20
jump
(
tag
_21
)
tag
_20
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
jumpi
(
tag
_22
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_22
tag
_23
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_24
)
tag
_23
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
jumpi
(
tag
_25
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_25
tag
_26
jump
(
tag
_27
)
tag
_26
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_6
jumpi
(
tag
_28
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_28
tag
_29
jump
(
tag
_30
)
tag
_29
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_7
jumpi
(
tag
_31
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_31
tag
_32
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_33
)
tag
_32
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_8
jumpi
(
tag
_34
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_34
tag
_35
jump
(
tag
_36
)
tag
_35
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_9
jumpi
(
tag
_37
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_37
tag
_38
jump
(
tag
_39
)
tag
_38
mload
(
0x40
)
dup1
dup1
0x20
add
dup3
dup2
sub
dup3
mstore
dup4
dup2
dup2
mload
dup2
mstore
0x20
add
swap2
pop
dup1
mload
swap1
0x20
add
swap1
dup1
dup4
dup4
0x0
tag
_40
dup4
dup2
lt
iszero
tag
_41
jumpi
dup1
dup3
add
mload
dup2
dup5
add
mstore
0x20
dup2
add
swap1
pop
jump
(
tag
_40
)
tag
_41
pop
pop
pop
pop
swap1
pop
swap1
dup2
add
swap1
0x1f
and
dup1
iszero
tag
_43
jumpi
dup1
dup3
sub
dup1
mload
0x1
dup4
0x20
sub
0x100
exp
sub
not
and
dup2
mstore
0x20
add
swap2
pop
tag
_43
pop
swap3
pop
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_10
jumpi
(
tag
_44
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_44
tag
_45
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_46
)
tag
_45
stop
tag
_11
jumpi
(
tag
_47
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_47
tag
_48
0x4
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_49
)
tag
_48
stop
tag
_14
0x3
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
dup1
0x1f
add
0x20
dup1
swap2
div
mul
0x20
add
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
swap3
swap2
swap1
dup2
dup2
mstore
0x20
add
dup3
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
dup1
iszero
tag
_50
jumpi
dup1
0x1f
lt
tag
_51
jumpi
0x100
dup1
dup4
sload
div
mul
dup4
mstore
swap2
0x20
add
swap2
jump
(
tag
_50
)
tag
_51
dup3
add
swap2
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
tag
_52
dup2
sload
dup2
mstore
swap1
0x1
add
swap1
0x20
add
dup1
dup4
gt
tag
_52
jumpi
dup3
swap1
sub
0x1f
and
dup3
add
swap2
tag
_50
pop
pop
pop
pop
pop
dup2
jump	
tag
_21
0x0
sload
(
0x1
)
swap1
pop
swap1
jump	
tag
_24
mstore
(
0x20
 0x2
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_27
sload
(
0x5
)
dup2
jump	
tag
_30
sload
(
0x1
)
dup2
jump	
tag
_33
0x0
0x2
0x0
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
swap1
pop
swap2
swap1
pop
jump	
tag
_36
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_39
0x4
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
dup1
0x1f
add
0x20
dup1
swap2
div
mul
0x20
add
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
swap3
swap2
swap1
dup2
dup2
mstore
0x20
add
dup3
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
dup1
iszero
tag
_55
jumpi
dup1
0x1f
lt
tag
_56
jumpi
0x100
dup1
dup4
sload
div
mul
dup4
mstore
swap2
0x20
add
swap2
jump
(
tag
_55
)
tag
_56
dup3
add
swap2
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
tag
_57
dup2
sload
dup2
mstore
swap1
0x1
add
swap1
0x20
add
dup1
dup4
gt
tag
_57
jumpi
dup3
swap1
sub
0x1f
and
dup3
add
swap2
tag
_55
pop
pop
pop
pop
pop
dup2
jump	
tag
_46
tag
_59
dup2
0x2
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
tag
_60
swap1
swap2
swap1
0xffffffff
and
jump	tag
_59
0x2
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
dup2
swap1
sstore
pop
tag
_61
dup2
0x2
0x0
dup6
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
tag
_62
swap1
swap2
swap1
0xffffffff
and
jump	tag
_61
0x2
0x0
dup5
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
dup2
swap1
sstore
pop
dup2
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
dup4
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
log3
pop
pop
jump	
tag
_49
dup1
0x2
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup3
dup3
sload
add
swap3
pop
pop
dup2
swap1
sstore
pop
dup1
0x1
0x0
dup3
dup3
sload
add
swap3
pop
pop
dup2
swap1
sstore
pop
0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a
dup2
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
log1
pop
jump	
tag
_60
0x0
dup3
dup3
gt
iszero
iszero
iszero
tag
_65
jumpi
invalid
tag
_65
dup2
dup4
sub
swap1
pop
swap3
swap2
pop
pop
jump	
tag
_62
0x0
dup1
dup3
dup5
add
swap1
pop
dup4
dup2
lt
iszero
iszero
iszero
tag
_67
jumpi
invalid
tag
_67
dup1
swap2
pop
pop
swap3
swap2
pop
pop
jump	
}
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_1
caller
0x0
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x8da5cb5b
eq
tag
_2
jumpi
0x0
dup1
revert
tag
_2
jumpi
(
tag
_3
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_3
tag
_4
jump
(
tag
_5
)
tag
_4
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
}
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_1
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
0x0
dup1
revert
}
