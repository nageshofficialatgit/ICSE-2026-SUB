
mstore
(
0x40
 0x80
)
0x595f93e0
0x0
sstore
0x594bcd60
0x1
sstore
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x29dcb0cf
eq
tag
_2
jumpi
dup1
0x78e97925
eq
tag
_3
jumpi
tag
_1
0xc80000000
gasprice
gt
iszero
tag
_6
jumpi
0x0
dup1
revert
tag
_6
sload
(
0x1
)
timestamp
lt
dup1
tag
_7
jumpi
pop
sload
(
0x0
)
timestamp
lt
iszero
tag
_7
iszero
tag
_8
jumpi
0x0
dup1
revert
tag
_8
stop
tag
_2
callvalue
dup1
iszero
tag
_9
jumpi
0x0
dup1
revert
tag
_9
pop
tag
_10
jump
(
tag
_11
)
tag
_10
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_12
jumpi
0x0
dup1
revert
tag
_12
pop
tag
_13
jump
(
tag
_14
)
tag
_13
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_11
sload
(
0x0
)
dup2
jump	
tag
_14
sload
(
0x1
)
dup2
jump	
}
