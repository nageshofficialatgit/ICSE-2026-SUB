
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 iszero
(
callvalue
)
)
invalid
tag
_1
tag
_2
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x907c0ff9
eq
tag
_2
jumpi
tag
_1
invalid
tag
_2
jumpi
(
tag
_3
 iszero
(
callvalue
)
)
invalid
tag
_3
tag
_4
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_5
)
tag
_4
stop
tag
_5
dup1
0xffffffffffffffffffffffffffffffffffffffff
and
mload
(
0x40
)
dup1
swap1
pop
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup7
sub
(
gas
 0x61da
)
call
swap2
pop
pop
pop
tag
_6
pop
jump	}
