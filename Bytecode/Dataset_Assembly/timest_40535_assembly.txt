
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
caller
0x0
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
caller
0x4
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
caller
0x1
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
timestamp
0x2
dup2
swap1
sstore
pop
0xde0b6b3a7640000
0x3
dup2
swap1
sstore
pop
0x0
0x5
dup2
swap1
sstore
pop
0x0
0x6
dup2
swap1
sstore
pop
0x0
0x4
0x0
0x100
exp
dup2
sload
dup2
0xffffffff
mul
not
and
swap1
dup4
0xffffffff
and
mul
or
swap1
sstore
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x5841b9bf
eq
tag
_2
jumpi
dup1
0x816f3f4d
eq
tag
_3
jumpi
dup1
0xbd6bbc31
eq
tag
_4
jumpi
dup1
0xbd7b09e4
eq
tag
_5
jumpi
dup1
0xd954cbcb
eq
tag
_6
jumpi
dup1
0xe2202a4d
eq
tag
_7
jumpi
dup1
0xe684aa5c
eq
tag
_8
jumpi
dup1
0xf113fccd
eq
tag
_9
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_10
jumpi
0x0
dup1
revert
tag
_10
pop
tag
_11
jump
(
tag
_12
)
tag
_11
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_13
jumpi
0x0
dup1
revert
tag
_13
pop
tag
_14
jump
(
tag
_15
)
tag
_14
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_16
jumpi
0x0
dup1
revert
tag
_16
pop
tag
_17
jump
(
tag
_18
)
tag
_17
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
callvalue
dup1
iszero
tag
_19
jumpi
0x0
dup1
revert
tag
_19
pop
tag
_20
jump
(
tag
_21
)
tag
_20
mload
(
0x40
)
dup1
dup3
0xffffffff
and
0xffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_6
callvalue
dup1
iszero
tag
_22
jumpi
0x0
dup1
revert
tag
_22
pop
tag
_23
jump
(
tag
_24
)
tag
_23
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_7
callvalue
dup1
iszero
tag
_25
jumpi
0x0
dup1
revert
tag
_25
pop
tag
_26
jump
(
tag
_27
)
tag
_26
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_8
callvalue
dup1
iszero
tag
_28
jumpi
0x0
dup1
revert
tag
_28
pop
tag
_29
jump
(
tag
_30
)
tag
_29
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_9
callvalue
dup1
iszero
tag
_31
jumpi
0x0
dup1
revert
tag
_31
pop
tag
_32
jump
(
tag
_33
)
tag
_32
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_12
sload
(
0x3
)
dup2
jump	
tag
_15
0x4
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_18
sload
(
0x2
)
dup2
jump	
tag
_21
0x4
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffff
and
dup2
jump	
tag
_24
sload
(
0x6
)
dup2
jump	
tag
_27
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_30
sload
(
0x5
)
dup2
jump	
tag
_33
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
}
