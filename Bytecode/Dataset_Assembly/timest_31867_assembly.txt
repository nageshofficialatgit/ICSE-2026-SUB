
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xfbca6ba6
eq
tag
_2
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_3
jumpi
0x0
dup1
revert
tag
_3
pop
tag
_4
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_5
)
tag
_4
stop
tag
_5
0x278d00
sload
(
0x0
)
add
timestamp
gt
iszero
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
0xa
sload
(
0x1
)
dup2
iszero
iszero
tag
_8
jumpi
invalid
tag
_8
div
dup2
gt
iszero
iszero
iszero
tag
_9
jumpi
0x0
dup1
revert
tag
_9
dup1
0x1
0x0
dup3
dup3
sload
add
swap3
pop
pop
dup2
swap1
sstore
pop
pop
jump	
}
