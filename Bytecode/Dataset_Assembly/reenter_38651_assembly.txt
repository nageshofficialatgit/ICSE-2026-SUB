
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x41d40c1
eq
tag
_2
jumpi
dup1
0x70e9ff60
eq
tag
_3
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_4
jumpi
0x0
dup1
revert
tag
_4
pop
tag
_5
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
not
(
0x0
)
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_6
)
tag
_5
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
pop
tag
_8
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_9
)
tag
_8
stop
tag
_6
mstore
(
0x20
 0x0
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_9
0x0
dup1
0x2
dup5
dup5
caller
mload
(
0x40
)
dup1
dup5
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0x1000000000000000000000000
mul
dup2
mstore
0x14
add
dup4
dup2
mstore
0x20
add
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0x1000000000000000000000000
mul
dup2
mstore
0x14
add
swap4
pop
pop
pop
pop
0x20
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup7
gas
call
iszero
dup1
iszero
tag
_11
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_11
pop
pop
pop
mload
(
0x40
)
returndatasize
0x20
dup2
lt
iszero
tag
_12
jumpi
0x0
dup1
revert
tag
_12
dup2
add
swap1
dup1
dup1
mload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
swap2
pop
0x0
dup1
dup4
not
(
0x0
)
and
not
(
0x0
)
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
swap1
pop
0x0
dup1
dup4
not
(
0x0
)
and
not
(
0x0
)
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sstore
caller
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup8
gas
call
swap3
pop
pop
pop
iszero
iszero
tag
_13
jumpi
0x0
dup1
revert
tag
_13
pop
pop
pop
pop
jump	
}
