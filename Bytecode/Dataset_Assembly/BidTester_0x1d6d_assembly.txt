
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x00
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x00
codecopy
0x00
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x04
)
)
shr
(
0xe0
 calldataload
(
0x00
)
)
dup1
0x4a39354f
eq
tag
_2
jumpi
tag
_1
0x00
dup1
revert
tag
_2
tag
_3
tag
_4
jump	tag
_3
stop
tag
_4
0x00
dup1
coinbase
0xffffffffffffffffffffffffffffffffffffffff
and
callvalue
mload
(
0x40
)
tag
_6
swap1
tag
_7
jump	tag
_6
0x00
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup8
gas
call
swap3
pop
pop
pop
returndatasize
dup1
0x00
dup2
eq
tag
_10
jumpi
mload
(
0x40
)
swap2
pop
and
(
add
(
returndatasize
 0x3f
)
 not
(
0x1f
)
)
dup3
add
0x40
mstore
returndatasize
dup3
mstore
returndatasize
0x00
0x20
dup5
add
returndatacopy
jump
(
tag
_9
)
tag
_10
0x60
swap2
pop
tag
_9
pop
swap2
pop
swap2
pop
dup2
tag
_11
jumpi
mload
(
0x40
)
0x08c379a000000000000000000000000000000000000000000000000000000000
dup2
mstore
0x04
add
tag
_12
swap1
tag
_13
jump	tag
_12
mload
(
0x40
)
dup1
swap2
sub
swap1
revert
tag
_11
pop
pop
jump	
tag
_14
0x00
dup2
swap1
pop
swap3
swap2
pop
pop
jump	
tag
_15
pop
jump	
tag
_16
0x00
tag
_24
0x00
dup4
tag
_14
jump	tag
_24
swap2
pop
tag
_25
dup3
tag
_15
jump	tag
_25
0x00
dup3
add
swap1
pop
swap2
swap1
pop
jump	
tag
_7
0x00
tag
_27
dup3
tag
_16
jump	tag
_27
swap2
pop
dup2
swap1
pop
swap2
swap1
pop
jump	
tag
_17
0x00
dup3
dup3
mstore
0x20
dup3
add
swap1
pop
swap3
swap2
pop
pop
jump	
tag
_18
0x4661696c656420746f2073656e6420457468657220766961202e63616c6c0000
0x00
dup3
add
mstore
pop
jump	
tag
_19
0x00
tag
_31
0x1e
dup4
tag
_17
jump	tag
_31
swap2
pop
tag
_32
dup3
tag
_18
jump	tag
_32
0x20
dup3
add
swap1
pop
swap2
swap1
pop
jump	
tag
_13
0x00
0x20
dup3
add
swap1
pop
dup2
dup2
sub
0x00
dup4
add
mstore
tag
_34
dup2
tag
_19
jump	tag
_34
swap1
pop
swap2
swap1
pop
jump	
}
