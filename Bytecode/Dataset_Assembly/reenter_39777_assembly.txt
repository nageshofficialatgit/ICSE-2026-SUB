
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x1e7c27cb
eq
tag
_2
jumpi
dup1
0x26767cfe
eq
tag
_3
jumpi
dup1
0x27e235e3
eq
tag
_4
jumpi
dup1
0x2f54bf6e
eq
tag
_5
jumpi
dup1
0x9741efe4
eq
tag
_6
jumpi
dup1
0xfaee4a10
eq
tag
_7
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_8
jumpi
0x0
dup1
revert
tag
_8
pop
tag
_9
jump
(
tag
_10
)
tag
_9
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
pop
tag
_12
jump
(
tag
_13
)
tag
_12
stop
tag
_4
callvalue
dup1
iszero
tag
_14
jumpi
0x0
dup1
revert
tag
_14
pop
tag
_15
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_16
)
tag
_15
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
callvalue
dup1
iszero
tag
_17
jumpi
0x0
dup1
revert
tag
_17
pop
tag
_18
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_19
)
tag
_18
mload
(
0x40
)
dup1
dup3
iszero
iszero
iszero
iszero
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_6
callvalue
dup1
iszero
tag
_20
jumpi
0x0
dup1
revert
tag
_20
pop
tag
_21
jump
(
tag
_22
)
tag
_21
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_7
callvalue
dup1
iszero
tag
_23
jumpi
0x0
dup1
revert
tag
_23
pop
tag
_24
jump
(
tag
_25
)
tag
_24
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_10
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_13
0x0
0x3
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xff
and
iszero
iszero
tag
_27
jumpi
0x0
dup1
revert
tag
_27
sload
(
0x1
)
sload
(
0x2
)
gt
iszero
iszero
tag
_29
jumpi
0x0
dup1
revert
tag
_29
sload
(
0x1
)
sload
(
0x2
)
sub
swap1
pop
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup8
gas
call
swap3
pop
pop
pop
iszero
iszero
tag
_30
jumpi
0x0
dup1
revert
tag
_30
dup1
0x2
0x0
dup3
dup3
sload
sub
swap3
pop
pop
dup2
swap1
sstore
pop
dup1
0x4
0x0
dup1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup3
dup3
sload
sub
swap3
pop
pop
dup2
swap1
sstore
pop
pop
jump	
tag
_16
mstore
(
0x20
 0x4
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_19
mstore
(
0x20
 0x3
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
sload
swap1
0x100
exp
swap1
div
0xff
and
dup2
jump	
tag
_22
sload
(
0x2
)
dup2
jump	
tag
_25
sload
(
0x1
)
dup2
jump	
}
