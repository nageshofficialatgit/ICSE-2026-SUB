
mstore
(
0x40
 0x60
)
caller
0x1
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
jumpi
(
tag
_1
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_1
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xa6f9dae1
eq
tag
_2
jumpi
dup1
0xbd9b6d86
eq
tag
_3
jumpi
tag
_1
0x0
dup1
revert
tag
_2
jumpi
(
tag
_4
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_4
tag
_5
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_6
)
tag
_5
stop
tag
_3
jumpi
(
tag
_7
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_7
tag
_8
jump
(
tag
_9
)
tag
_8
stop
tag
_6
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
tag
_11
jumpi
dup1
0x0
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
tag
_11
pop
jump	
tag
_9
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
tag
_14
jumpi
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
tag
_14
jump	
}
mstore
(
0x40
 0x60
)
caller
0x1
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
caller
0x2
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
jumpi
(
tag
_1
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_1
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xa6f9dae1
eq
tag
_2
jumpi
dup1
0xbd9b6d86
eq
tag
_3
jumpi
dup1
0xc7de2d13
eq
tag
_4
jumpi
tag
_1
0x0
dup1
revert
tag
_2
jumpi
(
tag
_5
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_5
tag
_6
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_7
)
tag
_6
stop
tag
_3
jumpi
(
tag
_8
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_8
tag
_9
jump
(
tag
_10
)
tag
_9
stop
tag
_4
jumpi
(
tag
_11
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_11
tag
_12
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_13
)
tag
_12
stop
tag
_7
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
tag
_15
jumpi
dup1
0x0
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
tag
_15
pop
jump	
tag
_10
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
tag
_18
jumpi
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
tag
_18
jump	
tag
_13
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
tag
_20
jumpi
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
mload
(
0x40
)
dup1
dup1
0x7472616e7366657228616464726573732c75696e743235362900000000000000
dup2
mstore
pop
0x19
add
swap1
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
keccak256
0x100000000000000000000000000000000000000000000000000000000
swap1
div
dup3
dup5
mload
(
0x40
)
dup4
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
dup1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
dup3
dup2
mstore
0x20
add
swap3
pop
pop
pop
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup8
sub
(
gas
 0x646e
)
call
swap3
pop
pop
pop
pop
tag
_20
pop
pop
pop
jump	
}
mstore
(
0x40
 0x60
)
caller
0x1
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
caller
0x2
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
jumpi
(
tag
_1
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_1
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x11bcd830
eq
tag
_2
jumpi
dup1
0x290b1e5f
eq
tag
_3
jumpi
dup1
0x2e2a51bd
eq
tag
_4
jumpi
dup1
0xa6f9dae1
eq
tag
_5
jumpi
dup1
0xbd9b6d86
eq
tag
_6
jumpi
dup1
0xc7de2d13
eq
tag
_7
jumpi
dup1
0xed21248c
eq
tag
_8
jumpi
dup1
0xeec0ddd7
eq
tag
_9
jumpi
dup1
0xf8ff612e
eq
tag
_10
jumpi
tag
_1
tag
_13
tag
_14
jump	tag
_13
stop
tag
_2
jumpi
(
tag
_15
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_15
tag
_16
jump
(
tag
_17
)
tag
_16
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
jumpi
(
tag
_18
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_18
tag
_19
jump
(
tag
_20
)
tag
_19
stop
tag
_4
jumpi
(
tag
_21
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_21
tag
_22
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_23
)
tag
_22
stop
tag
_5
jumpi
(
tag
_24
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_24
tag
_25
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_26
)
tag
_25
stop
tag
_6
jumpi
(
tag
_27
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_27
tag
_28
jump
(
tag
_29
)
tag
_28
stop
tag
_7
jumpi
(
tag
_30
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_30
tag
_31
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_32
)
tag
_31
stop
tag
_8
tag
_33
jump
(
tag
_14
)
tag
_33
stop
tag
_9
jumpi
(
tag
_34
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_34
tag
_35
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_36
)
tag
_35
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_10
tag
_37
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_38
)
tag
_37
stop
tag
_14
sload
(
0x3
)
callvalue
gt
iszero
tag
_40
jumpi
callvalue
0x4
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup3
dup3
sload
add
swap3
pop
pop
dup2
swap1
sstore
pop
tag
_40
jump	
tag
_17
sload
(
0x3
)
dup2
jump	
tag
_20
caller
0x2
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
0xde0b6b3a7640000
0x3
dup2
swap1
sstore
pop
jump	
tag
_23
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
tag
_43
jumpi
0x0
0x4
0x0
dup6
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
gt
iszero
tag
_45
jumpi
0x0
0x4
0x0
dup6
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
dup2
swap1
sstore
pop
tag
_46
dup3
dup3
dup6
tag
_32
jump	tag
_46
tag
_45
tag
_43
pop
pop
pop
jump	
tag
_26
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
tag
_48
jumpi
dup1
0x0
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
tag
_48
pop
jump	
tag
_29
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
tag
_51
jumpi
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
tag
_51
jump	
tag
_32
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
tag
_53
jumpi
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
mload
(
0x40
)
dup1
dup1
0x7472616e7366657228616464726573732c75696e743235362900000000000000
dup2
mstore
pop
0x19
add
swap1
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
keccak256
0x100000000000000000000000000000000000000000000000000000000
swap1
div
dup3
dup5
mload
(
0x40
)
dup4
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
dup1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
dup3
dup2
mstore
0x20
add
swap3
pop
pop
pop
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup8
sub
(
gas
 0x646e
)
call
swap3
pop
pop
pop
pop
tag
_53
pop
pop
pop
jump	
tag
_36
mstore
(
0x20
 0x4
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_38
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
tag
_56
jumpi
0x0
0x4
0x0
dup5
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
gt
iszero
tag
_58
jumpi
dup2
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup8
sub
(
gas
 0x8796
)
call
swap3
pop
pop
pop
iszero
tag
_59
jumpi
dup1
0x4
0x0
dup5
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup3
dup3
sload
sub
swap3
pop
pop
dup2
swap1
sstore
pop
tag
_59
tag
_58
tag
_56
pop
pop
jump	
}
