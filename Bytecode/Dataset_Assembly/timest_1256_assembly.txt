
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x84304ee5
eq
tag
_2
jumpi
dup1
0x8b63c86f
eq
tag
_3
jumpi
dup1
0x8da5cb5b
eq
tag
_4
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_5
jumpi
0x0
dup1
revert
tag
_5
pop
tag
_6
jump
(
tag
_7
)
tag
_6
mload
(
0x40
)
dup1
dup5
0xffffffff
and
0xffffffff
and
dup2
mstore
0x20
add
dup4
0xffffffff
and
0xffffffff
and
dup2
mstore
0x20
add
dup3
0xffffffff
and
0xffffffff
and
dup2
mstore
0x20
add
swap4
pop
pop
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
tag
_8
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
dup1
calldataload
0xffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_9
)
tag
_8
mload
(
0x40
)
dup1
dup3
0xffffffff
and
0xffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_10
jumpi
0x0
dup1
revert
tag
_10
pop
tag
_11
jump
(
tag
_12
)
tag
_11
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_7
0x0
dup1
0x0
add
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffff
and
swap1
dup1
0x0
add
0x4
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffff
and
swap1
dup1
0x0
add
0x8
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffff
and
swap1
pop
dup4
jump	
tag
_9
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_14
jumpi
0x0
dup1
revert
tag
_14
timestamp
0x0
dup1
add
0x0
0x100
exp
dup2
sload
dup2
0xffffffff
mul
not
and
swap1
dup4
0xffffffff
and
mul
or
swap1
sstore
pop
dup3
0x0
dup1
add
0x4
0x100
exp
dup2
sload
dup2
0xffffffff
mul
not
and
swap1
dup4
0xffffffff
and
mul
or
swap1
sstore
pop
dup2
0x0
dup1
add
0x8
0x100
exp
dup2
sload
dup2
0xffffffff
mul
not
and
swap1
dup4
0xffffffff
and
mul
or
swap1
sstore
pop
0x0
dup1
add
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffff
and
swap1
pop
swap3
swap2
pop
pop
jump	
tag
_12
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
}
