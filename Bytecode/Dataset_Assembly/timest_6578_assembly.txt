
mstore
(
0x40
 0x80
)
0xa0
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
0x0
0xffffff
and
dup2
mstore
0x20
add
0xa8c0
0xffffff
and
dup2
mstore
0x20
add
0xfd20
0xffffff
and
dup2
mstore
0x20
add
0x12750
0xffffff
and
dup2
mstore
0x20
add
0x13560
0xffffff
and
dup2
mstore
pop
0x0
swap1
0x5
tag
_1
swap3
swap2
swap1
jump	tag
_1
pop
0xa0
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
0xde0b6b3a7640000
0xffffffffffffffffffff
and
dup2
mstore
0x20
add
0x1bc16d674ec80000
0xffffffffffffffffffff
and
dup2
mstore
0x20
add
0x3782dace9d900000
0xffffffffffffffffffff
and
dup2
mstore
0x20
add
0x6f05b59d3b200000
0xffffffffffffffffffff
and
dup2
mstore
0x20
add
0x10f0cf064dd59200000
0xffffffffffffffffffff
and
dup2
mstore
pop
0x1
swap1
0x5
tag
_3
swap3
swap2
swap1
jump	tag
_3
pop
0x0
0x2
sstore
callvalue
dup1
iszero
tag
_5
jumpi
0x0
dup1
revert
tag
_5
pop
jump
(
tag
_6
)
tag
_2
dup3
dup1
sload
dup3
dup3
sstore
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
dup2
add
swap3
dup3
iszero
tag
_7
jumpi
swap2
0x20
mul
dup3
add
tag
_8
dup3
dup2
gt
iszero
tag
_9
jumpi
dup3
mload
dup3
swap1
0xffffff
and
swap1
sstore
swap2
0x20
add
swap2
swap1
0x1
add
swap1
jump
(
tag
_8
)
tag
_9
tag
_7
pop
swap1
pop
tag
_10
swap2
swap1
jump	tag
_10
pop
swap1
jump	tag
_4
dup3
dup1
sload
dup3
dup3
sstore
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
dup2
add
swap3
dup3
iszero
tag
_12
jumpi
swap2
0x20
mul
dup3
add
tag
_13
dup3
dup2
gt
iszero
tag
_14
jumpi
dup3
mload
dup3
swap1
0xffffffffffffffffffff
and
swap1
sstore
swap2
0x20
add
swap2
swap1
0x1
add
swap1
jump
(
tag
_13
)
tag
_14
tag
_12
pop
swap1
pop
tag
_15
swap2
swap1
jump	tag
_15
pop
swap1
jump	tag
_11
tag
_16
swap2
swap1
tag
_17
dup1
dup3
gt
iszero
tag
_18
jumpi
0x0
dup2
0x0
swap1
sstore
pop
0x1
add
jump
(
tag
_17
)
tag
_18
pop
swap1
jump
tag
_16
swap1
jump	tag
_6
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x10bb080e
eq
tag
_2
jumpi
dup1
0xdf7c7c8f
eq
tag
_3
jumpi
dup1
0xf43abdf3
eq
tag
_4
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_5
jumpi
0x0
dup1
revert
tag
_5
pop
tag
_6
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_7
)
tag
_6
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_8
jumpi
0x0
dup1
revert
tag
_8
pop
tag
_9
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_10
)
tag
_9
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
pop
tag
_12
jump
(
tag
_13
)
tag
_12
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_7
0x1
dup2
dup2
sload
dup2
lt
iszero
iszero
tag
_14
jumpi
invalid
tag
_14
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_10
0x0
dup2
dup2
sload
dup2
lt
iszero
iszero
tag
_16
jumpi
invalid
tag
_16
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_13
0x0
dup1
0x0
0x64
timestamp
sub
swap2
pop
0x0
swap1
pop
tag
_19
0x1
dup1
sload
swap1
pop
dup2
lt
iszero
tag
_20
jumpi
0x0
dup2
dup2
sload
dup2
lt
iszero
iszero
tag
_22
jumpi
invalid
tag
_22
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
sload
dup3
lt
iszero
tag
_24
jumpi
jump
(
tag
_21
)
tag
_24
0x1
dup2
dup2
sload
dup2
lt
iszero
iszero
tag
_25
jumpi
invalid
tag
_25
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
sload
0x2
dup2
swap1
sstore
pop
tag
_21
dup1
dup1
0x1
add
swap2
pop
pop
jump
(
tag
_19
)
tag
_20
sload
(
0x2
)
swap3
pop
pop
pop
swap1
jump	
}
