
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x1865c57d
eq
tag
_2
jumpi
dup1
0xaf468682
eq
tag
_3
jumpi
dup1
0xb3f05b97
eq
tag
_4
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_5
jumpi
0x0
dup1
revert
tag
_5
pop
tag
_6
jump
(
tag
_7
)
tag
_6
mload
(
0x40
)
dup1
dup3
0x2
dup2
gt
iszero
tag
_8
jumpi
invalid
tag
_8
0xff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_9
jumpi
0x0
dup1
revert
tag
_9
pop
tag
_10
jump
(
tag
_11
)
tag
_10
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_12
jumpi
0x0
dup1
revert
tag
_12
pop
tag
_13
jump
(
tag
_14
)
tag
_13
mload
(
0x40
)
dup1
dup3
iszero
iszero
iszero
iszero
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_7
0x0
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xff
and
iszero
tag
_16
jumpi
0x2
swap1
pop
jump
(
tag
_15
)
tag
_16
sload
(
0x0
)
timestamp
lt
iszero
tag
_18
jumpi
0x0
swap1
pop
jump
(
tag
_15
)
tag
_18
0x1
swap1
pop
tag
_15
swap1
jump	
tag
_11
sload
(
0x0
)
dup2
jump	
tag
_14
0x1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xff
and
dup2
jump	
}
