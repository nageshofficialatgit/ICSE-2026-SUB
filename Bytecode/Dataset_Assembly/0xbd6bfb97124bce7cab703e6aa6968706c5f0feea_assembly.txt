
.code
PUSH1 0x60		contract Campaign is TokenController
 Owned {
...
PUSH1 0x40		contract Campaign is TokenController
 Owned {
...
MSTORE			contract Campaign is TokenController
 Owned {
...
CALLVALUE			function Campaign
(
...
PUSH [ErrorTag]		function Campaign
(
...
JUMPI			function Campaign
(
...
PUSH1 0x40		function Campaign
(
...
MLOAD			function Campaign
(
...
PUSH1 0xA0		function Campaign
(
...
DUP1			function Campaign
(
...
PUSHSIZE		function Campaign
(
...
DUP4			function Campaign
(
...
CODECOPY			function Campaign
(
...
DUP2			function Campaign
(
...
ADD			function Campaign
(
...
PUSH1 0x40		function Campaign
(
...
MSTORE			function Campaign
(
...
DUP1			function Campaign
(
...
DUP1			function Campaign
(
...
MLOAD			function Campaign
(
...
SWAP1			function Campaign
(
...
PUSH1 0x20		function Campaign
(
...
ADD			function Campaign
(
...
SWAP1			function Campaign
(
...
SWAP2			function Campaign
(
...
SWAP1			function Campaign
(
...
DUP1			function Campaign
(
...
MLOAD			function Campaign
(
...
SWAP1			function Campaign
(
...
PUSH1 0x20		function Campaign
(
...
ADD			function Campaign
(
...
SWAP1			function Campaign
(
...
SWAP2			function Campaign
(
...
SWAP1			function Campaign
(
...
DUP1			function Campaign
(
...
MLOAD			function Campaign
(
...
SWAP1			function Campaign
(
...
PUSH1 0x20		function Campaign
(
...
ADD			function Campaign
(
...
SWAP1			function Campaign
(
...
SWAP2			function Campaign
(
...
SWAP1			function Campaign
(
...
DUP1			function Campaign
(
...
MLOAD			function Campaign
(
...
SWAP1			function Campaign
(
...
PUSH1 0x20		function Campaign
(
...
ADD			function Campaign
(
...
SWAP1			function Campaign
(
...
SWAP2			function Campaign
(
...
SWAP1			function Campaign
(
...
DUP1			function Campaign
(
...
MLOAD			function Campaign
(
...
SWAP1			function Campaign
(
...
PUSH1 0x20		function Campaign
(
...
ADD			function Campaign
(
...
SWAP1			function Campaign
(
...
SWAP2			function Campaign
(
...
SWAP1			function Campaign
(
...
POP			function Campaign
(
...
POP			function Campaign
(
...
tag1
 
JUMPDEST		function Campaign
(
...
tag2
 
JUMPDEST		function Owned
(
)
 { owner = msg.sender;}
CALLER			msg.sender
PUSH1 0x0		owner
PUSH1 0x0		owner
PUSH2 0x100		owner = msg.sender
EXP			owner = msg.sender
DUP2			owner = msg.sender
SLOAD			owner = msg.sender
DUP2			owner = msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = msg.sender
MUL			owner = msg.sender
NOT			owner = msg.sender
AND			owner = msg.sender
SWAP1			owner = msg.sender
DUP4			owner = msg.sender
PUSH13 0x1000000000000000000000000		owner = msg.sender
SWAP1			owner = msg.sender
DUP2			owner = msg.sender
MUL			owner = msg.sender
DIV			owner = msg.sender
MUL			owner = msg.sender
OR			owner = msg.sender
SWAP1			owner = msg.sender
SSTORE			owner = msg.sender
POP			owner = msg.sender
tag3
 
JUMPDEST		function Owned
(
)
 { owner = msg.sender;}
TIMESTAMP			now
DUP5			_endFundingTime
LT			_endFundingTime < now
DUP1			
(
_endFundingTime < now
)
 ||
...
PUSH [tag5]		
(
_endFundingTime < now
)
 ||
...
JUMPI			
(
_endFundingTime < now
)
 ||
...
POP			
(
_endFundingTime < now
)
 ||
...
DUP5			_startFundingTime
DUP5			_endFundingTime
GT			_endFundingTime <= _startFundingTime
ISZERO			_endFundingTime <= _startFundingTime
tag5
 
JUMPDEST		
(
_endFundingTime < now
)
 ||
...
DUP1			
(
_endFundingTime < now
)
 ||
...
PUSH [tag6]		
(
_endFundingTime < now
)
 ||
...
JUMPI			
(
_endFundingTime < now
)
 ||
...
POP			
(
_endFundingTime < now
)
 ||
...
PUSH10 0x21E19E0C9BAB2400000		10000 ether
DUP4			_maximumFunding
GT			_maximumFunding > 10000 ether
tag6
 
JUMPDEST		
(
_endFundingTime < now
)
 ||
...
DUP1			
(
_endFundingTime < now
)
 ||
...
PUSH [tag7]		
(
_endFundingTime < now
)
 ||
...
JUMPI			
(
_endFundingTime < now
)
 ||
...
POP			
(
_endFundingTime < now
)
 ||
...
PUSH1 0x0		0
DUP3			_vaultAddress
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_vaultAddress == 0
AND			_vaultAddress == 0
EQ			_vaultAddress == 0
tag7
 
JUMPDEST		
(
_endFundingTime < now
)
 ||
...
ISZERO			if 
(
(
_endFundingTime < now
)
 ||
...
PUSH [tag8]		if 
(
(
_endFundingTime < now
)
 ||
...
JUMPI			if 
(
(
_endFundingTime < now
)
 ||
...
PUSH [ErrorTag]		throw
JUMP			throw
tag8
 
JUMPDEST		if 
(
(
_endFundingTime < now
)
 ||
...
DUP5			_startFundingTime
PUSH1 0x1		startFundingTime
DUP2			startFundingTime = _startFundingTime
SWAP1			startFundingTime = _startFundingTime
SSTORE			startFundingTime = _startFundingTime
POP			startFundingTime = _startFundingTime
DUP4			_endFundingTime
PUSH1 0x2		endFundingTime
DUP2			endFundingTime = _endFundingTime
SWAP1			endFundingTime = _endFundingTime
SSTORE			endFundingTime = _endFundingTime
POP			endFundingTime = _endFundingTime
DUP3			_maximumFunding
PUSH1 0x3		maximumFunding
DUP2			maximumFunding = _maximumFunding
SWAP1			maximumFunding = _maximumFunding
SSTORE			maximumFunding = _maximumFunding
POP			maximumFunding = _maximumFunding
DUP1			_tokenAddress
PUSH1 0x5		tokenContract
PUSH1 0x0		tokenContract
PUSH2 0x100		tokenContract = MiniMeToken
(
_tokenAddress
)
EXP			tokenContract = MiniMeToken
(
_tokenAddress
)
DUP2			tokenContract = MiniMeToken
(
_tokenAddress
)
SLOAD			tokenContract = MiniMeToken
(
_tokenAddress
)
DUP2			tokenContract = MiniMeToken
(
_tokenAddress
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenContract = MiniMeToken
(
_tokenAddress
)
MUL			tokenContract = MiniMeToken
(
_tokenAddress
)
NOT			tokenContract = MiniMeToken
(
_tokenAddress
)
AND			tokenContract = MiniMeToken
(
_tokenAddress
)
SWAP1			tokenContract = MiniMeToken
(
_tokenAddress
)
DUP4			tokenContract = MiniMeToken
(
_tokenAddress
)
PUSH13 0x1000000000000000000000000		tokenContract = MiniMeToken
(
_tokenAddress
)
SWAP1			tokenContract = MiniMeToken
(
_tokenAddress
)
DUP2			tokenContract = MiniMeToken
(
_tokenAddress
)
MUL			tokenContract = MiniMeToken
(
_tokenAddress
)
DIV			tokenContract = MiniMeToken
(
_tokenAddress
)
MUL			tokenContract = MiniMeToken
(
_tokenAddress
)
OR			tokenContract = MiniMeToken
(
_tokenAddress
)
SWAP1			tokenContract = MiniMeToken
(
_tokenAddress
)
SSTORE			tokenContract = MiniMeToken
(
_tokenAddress
)
POP			tokenContract = MiniMeToken
(
_tokenAddress
)
DUP2			_vaultAddress
PUSH1 0x6		vaultAddress
PUSH1 0x0		vaultAddress
PUSH2 0x100		vaultAddress = _vaultAddress
EXP			vaultAddress = _vaultAddress
DUP2			vaultAddress = _vaultAddress
SLOAD			vaultAddress = _vaultAddress
DUP2			vaultAddress = _vaultAddress
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		vaultAddress = _vaultAddress
MUL			vaultAddress = _vaultAddress
NOT			vaultAddress = _vaultAddress
AND			vaultAddress = _vaultAddress
SWAP1			vaultAddress = _vaultAddress
DUP4			vaultAddress = _vaultAddress
PUSH13 0x1000000000000000000000000		vaultAddress = _vaultAddress
SWAP1			vaultAddress = _vaultAddress
DUP2			vaultAddress = _vaultAddress
MUL			vaultAddress = _vaultAddress
DIV			vaultAddress = _vaultAddress
MUL			vaultAddress = _vaultAddress
OR			vaultAddress = _vaultAddress
SWAP1			vaultAddress = _vaultAddress
SSTORE			vaultAddress = _vaultAddress
POP			vaultAddress = _vaultAddress
tag4
 
JUMPDEST		function Campaign
(
...
POP			function Campaign
(
...
POP			function Campaign
(
...
POP			function Campaign
(
...
POP			function Campaign
(
...
POP			function Campaign
(
...
tag9
 
JUMPDEST		contract Campaign is TokenController
 Owned {
...
PUSH #[$0]		contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH [$0]		contract Campaign is TokenController
 Owned {
...
PUSH1 0x0		contract Campaign is TokenController
 Owned {
...
CODECOPY			contract Campaign is TokenController
 Owned {
...
PUSH1 0x0		contract Campaign is TokenController
 Owned {
...
RETURN			contract Campaign is TokenController
 Owned {
...
.data
0
 
.code
PUSH1 0x60		contract Campaign is TokenController
 Owned {
...
PUSH1 0x40		contract Campaign is TokenController
 Owned {
...
MSTORE			contract Campaign is TokenController
 Owned {
...
CALLDATASIZE			contract Campaign is TokenController
 Owned {
...
ISZERO			contract Campaign is TokenController
 Owned {
...
PUSH [tag1]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
PUSH1 0x0		contract Campaign is TokenController
 Owned {
...
CALLDATALOAD			contract Campaign is TokenController
 Owned {
...
PUSH29 0x100000000000000000000000000000000000000000000000000000000		contract Campaign is TokenController
 Owned {
...
SWAP1			contract Campaign is TokenController
 Owned {
...
DIV			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0x430BF08A		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag2]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0x4A393149		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag3]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0x55A373D6		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag4]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0x6817031B		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag5]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0x8DA5CB5B		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag6]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0x99D64AB0		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag7]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0xA19ED39D		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag8]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0xA6F9DAE1		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag9]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0xB75ECE9C		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag10]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0xDA682AEB		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag11]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0xE29EB836		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag12]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0xE4693E98		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag13]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
DUP1			contract Campaign is TokenController
 Owned {
...
PUSH4 0xF48C3054		contract Campaign is TokenController
 Owned {
...
EQ			contract Campaign is TokenController
 Owned {
...
PUSH [tag14]		contract Campaign is TokenController
 Owned {
...
JUMPI			contract Campaign is TokenController
 Owned {
...
tag1
 
JUMPDEST		contract Campaign is TokenController
 Owned {
...
PUSH [tag15]		contract Campaign is TokenController
 Owned {
...
tag16
 
JUMPDEST		function 
(
)
payable {
...
PUSH [tag18]		doPayment
(
msg.sender
)
CALLER			msg.sender
PUSH [tag19]		doPayment
JUMP	[in]		doPayment
(
msg.sender
)
tag18
 
JUMPDEST		doPayment
(
msg.sender
)
tag17
 
JUMPDEST		function 
(
)
payable {
...
JUMP	[out]		function 
(
)
payable {
...
tag15
 
JUMPDEST		contract Campaign is TokenController
 Owned {
...
STOP			contract Campaign is TokenController
 Owned {
...
tag2
 
JUMPDEST		address public vaultAddress
CALLVALUE			address public vaultAddress
PUSH [ErrorTag]		address public vaultAddress
JUMPI			address public vaultAddress
PUSH [tag20]		address public vaultAddress
PUSH [tag21]		address public vaultAddress
JUMP			address public vaultAddress
tag20
 
JUMPDEST		address public vaultAddress
PUSH1 0x40		address public vaultAddress
MLOAD			address public vaultAddress
DUP1			address public vaultAddress
DUP3			address public vaultAddress
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public vaultAddress
AND			address public vaultAddress
DUP2			address public vaultAddress
MSTORE			address public vaultAddress
PUSH1 0x20		address public vaultAddress
ADD			address public vaultAddress
SWAP2			address public vaultAddress
POP			address public vaultAddress
POP			address public vaultAddress
PUSH1 0x40		address public vaultAddress
MLOAD			address public vaultAddress
DUP1			address public vaultAddress
SWAP2			address public vaultAddress
SUB			address public vaultAddress
SWAP1			address public vaultAddress
RETURN			address public vaultAddress
tag3
 
JUMPDEST		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
CALLVALUE			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH [ErrorTag]		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
JUMPI			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH [tag22]		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH1 0x4		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
DUP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
DUP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
CALLDATALOAD			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH1 0x20		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
ADD			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP2			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
DUP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
CALLDATALOAD			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH1 0x20		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
ADD			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP2			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
DUP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
CALLDATALOAD			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH1 0x20		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
ADD			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP2			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
POP			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
POP			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH [tag23]		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
JUMP			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
tag22
 
JUMPDEST		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH1 0x40		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
MLOAD			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
DUP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
DUP3			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
ISZERO			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
ISZERO			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
DUP2			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
MSTORE			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH1 0x20		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
ADD			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP2			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
POP			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
POP			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH1 0x40		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
MLOAD			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
DUP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP2			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SUB			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP1			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
RETURN			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
tag4
 
JUMPDEST		MiniMeToken public tokenContract
CALLVALUE			MiniMeToken public tokenContract
PUSH [ErrorTag]		MiniMeToken public tokenContract
JUMPI			MiniMeToken public tokenContract
PUSH [tag24]		MiniMeToken public tokenContract
PUSH [tag25]		MiniMeToken public tokenContract
JUMP			MiniMeToken public tokenContract
tag24
 
JUMPDEST		MiniMeToken public tokenContract
PUSH1 0x40		MiniMeToken public tokenContract
MLOAD			MiniMeToken public tokenContract
DUP1			MiniMeToken public tokenContract
DUP3			MiniMeToken public tokenContract
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		MiniMeToken public tokenContract
AND			MiniMeToken public tokenContract
DUP2			MiniMeToken public tokenContract
MSTORE			MiniMeToken public tokenContract
PUSH1 0x20		MiniMeToken public tokenContract
ADD			MiniMeToken public tokenContract
SWAP2			MiniMeToken public tokenContract
POP			MiniMeToken public tokenContract
POP			MiniMeToken public tokenContract
PUSH1 0x40		MiniMeToken public tokenContract
MLOAD			MiniMeToken public tokenContract
DUP1			MiniMeToken public tokenContract
SWAP2			MiniMeToken public tokenContract
SUB			MiniMeToken public tokenContract
SWAP1			MiniMeToken public tokenContract
RETURN			MiniMeToken public tokenContract
tag5
 
JUMPDEST		function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
CALLVALUE			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
PUSH [ErrorTag]		function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
JUMPI			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
PUSH [tag26]		function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
PUSH1 0x4		function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
DUP1			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
DUP1			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
CALLDATALOAD			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
SWAP1			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
PUSH1 0x20		function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
ADD			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
SWAP1			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
SWAP2			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
SWAP1			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
POP			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
POP			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
PUSH [tag27]		function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
JUMP			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
tag26
 
JUMPDEST		function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
STOP			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
tag6
 
JUMPDEST		address public owner
CALLVALUE			address public owner
PUSH [ErrorTag]		address public owner
JUMPI			address public owner
PUSH [tag28]		address public owner
PUSH [tag29]		address public owner
JUMP			address public owner
tag28
 
JUMPDEST		address public owner
PUSH1 0x40		address public owner
MLOAD			address public owner
DUP1			address public owner
DUP3			address public owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
AND			address public owner
DUP2			address public owner
MSTORE			address public owner
PUSH1 0x20		address public owner
ADD			address public owner
SWAP2			address public owner
POP			address public owner
POP			address public owner
PUSH1 0x40		address public owner
MLOAD			address public owner
DUP1			address public owner
SWAP2			address public owner
SUB			address public owner
SWAP1			address public owner
RETURN			address public owner
tag7
 
JUMPDEST		uint public maximumFunding
CALLVALUE			uint public maximumFunding
PUSH [ErrorTag]		uint public maximumFunding
JUMPI			uint public maximumFunding
PUSH [tag30]		uint public maximumFunding
PUSH [tag31]		uint public maximumFunding
JUMP			uint public maximumFunding
tag30
 
JUMPDEST		uint public maximumFunding
PUSH1 0x40		uint public maximumFunding
MLOAD			uint public maximumFunding
DUP1			uint public maximumFunding
DUP3			uint public maximumFunding
DUP2			uint public maximumFunding
MSTORE			uint public maximumFunding
PUSH1 0x20		uint public maximumFunding
ADD			uint public maximumFunding
SWAP2			uint public maximumFunding
POP			uint public maximumFunding
POP			uint public maximumFunding
PUSH1 0x40		uint public maximumFunding
MLOAD			uint public maximumFunding
DUP1			uint public maximumFunding
SWAP2			uint public maximumFunding
SUB			uint public maximumFunding
SWAP1			uint public maximumFunding
RETURN			uint public maximumFunding
tag8
 
JUMPDEST		function finalizeFunding
(
)
 {
...
CALLVALUE			function finalizeFunding
(
)
 {
...
PUSH [ErrorTag]		function finalizeFunding
(
)
 {
...
JUMPI			function finalizeFunding
(
)
 {
...
PUSH [tag32]		function finalizeFunding
(
)
 {
...
PUSH [tag33]		function finalizeFunding
(
)
 {
...
JUMP			function finalizeFunding
(
)
 {
...
tag32
 
JUMPDEST		function finalizeFunding
(
)
 {
...
STOP			function finalizeFunding
(
)
 {
...
tag9
 
JUMPDEST		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
CALLVALUE			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH [ErrorTag]		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
JUMPI			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH [tag34]		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH1 0x4		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
DUP1			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
DUP1			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
CALLDATALOAD			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
SWAP1			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH1 0x20		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
ADD			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
SWAP1			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
SWAP2			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
SWAP1			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
POP			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
POP			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH [tag35]		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
JUMP			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
tag34
 
JUMPDEST		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
STOP			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
tag10
 
JUMPDEST		uint public startFundingTime
CALLVALUE			uint public startFundingTime
PUSH [ErrorTag]		uint public startFundingTime
JUMPI			uint public startFundingTime
PUSH [tag36]		uint public startFundingTime
PUSH [tag37]		uint public startFundingTime
JUMP			uint public startFundingTime
tag36
 
JUMPDEST		uint public startFundingTime
PUSH1 0x40		uint public startFundingTime
MLOAD			uint public startFundingTime
DUP1			uint public startFundingTime
DUP3			uint public startFundingTime
DUP2			uint public startFundingTime
MSTORE			uint public startFundingTime
PUSH1 0x20		uint public startFundingTime
ADD			uint public startFundingTime
SWAP2			uint public startFundingTime
POP			uint public startFundingTime
POP			uint public startFundingTime
PUSH1 0x40		uint public startFundingTime
MLOAD			uint public startFundingTime
DUP1			uint public startFundingTime
SWAP2			uint public startFundingTime
SUB			uint public startFundingTime
SWAP1			uint public startFundingTime
RETURN			uint public startFundingTime
tag11
 
JUMPDEST		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
CALLVALUE			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH [ErrorTag]		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
JUMPI			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH [tag38]		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH1 0x4		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
DUP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
DUP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
CALLDATALOAD			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH1 0x20		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
ADD			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP2			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
DUP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
CALLDATALOAD			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH1 0x20		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
ADD			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP2			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
DUP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
CALLDATALOAD			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH1 0x20		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
ADD			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP2			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
POP			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
POP			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH [tag39]		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
JUMP			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
tag38
 
JUMPDEST		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH1 0x40		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
MLOAD			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
DUP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
DUP3			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
ISZERO			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
ISZERO			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
DUP2			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
MSTORE			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH1 0x20		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
ADD			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP2			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
POP			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
POP			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH1 0x40		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
MLOAD			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
DUP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP2			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SUB			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP1			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
RETURN			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
tag12
 
JUMPDEST		uint public totalCollected
CALLVALUE			uint public totalCollected
PUSH [ErrorTag]		uint public totalCollected
JUMPI			uint public totalCollected
PUSH [tag40]		uint public totalCollected
PUSH [tag41]		uint public totalCollected
JUMP			uint public totalCollected
tag40
 
JUMPDEST		uint public totalCollected
PUSH1 0x40		uint public totalCollected
MLOAD			uint public totalCollected
DUP1			uint public totalCollected
DUP3			uint public totalCollected
DUP2			uint public totalCollected
MSTORE			uint public totalCollected
PUSH1 0x20		uint public totalCollected
ADD			uint public totalCollected
SWAP2			uint public totalCollected
POP			uint public totalCollected
POP			uint public totalCollected
PUSH1 0x40		uint public totalCollected
MLOAD			uint public totalCollected
DUP1			uint public totalCollected
SWAP2			uint public totalCollected
SUB			uint public totalCollected
SWAP1			uint public totalCollected
RETURN			uint public totalCollected
tag13
 
JUMPDEST		uint public endFundingTime
CALLVALUE			uint public endFundingTime
PUSH [ErrorTag]		uint public endFundingTime
JUMPI			uint public endFundingTime
PUSH [tag42]		uint public endFundingTime
PUSH [tag43]		uint public endFundingTime
JUMP			uint public endFundingTime
tag42
 
JUMPDEST		uint public endFundingTime
PUSH1 0x40		uint public endFundingTime
MLOAD			uint public endFundingTime
DUP1			uint public endFundingTime
DUP3			uint public endFundingTime
DUP2			uint public endFundingTime
MSTORE			uint public endFundingTime
PUSH1 0x20		uint public endFundingTime
ADD			uint public endFundingTime
SWAP2			uint public endFundingTime
POP			uint public endFundingTime
POP			uint public endFundingTime
PUSH1 0x40		uint public endFundingTime
MLOAD			uint public endFundingTime
DUP1			uint public endFundingTime
SWAP2			uint public endFundingTime
SUB			uint public endFundingTime
SWAP1			uint public endFundingTime
RETURN			uint public endFundingTime
tag14
 
JUMPDEST		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
PUSH [tag44]		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
PUSH1 0x4		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
DUP1			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
DUP1			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
CALLDATALOAD			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
SWAP1			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
PUSH1 0x20		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
ADD			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
SWAP1			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
SWAP2			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
SWAP1			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
POP			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
POP			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
PUSH [tag45]		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
JUMP			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
tag44
 
JUMPDEST		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
PUSH1 0x40		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
MLOAD			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
DUP1			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
DUP3			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
ISZERO			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
ISZERO			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
DUP2			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
MSTORE			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
PUSH1 0x20		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
ADD			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
SWAP2			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
POP			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
POP			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
PUSH1 0x40		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
MLOAD			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
DUP1			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
SWAP2			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
SUB			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
SWAP1			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
RETURN			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
tag19
 
JUMPDEST		function doPayment
(
address _owner
)
 internal {
...
PUSH1 0x1		startFundingTime
SLOAD			startFundingTime
TIMESTAMP			now
LT			now<startFundingTime
DUP1			
(
now<startFundingTime
)
 ||
...
PUSH [tag47]		
(
now<startFundingTime
)
 ||
...
JUMPI			
(
now<startFundingTime
)
 ||
...
POP			
(
now<startFundingTime
)
 ||
...
PUSH1 0x2		endFundingTime
SLOAD			endFundingTime
TIMESTAMP			now
GT			now>endFundingTime
tag47
 
JUMPDEST		
(
now<startFundingTime
)
 ||
...
DUP1			
(
now<startFundingTime
)
 ||
...
PUSH [tag48]		
(
now<startFundingTime
)
 ||
...
JUMPI			
(
now<startFundingTime
)
 ||
...
POP			
(
now<startFundingTime
)
 ||
...
PUSH1 0x0		0
PUSH1 0x5		tokenContract
PUSH1 0x0		tokenContract
SWAP1			tokenContract
SLOAD			tokenContract
SWAP1			tokenContract
PUSH2 0x100		tokenContract
EXP			tokenContract
SWAP1			tokenContract
DIV			tokenContract
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenContract
AND			tokenContract
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenContract.controller
AND			tokenContract.controller
PUSH4 0xF77C4791		tokenContract.controller
PUSH1 0x0		tokenContract.controller
(
)
PUSH1 0x40		tokenContract.controller
(
)
MLOAD			tokenContract.controller
(
)
PUSH1 0x20		tokenContract.controller
(
)
ADD			tokenContract.controller
(
)
MSTORE			tokenContract.controller
(
)
PUSH1 0x40		tokenContract.controller
(
)
MLOAD			tokenContract.controller
(
)
DUP2			tokenContract.controller
(
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		tokenContract.controller
(
)
MUL			tokenContract.controller
(
)
DUP2			tokenContract.controller
(
)
MSTORE			tokenContract.controller
(
)
PUSH1 0x4		tokenContract.controller
(
)
ADD			tokenContract.controller
(
)
DUP1			tokenContract.controller
(
)
SWAP1			tokenContract.controller
(
)
POP			tokenContract.controller
(
)
PUSH1 0x20		tokenContract.controller
(
)
PUSH1 0x40		tokenContract.controller
(
)
MLOAD			tokenContract.controller
(
)
DUP1			tokenContract.controller
(
)
DUP4			tokenContract.controller
(
)
SUB			tokenContract.controller
(
)
DUP2			tokenContract.controller
(
)
PUSH1 0x0		tokenContract.controller
(
)
DUP8			tokenContract.controller
(
)
DUP1			tokenContract.controller
(
)
EXTCODESIZE			tokenContract.controller
(
)
ISZERO			tokenContract.controller
(
)
PUSH [ErrorTag]		tokenContract.controller
(
)
JUMPI			tokenContract.controller
(
)
PUSH1 0x32		tokenContract.controller
(
)
GAS			tokenContract.controller
(
)
SUB			tokenContract.controller
(
)
CALL			tokenContract.controller
(
)
ISZERO			tokenContract.controller
(
)
PUSH [ErrorTag]		tokenContract.controller
(
)
JUMPI			tokenContract.controller
(
)
POP			tokenContract.controller
(
)
POP			tokenContract.controller
(
)
POP			tokenContract.controller
(
)
PUSH1 0x40		tokenContract.controller
(
)
MLOAD			tokenContract.controller
(
)
DUP1			tokenContract.controller
(
)
MLOAD			tokenContract.controller
(
)
SWAP1			tokenContract.controller
(
)
PUSH1 0x20		tokenContract.controller
(
)
ADD			tokenContract.controller
(
)
POP			tokenContract.controller
(
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenContract.controller
(
)
 == 0
AND			tokenContract.controller
(
)
 == 0
EQ			tokenContract.controller
(
)
 == 0
tag48
 
JUMPDEST		
(
now<startFundingTime
)
 ||
...
DUP1			
(
now<startFundingTime
)
 ||
...
PUSH [tag49]		
(
now<startFundingTime
)
 ||
...
JUMPI			
(
now<startFundingTime
)
 ||
...
POP			
(
now<startFundingTime
)
 ||
...
PUSH1 0x0		0
CALLVALUE			msg.value
EQ			msg.value == 0
tag49
 
JUMPDEST		
(
now<startFundingTime
)
 ||
...
DUP1			
(
now<startFundingTime
)
 ||
...
PUSH [tag50]		
(
now<startFundingTime
)
 ||
...
JUMPI			
(
now<startFundingTime
)
 ||
...
POP			
(
now<startFundingTime
)
 ||
...
PUSH1 0x3		maximumFunding
SLOAD			maximumFunding
CALLVALUE			msg.value
PUSH1 0x4		totalCollected
SLOAD			totalCollected
ADD			totalCollected + msg.value
GT			totalCollected + msg.value > maximumFunding
tag50
 
JUMPDEST		
(
now<startFundingTime
)
 ||
...
ISZERO			if 
(
(
now<startFundingTime
)
 ||
...
PUSH [tag51]		if 
(
(
now<startFundingTime
)
 ||
...
JUMPI			if 
(
(
now<startFundingTime
)
 ||
...
PUSH [ErrorTag]		throw
JUMP			throw
tag51
 
JUMPDEST		if 
(
(
now<startFundingTime
)
 ||
...
CALLVALUE			msg.value
PUSH1 0x4		totalCollected
PUSH1 0x0		totalCollected
DUP3			totalCollected += msg.value
DUP3			totalCollected += msg.value
SLOAD			totalCollected += msg.value
ADD			totalCollected += msg.value
SWAP3			totalCollected += msg.value
POP			totalCollected += msg.value
POP			totalCollected += msg.value
DUP2			totalCollected += msg.value
SWAP1			totalCollected += msg.value
SSTORE			totalCollected += msg.value
POP			totalCollected += msg.value
PUSH1 0x6		vaultAddress
PUSH1 0x0		vaultAddress
SWAP1			vaultAddress
SLOAD			vaultAddress
SWAP1			vaultAddress
PUSH2 0x100		vaultAddress
EXP			vaultAddress
SWAP1			vaultAddress
DIV			vaultAddress
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		vaultAddress
AND			vaultAddress
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		vaultAddress.send
AND			vaultAddress.send
PUSH2 0x8FC		vaultAddress.send
(
msg.value
)
CALLVALUE			msg.value
SWAP1			vaultAddress.send
(
msg.value
)
DUP2			vaultAddress.send
(
msg.value
)
ISZERO			vaultAddress.send
(
msg.value
)
MUL			vaultAddress.send
(
msg.value
)
SWAP1			vaultAddress.send
(
msg.value
)
PUSH1 0x40		vaultAddress.send
(
msg.value
)
MLOAD			vaultAddress.send
(
msg.value
)
DUP1			vaultAddress.send
(
msg.value
)
SWAP1			vaultAddress.send
(
msg.value
)
POP			vaultAddress.send
(
msg.value
)
PUSH1 0x0		vaultAddress.send
(
msg.value
)
PUSH1 0x40		vaultAddress.send
(
msg.value
)
MLOAD			vaultAddress.send
(
msg.value
)
DUP1			vaultAddress.send
(
msg.value
)
DUP4			vaultAddress.send
(
msg.value
)
SUB			vaultAddress.send
(
msg.value
)
DUP2			vaultAddress.send
(
msg.value
)
DUP6			vaultAddress.send
(
msg.value
)
DUP9			vaultAddress.send
(
msg.value
)
DUP9			vaultAddress.send
(
msg.value
)
CALL			vaultAddress.send
(
msg.value
)
SWAP4			vaultAddress.send
(
msg.value
)
POP			vaultAddress.send
(
msg.value
)
POP			vaultAddress.send
(
msg.value
)
POP			vaultAddress.send
(
msg.value
)
POP			vaultAddress.send
(
msg.value
)
ISZERO			!vaultAddress.send
(
msg.value
)
ISZERO			if 
(
!vaultAddress.send
(
msg.value
)
)
 {
...
PUSH [tag52]		if 
(
!vaultAddress.send
(
msg.value
)
)
 {
...
JUMPI			if 
(
!vaultAddress.send
(
msg.value
)
)
 {
...
PUSH [ErrorTag]		throw
JUMP			throw
tag52
 
JUMPDEST		if 
(
!vaultAddress.send
(
msg.value
)
)
 {
...
PUSH1 0x5		tokenContract
PUSH1 0x0		tokenContract
SWAP1			tokenContract
SLOAD			tokenContract
SWAP1			tokenContract
PUSH2 0x100		tokenContract
EXP			tokenContract
SWAP1			tokenContract
DIV			tokenContract
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenContract
AND			tokenContract
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenContract.generateTokens
AND			tokenContract.generateTokens
PUSH4 0x827F32C0		tokenContract.generateTokens
DUP3			_owner
CALLVALUE			msg.value
PUSH1 0x0		tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x40		tokenContract.generateTokens
(
_owner
 msg.value
)
MLOAD			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x20		tokenContract.generateTokens
(
_owner
 msg.value
)
ADD			tokenContract.generateTokens
(
_owner
 msg.value
)
MSTORE			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x40		tokenContract.generateTokens
(
_owner
 msg.value
)
MLOAD			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP4			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		tokenContract.generateTokens
(
_owner
 msg.value
)
MUL			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP2			tokenContract.generateTokens
(
_owner
 msg.value
)
MSTORE			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x4		tokenContract.generateTokens
(
_owner
 msg.value
)
ADD			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP1			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP4			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenContract.generateTokens
(
_owner
 msg.value
)
AND			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP2			tokenContract.generateTokens
(
_owner
 msg.value
)
MSTORE			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x20		tokenContract.generateTokens
(
_owner
 msg.value
)
ADD			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP3			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP2			tokenContract.generateTokens
(
_owner
 msg.value
)
MSTORE			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x20		tokenContract.generateTokens
(
_owner
 msg.value
)
ADD			tokenContract.generateTokens
(
_owner
 msg.value
)
SWAP3			tokenContract.generateTokens
(
_owner
 msg.value
)
POP			tokenContract.generateTokens
(
_owner
 msg.value
)
POP			tokenContract.generateTokens
(
_owner
 msg.value
)
POP			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x20		tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x40		tokenContract.generateTokens
(
_owner
 msg.value
)
MLOAD			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP1			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP4			tokenContract.generateTokens
(
_owner
 msg.value
)
SUB			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP2			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x0		tokenContract.generateTokens
(
_owner
 msg.value
)
DUP8			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP1			tokenContract.generateTokens
(
_owner
 msg.value
)
EXTCODESIZE			tokenContract.generateTokens
(
_owner
 msg.value
)
ISZERO			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH [ErrorTag]		tokenContract.generateTokens
(
_owner
 msg.value
)
JUMPI			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x32		tokenContract.generateTokens
(
_owner
 msg.value
)
GAS			tokenContract.generateTokens
(
_owner
 msg.value
)
SUB			tokenContract.generateTokens
(
_owner
 msg.value
)
CALL			tokenContract.generateTokens
(
_owner
 msg.value
)
ISZERO			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH [ErrorTag]		tokenContract.generateTokens
(
_owner
 msg.value
)
JUMPI			tokenContract.generateTokens
(
_owner
 msg.value
)
POP			tokenContract.generateTokens
(
_owner
 msg.value
)
POP			tokenContract.generateTokens
(
_owner
 msg.value
)
POP			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x40		tokenContract.generateTokens
(
_owner
 msg.value
)
MLOAD			tokenContract.generateTokens
(
_owner
 msg.value
)
DUP1			tokenContract.generateTokens
(
_owner
 msg.value
)
MLOAD			tokenContract.generateTokens
(
_owner
 msg.value
)
SWAP1			tokenContract.generateTokens
(
_owner
 msg.value
)
PUSH1 0x20		tokenContract.generateTokens
(
_owner
 msg.value
)
ADD			tokenContract.generateTokens
(
_owner
 msg.value
)
POP			tokenContract.generateTokens
(
_owner
 msg.value
)
ISZERO			!tokenContract.generateTokens
(
_owner
 msg.value
)
ISZERO			if 
(
!tokenContract.generateTokens
(
_owner
 msg.value
)
)
 {
...
PUSH [tag53]		if 
(
!tokenContract.generateTokens
(
_owner
 msg.value
)
)
 {
...
JUMPI			if 
(
!tokenContract.generateTokens
(
_owner
 msg.value
)
)
 {
...
PUSH [ErrorTag]		throw
JUMP			throw
tag53
 
JUMPDEST		if 
(
!tokenContract.generateTokens
(
_owner
 msg.value
)
)
 {
...
tag46
 
JUMPDEST		function doPayment
(
address _owner
)
 internal {
...
POP			function doPayment
(
address _owner
)
 internal {
...
JUMP	[out]		function doPayment
(
address _owner
)
 internal {
...
tag21
 
JUMPDEST		address public vaultAddress
PUSH1 0x6		address public vaultAddress
PUSH1 0x0		address public vaultAddress
SWAP1			address public vaultAddress
SLOAD			address public vaultAddress
SWAP1			address public vaultAddress
PUSH2 0x100		address public vaultAddress
EXP			address public vaultAddress
SWAP1			address public vaultAddress
DIV			address public vaultAddress
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public vaultAddress
AND			address public vaultAddress
DUP2			address public vaultAddress
JUMP	[out]		address public vaultAddress
tag23
 
JUMPDEST		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
PUSH1 0x0		bool
PUSH1 0x1		true
SWAP1			return true
POP			return true
tag54
 
JUMPDEST		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP4			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
SWAP3			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
POP			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
POP			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
POP			function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
JUMP	[out]		function onTransfer
(
address _from
 address _to
 uint _amount
)
 returns
(
bool
)
 {
...
tag25
 
JUMPDEST		MiniMeToken public tokenContract
PUSH1 0x5		MiniMeToken public tokenContract
PUSH1 0x0		MiniMeToken public tokenContract
SWAP1			MiniMeToken public tokenContract
SLOAD			MiniMeToken public tokenContract
SWAP1			MiniMeToken public tokenContract
PUSH2 0x100		MiniMeToken public tokenContract
EXP			MiniMeToken public tokenContract
SWAP1			MiniMeToken public tokenContract
DIV			MiniMeToken public tokenContract
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		MiniMeToken public tokenContract
AND			MiniMeToken public tokenContract
DUP2			MiniMeToken public tokenContract
JUMP	[out]		MiniMeToken public tokenContract
tag27
 
JUMPDEST		function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
PUSH1 0x0		owner
PUSH1 0x0		owner
SWAP1			owner
SLOAD			owner
SWAP1			owner
PUSH2 0x100		owner
EXP			owner
SWAP1			owner
DIV			owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
AND			owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
AND			msg.sender != owner
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
AND			msg.sender != owner
EQ			msg.sender != owner
ISZERO			msg.sender != owner
ISZERO			if 
(
msg.sender != owner
)
 throw
PUSH [tag56]		if 
(
msg.sender != owner
)
 throw
JUMPI			if 
(
msg.sender != owner
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag56
 
JUMPDEST		if 
(
msg.sender != owner
)
 throw
DUP1			_newVaultAddress
PUSH1 0x6		vaultAddress
PUSH1 0x0		vaultAddress
PUSH2 0x100		vaultAddress = _newVaultAddress
EXP			vaultAddress = _newVaultAddress
DUP2			vaultAddress = _newVaultAddress
SLOAD			vaultAddress = _newVaultAddress
DUP2			vaultAddress = _newVaultAddress
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		vaultAddress = _newVaultAddress
MUL			vaultAddress = _newVaultAddress
NOT			vaultAddress = _newVaultAddress
AND			vaultAddress = _newVaultAddress
SWAP1			vaultAddress = _newVaultAddress
DUP4			vaultAddress = _newVaultAddress
PUSH13 0x1000000000000000000000000		vaultAddress = _newVaultAddress
SWAP1			vaultAddress = _newVaultAddress
DUP2			vaultAddress = _newVaultAddress
MUL			vaultAddress = _newVaultAddress
DIV			vaultAddress = _newVaultAddress
MUL			vaultAddress = _newVaultAddress
OR			vaultAddress = _newVaultAddress
SWAP1			vaultAddress = _newVaultAddress
SSTORE			vaultAddress = _newVaultAddress
POP			vaultAddress = _newVaultAddress
tag57
 
JUMPDEST		_
tag55
 
JUMPDEST		function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
POP			function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
JUMP	[out]		function setVault
(
address _newVaultAddress
)
 onlyOwner {
...
tag29
 
JUMPDEST		address public owner
PUSH1 0x0		address public owner
PUSH1 0x0		address public owner
SWAP1			address public owner
SLOAD			address public owner
SWAP1			address public owner
PUSH2 0x100		address public owner
EXP			address public owner
SWAP1			address public owner
DIV			address public owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
AND			address public owner
DUP2			address public owner
JUMP	[out]		address public owner
tag31
 
JUMPDEST		uint public maximumFunding
PUSH1 0x3		uint public maximumFunding
SLOAD			uint public maximumFunding
DUP2			uint public maximumFunding
JUMP	[out]		uint public maximumFunding
tag33
 
JUMPDEST		function finalizeFunding
(
)
 {
...
PUSH1 0x2		endFundingTime
SLOAD			endFundingTime
TIMESTAMP			now
LT			now < endFundingTime
ISZERO			if 
(
now < endFundingTime
)
 throw
PUSH [tag59]		if 
(
now < endFundingTime
)
 throw
JUMPI			if 
(
now < endFundingTime
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag59
 
JUMPDEST		if 
(
now < endFundingTime
)
 throw
PUSH1 0x5		tokenContract
PUSH1 0x0		tokenContract
SWAP1			tokenContract
SLOAD			tokenContract
SWAP1			tokenContract
PUSH2 0x100		tokenContract
EXP			tokenContract
SWAP1			tokenContract
DIV			tokenContract
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenContract
AND			tokenContract
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenContract.changeController
AND			tokenContract.changeController
PUSH4 0x3CEBB823		tokenContract.changeController
PUSH1 0x0		0
PUSH1 0x40		tokenContract.changeController
(
0
)
MLOAD			tokenContract.changeController
(
0
)
DUP3			tokenContract.changeController
(
0
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		tokenContract.changeController
(
0
)
MUL			tokenContract.changeController
(
0
)
DUP2			tokenContract.changeController
(
0
)
MSTORE			tokenContract.changeController
(
0
)
PUSH1 0x4		tokenContract.changeController
(
0
)
ADD			tokenContract.changeController
(
0
)
DUP1			tokenContract.changeController
(
0
)
DUP3			tokenContract.changeController
(
0
)
DUP2			tokenContract.changeController
(
0
)
MSTORE			tokenContract.changeController
(
0
)
PUSH1 0x20		tokenContract.changeController
(
0
)
ADD			tokenContract.changeController
(
0
)
SWAP2			tokenContract.changeController
(
0
)
POP			tokenContract.changeController
(
0
)
POP			tokenContract.changeController
(
0
)
PUSH1 0x0		tokenContract.changeController
(
0
)
PUSH1 0x40		tokenContract.changeController
(
0
)
MLOAD			tokenContract.changeController
(
0
)
DUP1			tokenContract.changeController
(
0
)
DUP4			tokenContract.changeController
(
0
)
SUB			tokenContract.changeController
(
0
)
DUP2			tokenContract.changeController
(
0
)
PUSH1 0x0		tokenContract.changeController
(
0
)
DUP8			tokenContract.changeController
(
0
)
DUP1			tokenContract.changeController
(
0
)
EXTCODESIZE			tokenContract.changeController
(
0
)
ISZERO			tokenContract.changeController
(
0
)
PUSH [ErrorTag]		tokenContract.changeController
(
0
)
JUMPI			tokenContract.changeController
(
0
)
PUSH1 0x32		tokenContract.changeController
(
0
)
GAS			tokenContract.changeController
(
0
)
SUB			tokenContract.changeController
(
0
)
CALL			tokenContract.changeController
(
0
)
ISZERO			tokenContract.changeController
(
0
)
PUSH [ErrorTag]		tokenContract.changeController
(
0
)
JUMPI			tokenContract.changeController
(
0
)
POP			tokenContract.changeController
(
0
)
POP			tokenContract.changeController
(
0
)
POP			tokenContract.changeController
(
0
)
tag58
 
JUMPDEST		function finalizeFunding
(
)
 {
...
JUMP	[out]		function finalizeFunding
(
)
 {
...
tag35
 
JUMPDEST		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH1 0x0		owner
PUSH1 0x0		owner
SWAP1			owner
SLOAD			owner
SWAP1			owner
PUSH2 0x100		owner
EXP			owner
SWAP1			owner
DIV			owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
AND			owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
AND			msg.sender != owner
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
AND			msg.sender != owner
EQ			msg.sender != owner
ISZERO			msg.sender != owner
ISZERO			if 
(
msg.sender != owner
)
 throw
PUSH [tag61]		if 
(
msg.sender != owner
)
 throw
JUMPI			if 
(
msg.sender != owner
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag61
 
JUMPDEST		if 
(
msg.sender != owner
)
 throw
DUP1			_newOwner
PUSH1 0x0		owner
PUSH1 0x0		owner
PUSH2 0x100		owner = _newOwner
EXP			owner = _newOwner
DUP2			owner = _newOwner
SLOAD			owner = _newOwner
DUP2			owner = _newOwner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _newOwner
MUL			owner = _newOwner
NOT			owner = _newOwner
AND			owner = _newOwner
SWAP1			owner = _newOwner
DUP4			owner = _newOwner
PUSH13 0x1000000000000000000000000		owner = _newOwner
SWAP1			owner = _newOwner
DUP2			owner = _newOwner
MUL			owner = _newOwner
DIV			owner = _newOwner
MUL			owner = _newOwner
OR			owner = _newOwner
SWAP1			owner = _newOwner
SSTORE			owner = _newOwner
POP			owner = _newOwner
tag62
 
JUMPDEST		_
tag60
 
JUMPDEST		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
POP			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
JUMP	[out]		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
tag37
 
JUMPDEST		uint public startFundingTime
PUSH1 0x1		uint public startFundingTime
SLOAD			uint public startFundingTime
DUP2			uint public startFundingTime
JUMP	[out]		uint public startFundingTime
tag39
 
JUMPDEST		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
PUSH1 0x0		bool
PUSH1 0x1		true
SWAP1			return true
POP			return true
tag63
 
JUMPDEST		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP4			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
SWAP3			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
POP			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
POP			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
POP			function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
JUMP	[out]		function onApprove
(
address _owner
 address _spender
 uint _amount
)
...
tag41
 
JUMPDEST		uint public totalCollected
PUSH1 0x4		uint public totalCollected
SLOAD			uint public totalCollected
DUP2			uint public totalCollected
JUMP	[out]		uint public totalCollected
tag43
 
JUMPDEST		uint public endFundingTime
PUSH1 0x2		uint public endFundingTime
SLOAD			uint public endFundingTime
DUP2			uint public endFundingTime
JUMP	[out]		uint public endFundingTime
tag45
 
JUMPDEST		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
PUSH1 0x0		bool
PUSH [tag65]		doPayment
(
_owner
)
DUP3			_owner
PUSH [tag19]		doPayment
JUMP	[in]		doPayment
(
_owner
)
tag65
 
JUMPDEST		doPayment
(
_owner
)
PUSH1 0x1		true
SWAP1			return true
POP			return true
tag64
 
JUMPDEST		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
SWAP2			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
SWAP1			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
POP			function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
JUMP	[out]		function proxyPayment
(
address _owner
)
 payable returns
(
bool
)
 {
...
.code
PUSH1 0x60		contract Controlled {
...
PUSH1 0x40		contract Controlled {
...
MSTORE			contract Controlled {
...
CALLVALUE			function Controlled
(
)
 { controller = msg.sender;}
PUSH [ErrorTag]		function Controlled
(
)
 { controller = msg.sender;}
JUMPI			function Controlled
(
)
 { controller = msg.sender;}
tag1
 
JUMPDEST		function Controlled
(
)
 { controller = msg.sender;}
CALLER			msg.sender
PUSH1 0x0		controller
PUSH1 0x0		controller
PUSH2 0x100		controller = msg.sender
EXP			controller = msg.sender
DUP2			controller = msg.sender
SLOAD			controller = msg.sender
DUP2			controller = msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller = msg.sender
MUL			controller = msg.sender
NOT			controller = msg.sender
AND			controller = msg.sender
SWAP1			controller = msg.sender
DUP4			controller = msg.sender
PUSH13 0x1000000000000000000000000		controller = msg.sender
SWAP1			controller = msg.sender
DUP2			controller = msg.sender
MUL			controller = msg.sender
DIV			controller = msg.sender
MUL			controller = msg.sender
OR			controller = msg.sender
SWAP1			controller = msg.sender
SSTORE			controller = msg.sender
POP			controller = msg.sender
tag2
 
JUMPDEST		function Controlled
(
)
 { controller = msg.sender;}
tag3
 
JUMPDEST		contract Controlled {
...
PUSH #[$0]		contract Controlled {
...
DUP1			contract Controlled {
...
PUSH [$0]		contract Controlled {
...
PUSH1 0x0		contract Controlled {
...
CODECOPY			contract Controlled {
...
PUSH1 0x0		contract Controlled {
...
RETURN			contract Controlled {
...
.data
0
 
.code
PUSH1 0x60		contract Controlled {
...
PUSH1 0x40		contract Controlled {
...
MSTORE			contract Controlled {
...
PUSH1 0x0		contract Controlled {
...
CALLDATALOAD			contract Controlled {
...
PUSH29 0x100000000000000000000000000000000000000000000000000000000		contract Controlled {
...
SWAP1			contract Controlled {
...
DIV			contract Controlled {
...
DUP1			contract Controlled {
...
PUSH4 0x3CEBB823		contract Controlled {
...
EQ			contract Controlled {
...
PUSH [tag2]		contract Controlled {
...
JUMPI			contract Controlled {
...
DUP1			contract Controlled {
...
PUSH4 0xF77C4791		contract Controlled {
...
EQ			contract Controlled {
...
PUSH [tag3]		contract Controlled {
...
JUMPI			contract Controlled {
...
tag1
 
JUMPDEST		contract Controlled {
...
PUSH [ErrorTag]		contract Controlled {
...
JUMP			contract Controlled {
...
tag2
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
CALLVALUE			function changeController
(
address _newController
)
 onlyController {
...
PUSH [ErrorTag]		function changeController
(
address _newController
)
 onlyController {
...
JUMPI			function changeController
(
address _newController
)
 onlyController {
...
PUSH [tag4]		function changeController
(
address _newController
)
 onlyController {
...
PUSH1 0x4		function changeController
(
address _newController
)
 onlyController {
...
DUP1			function changeController
(
address _newController
)
 onlyController {
...
DUP1			function changeController
(
address _newController
)
 onlyController {
...
CALLDATALOAD			function changeController
(
address _newController
)
 onlyController {
...
SWAP1			function changeController
(
address _newController
)
 onlyController {
...
PUSH1 0x20		function changeController
(
address _newController
)
 onlyController {
...
ADD			function changeController
(
address _newController
)
 onlyController {
...
SWAP1			function changeController
(
address _newController
)
 onlyController {
...
SWAP2			function changeController
(
address _newController
)
 onlyController {
...
SWAP1			function changeController
(
address _newController
)
 onlyController {
...
POP			function changeController
(
address _newController
)
 onlyController {
...
POP			function changeController
(
address _newController
)
 onlyController {
...
PUSH [tag5]		function changeController
(
address _newController
)
 onlyController {
...
JUMP			function changeController
(
address _newController
)
 onlyController {
...
tag4
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
STOP			function changeController
(
address _newController
)
 onlyController {
...
tag3
 
JUMPDEST		address public controller
CALLVALUE			address public controller
PUSH [ErrorTag]		address public controller
JUMPI			address public controller
PUSH [tag6]		address public controller
PUSH [tag7]		address public controller
JUMP			address public controller
tag6
 
JUMPDEST		address public controller
PUSH1 0x40		address public controller
MLOAD			address public controller
DUP1			address public controller
DUP3			address public controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public controller
AND			address public controller
DUP2			address public controller
MSTORE			address public controller
PUSH1 0x20		address public controller
ADD			address public controller
SWAP2			address public controller
POP			address public controller
POP			address public controller
PUSH1 0x40		address public controller
MLOAD			address public controller
DUP1			address public controller
SWAP2			address public controller
SUB			address public controller
SWAP1			address public controller
RETURN			address public controller
tag5
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 throw
PUSH [tag9]		if 
(
msg.sender != controller
)
 throw
JUMPI			if 
(
msg.sender != controller
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag9
 
JUMPDEST		if 
(
msg.sender != controller
)
 throw
DUP1			_newController
PUSH1 0x0		controller
PUSH1 0x0		controller
PUSH2 0x100		controller = _newController
EXP			controller = _newController
DUP2			controller = _newController
SLOAD			controller = _newController
DUP2			controller = _newController
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller = _newController
MUL			controller = _newController
NOT			controller = _newController
AND			controller = _newController
SWAP1			controller = _newController
DUP4			controller = _newController
PUSH13 0x1000000000000000000000000		controller = _newController
SWAP1			controller = _newController
DUP2			controller = _newController
MUL			controller = _newController
DIV			controller = _newController
MUL			controller = _newController
OR			controller = _newController
SWAP1			controller = _newController
SSTORE			controller = _newController
POP			controller = _newController
tag10
 
JUMPDEST		_
tag8
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
POP			function changeController
(
address _newController
)
 onlyController {
...
JUMP	[out]		function changeController
(
address _newController
)
 onlyController {
...
tag7
 
JUMPDEST		address public controller
PUSH1 0x0		address public controller
PUSH1 0x0		address public controller
SWAP1			address public controller
SLOAD			address public controller
SWAP1			address public controller
PUSH2 0x100		address public controller
EXP			address public controller
SWAP1			address public controller
DIV			address public controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public controller
AND			address public controller
DUP2			address public controller
JUMP	[out]		address public controller
.code
PUSH1 0x60		contract MiniMeToken is Controlled {
...
PUSH1 0x40		contract MiniMeToken is Controlled {
...
MSTORE			contract MiniMeToken is Controlled {
...
PUSH1 0x40		string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
PUSH1 0x7		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH32 0x4D4D545F302E3100000000000000000000000000000000000000000000000000		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
PUSH1 0x4		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SLOAD			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH2 0x100		string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
PUSH1 0x2		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
SHA3			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP3			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
LT			string public version = 'MMT_0.1'
PUSH [tag2]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
PUSH1 0xFF		string public version = 'MMT_0.1'
NOT			string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
OR			string public version = 'MMT_0.1'
DUP6			string public version = 'MMT_0.1'
SSTORE			string public version = 'MMT_0.1'
PUSH [tag1]		string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag2
 
JUMPDEST		string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
DUP6			string public version = 'MMT_0.1'
SSTORE			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH [tag1]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
tag3
 
JUMPDEST		string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
GT			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH [tag4]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
SSTORE			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH [tag3]		string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag4
 
JUMPDEST		string public version = 'MMT_0.1'
tag1
 
JUMPDEST		string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
PUSH [tag5]		string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
tag6
 
JUMPDEST		string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
GT			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH [tag7]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
SSTORE			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH [tag6]		string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag7
 
JUMPDEST		string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag5
 
JUMPDEST		string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
CALLVALUE			function MiniMeToken
(
...
PUSH [ErrorTag]		function MiniMeToken
(
...
JUMPI			function MiniMeToken
(
...
PUSH1 0x40		function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
PUSHSIZE		function MiniMeToken
(
...
CODESIZE			function MiniMeToken
(
...
SUB			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
PUSHSIZE		function MiniMeToken
(
...
DUP4			function MiniMeToken
(
...
CODECOPY			function MiniMeToken
(
...
DUP2			function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
PUSH1 0x40		function MiniMeToken
(
...
MSTORE			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
DUP3			function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
DUP3			function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
tag8
 
JUMPDEST		function MiniMeToken
(
...
tag9
 
JUMPDEST		function Controlled
(
)
 { controller = msg.sender;}
CALLER			msg.sender
PUSH1 0x0		controller
PUSH1 0x0		controller
PUSH2 0x100		controller = msg.sender
EXP			controller = msg.sender
DUP2			controller = msg.sender
SLOAD			controller = msg.sender
DUP2			controller = msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller = msg.sender
MUL			controller = msg.sender
NOT			controller = msg.sender
AND			controller = msg.sender
SWAP1			controller = msg.sender
DUP4			controller = msg.sender
PUSH13 0x1000000000000000000000000		controller = msg.sender
SWAP1			controller = msg.sender
DUP2			controller = msg.sender
MUL			controller = msg.sender
DIV			controller = msg.sender
MUL			controller = msg.sender
OR			controller = msg.sender
SWAP1			controller = msg.sender
SSTORE			controller = msg.sender
POP			controller = msg.sender
tag10
 
JUMPDEST		function Controlled
(
)
 { controller = msg.sender;}
DUP7			_tokenFactory
PUSH1 0xB		tokenFactory
PUSH1 0x1		tokenFactory
PUSH2 0x100		tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
EXP			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DUP2			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
SLOAD			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DUP2			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
MUL			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
NOT			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
AND			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
SWAP1			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DUP4			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
PUSH13 0x1000000000000000000000000		tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
SWAP1			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DUP2			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
MUL			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DIV			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
MUL			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
OR			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
SWAP1			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
SSTORE			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
POP			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DUP4			_tokenName
PUSH1 0x1		name
SWAP1			name = _tokenName
DUP1			name = _tokenName
MLOAD			name = _tokenName
SWAP1			name = _tokenName
PUSH1 0x20		name = _tokenName
ADD			name = _tokenName
SWAP1			name = _tokenName
DUP3			name = _tokenName
DUP1			name = _tokenName
SLOAD			name = _tokenName
PUSH1 0x1		name = _tokenName
DUP2			name = _tokenName
PUSH1 0x1		name = _tokenName
AND			name = _tokenName
ISZERO			name = _tokenName
PUSH2 0x100		name = _tokenName
MUL			name = _tokenName
SUB			name = _tokenName
AND			name = _tokenName
PUSH1 0x2		name = _tokenName
SWAP1			name = _tokenName
DIV			name = _tokenName
SWAP1			name = _tokenName
PUSH1 0x0		name = _tokenName
MSTORE			name = _tokenName
PUSH1 0x20		name = _tokenName
PUSH1 0x0		name = _tokenName
SHA3			name = _tokenName
SWAP1			name = _tokenName
PUSH1 0x1F		name = _tokenName
ADD			name = _tokenName
PUSH1 0x20		name = _tokenName
SWAP1			name = _tokenName
DIV			name = _tokenName
DUP2			name = _tokenName
ADD			name = _tokenName
SWAP3			name = _tokenName
DUP3			name = _tokenName
PUSH1 0x1F		name = _tokenName
LT			name = _tokenName
PUSH [tag13]		name = _tokenName
JUMPI			name = _tokenName
DUP1			name = _tokenName
MLOAD			name = _tokenName
PUSH1 0xFF		name = _tokenName
NOT			name = _tokenName
AND			name = _tokenName
DUP4			name = _tokenName
DUP1			name = _tokenName
ADD			name = _tokenName
OR			name = _tokenName
DUP6			name = _tokenName
SSTORE			name = _tokenName
PUSH [tag12]		name = _tokenName
JUMP			name = _tokenName
tag13
 
JUMPDEST		name = _tokenName
DUP3			name = _tokenName
DUP1			name = _tokenName
ADD			name = _tokenName
PUSH1 0x1		name = _tokenName
ADD			name = _tokenName
DUP6			name = _tokenName
SSTORE			name = _tokenName
DUP3			name = _tokenName
ISZERO			name = _tokenName
PUSH [tag12]		name = _tokenName
JUMPI			name = _tokenName
SWAP2			name = _tokenName
DUP3			name = _tokenName
ADD			name = _tokenName
tag14
 
JUMPDEST		name = _tokenName
DUP3			name = _tokenName
DUP2			name = _tokenName
GT			name = _tokenName
ISZERO			name = _tokenName
PUSH [tag15]		name = _tokenName
JUMPI			name = _tokenName
DUP3			name = _tokenName
MLOAD			name = _tokenName
DUP3			name = _tokenName
SSTORE			name = _tokenName
SWAP2			name = _tokenName
PUSH1 0x20		name = _tokenName
ADD			name = _tokenName
SWAP2			name = _tokenName
SWAP1			name = _tokenName
PUSH1 0x1		name = _tokenName
ADD			name = _tokenName
SWAP1			name = _tokenName
PUSH [tag14]		name = _tokenName
JUMP			name = _tokenName
tag15
 
JUMPDEST		name = _tokenName
tag12
 
JUMPDEST		name = _tokenName
POP			name = _tokenName
SWAP1			name = _tokenName
POP			name = _tokenName
PUSH [tag16]		name = _tokenName
SWAP2			name = _tokenName
SWAP1			name = _tokenName
tag17
 
JUMPDEST		name = _tokenName
DUP1			name = _tokenName
DUP3			name = _tokenName
GT			name = _tokenName
ISZERO			name = _tokenName
PUSH [tag18]		name = _tokenName
JUMPI			name = _tokenName
PUSH1 0x0		name = _tokenName
DUP2			name = _tokenName
PUSH1 0x0		name = _tokenName
SWAP1			name = _tokenName
SSTORE			name = _tokenName
POP			name = _tokenName
PUSH1 0x1		name = _tokenName
ADD			name = _tokenName
PUSH [tag17]		name = _tokenName
JUMP			name = _tokenName
tag18
 
JUMPDEST		name = _tokenName
POP			name = _tokenName
SWAP1			name = _tokenName
JUMP			name = _tokenName
tag16
 
JUMPDEST		name = _tokenName
POP			name = _tokenName
POP			name = _tokenName
DUP3			_decimalUnits
PUSH1 0x2		decimals
PUSH1 0x0		decimals
PUSH2 0x100		decimals = _decimalUnits
EXP			decimals = _decimalUnits
DUP2			decimals = _decimalUnits
SLOAD			decimals = _decimalUnits
DUP2			decimals = _decimalUnits
PUSH1 0xFF		decimals = _decimalUnits
MUL			decimals = _decimalUnits
NOT			decimals = _decimalUnits
AND			decimals = _decimalUnits
SWAP1			decimals = _decimalUnits
DUP4			decimals = _decimalUnits
PUSH32 0x100000000000000000000000000000000000000000000000000000000000000		decimals = _decimalUnits
SWAP1			decimals = _decimalUnits
DUP2			decimals = _decimalUnits
MUL			decimals = _decimalUnits
DIV			decimals = _decimalUnits
MUL			decimals = _decimalUnits
OR			decimals = _decimalUnits
SWAP1			decimals = _decimalUnits
SSTORE			decimals = _decimalUnits
POP			decimals = _decimalUnits
DUP2			_tokenSymbol
PUSH1 0x3		symbol
SWAP1			symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
MLOAD			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
PUSH1 0x20		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
SLOAD			symbol = _tokenSymbol
PUSH1 0x1		symbol = _tokenSymbol
DUP2			symbol = _tokenSymbol
PUSH1 0x1		symbol = _tokenSymbol
AND			symbol = _tokenSymbol
ISZERO			symbol = _tokenSymbol
PUSH2 0x100		symbol = _tokenSymbol
MUL			symbol = _tokenSymbol
SUB			symbol = _tokenSymbol
AND			symbol = _tokenSymbol
PUSH1 0x2		symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
DIV			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
PUSH1 0x0		symbol = _tokenSymbol
MSTORE			symbol = _tokenSymbol
PUSH1 0x20		symbol = _tokenSymbol
PUSH1 0x0		symbol = _tokenSymbol
SHA3			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
PUSH1 0x1F		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
PUSH1 0x20		symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
DIV			symbol = _tokenSymbol
DUP2			symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
SWAP3			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
PUSH1 0x1F		symbol = _tokenSymbol
LT			symbol = _tokenSymbol
PUSH [tag20]		symbol = _tokenSymbol
JUMPI			symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
MLOAD			symbol = _tokenSymbol
PUSH1 0xFF		symbol = _tokenSymbol
NOT			symbol = _tokenSymbol
AND			symbol = _tokenSymbol
DUP4			symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
OR			symbol = _tokenSymbol
DUP6			symbol = _tokenSymbol
SSTORE			symbol = _tokenSymbol
PUSH [tag19]		symbol = _tokenSymbol
JUMP			symbol = _tokenSymbol
tag20
 
JUMPDEST		symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
PUSH1 0x1		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
DUP6			symbol = _tokenSymbol
SSTORE			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
ISZERO			symbol = _tokenSymbol
PUSH [tag19]		symbol = _tokenSymbol
JUMPI			symbol = _tokenSymbol
SWAP2			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
tag21
 
JUMPDEST		symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
DUP2			symbol = _tokenSymbol
GT			symbol = _tokenSymbol
ISZERO			symbol = _tokenSymbol
PUSH [tag22]		symbol = _tokenSymbol
JUMPI			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
MLOAD			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
SSTORE			symbol = _tokenSymbol
SWAP2			symbol = _tokenSymbol
PUSH1 0x20		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
SWAP2			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
PUSH1 0x1		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
PUSH [tag21]		symbol = _tokenSymbol
JUMP			symbol = _tokenSymbol
tag22
 
JUMPDEST		symbol = _tokenSymbol
tag19
 
JUMPDEST		symbol = _tokenSymbol
POP			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
POP			symbol = _tokenSymbol
PUSH [tag23]		symbol = _tokenSymbol
SWAP2			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
tag24
 
JUMPDEST		symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
GT			symbol = _tokenSymbol
ISZERO			symbol = _tokenSymbol
PUSH [tag25]		symbol = _tokenSymbol
JUMPI			symbol = _tokenSymbol
PUSH1 0x0		symbol = _tokenSymbol
DUP2			symbol = _tokenSymbol
PUSH1 0x0		symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
SSTORE			symbol = _tokenSymbol
POP			symbol = _tokenSymbol
PUSH1 0x1		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
PUSH [tag24]		symbol = _tokenSymbol
JUMP			symbol = _tokenSymbol
tag25
 
JUMPDEST		symbol = _tokenSymbol
POP			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
JUMP			symbol = _tokenSymbol
tag23
 
JUMPDEST		symbol = _tokenSymbol
POP			symbol = _tokenSymbol
POP			symbol = _tokenSymbol
DUP6			_parentToken
PUSH1 0x5		parentToken
PUSH1 0x0		parentToken
PUSH2 0x100		parentToken = MiniMeToken
(
_parentToken
)
EXP			parentToken = MiniMeToken
(
_parentToken
)
DUP2			parentToken = MiniMeToken
(
_parentToken
)
SLOAD			parentToken = MiniMeToken
(
_parentToken
)
DUP2			parentToken = MiniMeToken
(
_parentToken
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken = MiniMeToken
(
_parentToken
)
MUL			parentToken = MiniMeToken
(
_parentToken
)
NOT			parentToken = MiniMeToken
(
_parentToken
)
AND			parentToken = MiniMeToken
(
_parentToken
)
SWAP1			parentToken = MiniMeToken
(
_parentToken
)
DUP4			parentToken = MiniMeToken
(
_parentToken
)
PUSH13 0x1000000000000000000000000		parentToken = MiniMeToken
(
_parentToken
)
SWAP1			parentToken = MiniMeToken
(
_parentToken
)
DUP2			parentToken = MiniMeToken
(
_parentToken
)
MUL			parentToken = MiniMeToken
(
_parentToken
)
DIV			parentToken = MiniMeToken
(
_parentToken
)
MUL			parentToken = MiniMeToken
(
_parentToken
)
OR			parentToken = MiniMeToken
(
_parentToken
)
SWAP1			parentToken = MiniMeToken
(
_parentToken
)
SSTORE			parentToken = MiniMeToken
(
_parentToken
)
POP			parentToken = MiniMeToken
(
_parentToken
)
DUP5			_parentSnapShotBlock
PUSH1 0x6		parentSnapShotBlock
DUP2			parentSnapShotBlock = _parentSnapShotBlock
SWAP1			parentSnapShotBlock = _parentSnapShotBlock
SSTORE			parentSnapShotBlock = _parentSnapShotBlock
POP			parentSnapShotBlock = _parentSnapShotBlock
DUP1			_transfersEnabled
PUSH1 0xB		transfersEnabled
PUSH1 0x0		transfersEnabled
PUSH2 0x100		transfersEnabled = _transfersEnabled
EXP			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
SLOAD			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
PUSH1 0xFF		transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
NOT			transfersEnabled = _transfersEnabled
AND			transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
DUP4			transfersEnabled = _transfersEnabled
PUSH32 0x100000000000000000000000000000000000000000000000000000000000000		transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
DIV			transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
OR			transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
SSTORE			transfersEnabled = _transfersEnabled
POP			transfersEnabled = _transfersEnabled
NUMBER			block.number
PUSH1 0x7		creationBlock
DUP2			creationBlock = block.number
SWAP1			creationBlock = block.number
SSTORE			creationBlock = block.number
POP			creationBlock = block.number
tag11
 
JUMPDEST		function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
tag26
 
JUMPDEST		contract MiniMeToken is Controlled {
...
PUSH #[$0]		contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH [$0]		contract MiniMeToken is Controlled {
...
PUSH1 0x0		contract MiniMeToken is Controlled {
...
CODECOPY			contract MiniMeToken is Controlled {
...
PUSH1 0x0		contract MiniMeToken is Controlled {
...
RETURN			contract MiniMeToken is Controlled {
...
.data
0
 
.code
PUSH1 0x60		contract MiniMeToken is Controlled {
...
PUSH1 0x40		contract MiniMeToken is Controlled {
...
MSTORE			contract MiniMeToken is Controlled {
...
CALLDATASIZE			contract MiniMeToken is Controlled {
...
ISZERO			contract MiniMeToken is Controlled {
...
PUSH [tag1]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
PUSH1 0x0		contract MiniMeToken is Controlled {
...
CALLDATALOAD			contract MiniMeToken is Controlled {
...
PUSH29 0x100000000000000000000000000000000000000000000000000000000		contract MiniMeToken is Controlled {
...
SWAP1			contract MiniMeToken is Controlled {
...
DIV			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x6FDDE03		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag2]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x95EA7B3		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag3]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x17634514		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag4]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x18160DDD		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag5]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x23B872DD		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag6]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x313CE567		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag7]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x3CEBB823		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag8]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x4EE2CD7E		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag9]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x54FD4D50		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag10]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x6638C087		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag11]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x70A08231		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag12]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x80A54001		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag13]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x827F32C0		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag14]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x95D89B41		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag15]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x981B24D0		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag16]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xA9059CBB		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag17]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xBEF97C87		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag18]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xC5BCC4F1		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag19]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xCAE9CA51		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag20]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xD3CE77FE		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag21]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xDD62ED3E		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag22]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xE77772FE		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag23]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xF41E60C5		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag24]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xF77C4791		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag25]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
tag1
 
JUMPDEST		contract MiniMeToken is Controlled {
...
PUSH [tag26]		contract MiniMeToken is Controlled {
...
tag27
 
JUMPDEST		function 
(
)
payable {
...
PUSH [tag29]		isContract
(
controller
)
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH [tag30]		isContract
JUMP	[in]		isContract
(
controller
)
tag29
 
JUMPDEST		isContract
(
controller
)
ISZERO			if 
(
isContract
(
controller
)
)
 {
...
PUSH [tag31]		if 
(
isContract
(
controller
)
)
 {
...
JUMPI			if 
(
isContract
(
controller
)
)
 {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.proxyPayment
AND			TokenController
(
controller
)
.proxyPayment
PUSH4 0xF48C3054		TokenController
(
controller
)
.proxyPayment
CALLVALUE			msg.value
CALLER			msg.sender
PUSH1 0x0		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x40		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MLOAD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x20		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ADD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MSTORE			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x40		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MLOAD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP4			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MUL			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP2			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MSTORE			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x4		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ADD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP1			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP3			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
AND			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP2			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MSTORE			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x20		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ADD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
SWAP2			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x20		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x40		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MLOAD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP1			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP4			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
SUB			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP2			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP6			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP9			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP1			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
EXTCODESIZE			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ISZERO			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH [ErrorTag]		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
JUMPI			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH2 0x235A		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
GAS			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
SUB			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
CALL			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ISZERO			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH [ErrorTag]		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
JUMPI			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x40		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MLOAD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP1			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MLOAD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
SWAP1			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x20		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ADD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ISZERO			! TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ISZERO			if 
(
! TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
)
...
PUSH [tag32]		if 
(
! TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
)
...
JUMPI			if 
(
! TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
)
...
PUSH [ErrorTag]		throw
JUMP			throw
tag32
 
JUMPDEST		if 
(
! TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
)
...
PUSH [tag33]		if 
(
isContract
(
controller
)
)
 {
...
JUMP			if 
(
isContract
(
controller
)
)
 {
...
tag31
 
JUMPDEST		if 
(
isContract
(
controller
)
)
 {
...
PUSH [ErrorTag]		throw
JUMP			throw
tag33
 
JUMPDEST		if 
(
isContract
(
controller
)
)
 {
...
tag28
 
JUMPDEST		function 
(
)
payable {
...
JUMP	[out]		function 
(
)
payable {
...
tag26
 
JUMPDEST		contract MiniMeToken is Controlled {
...
STOP			contract MiniMeToken is Controlled {
...
tag2
 
JUMPDEST		string public name
CALLVALUE			string public name
PUSH [ErrorTag]		string public name
JUMPI			string public name
PUSH [tag34]		string public name
PUSH [tag35]		string public name
JUMP			string public name
tag34
 
JUMPDEST		string public name
PUSH1 0x40		string public name
MLOAD			string public name
DUP1			string public name
DUP1			string public name
PUSH1 0x20		string public name
ADD			string public name
DUP3			string public name
DUP2			string public name
SUB			string public name
DUP3			string public name
MSTORE			string public name
DUP4			string public name
DUP2			string public name
DUP2			string public name
MLOAD			string public name
DUP2			string public name
MSTORE			string public name
PUSH1 0x20		string public name
ADD			string public name
SWAP2			string public name
POP			string public name
DUP1			string public name
MLOAD			string public name
SWAP1			string public name
PUSH1 0x20		string public name
ADD			string public name
SWAP1			string public name
DUP1			string public name
DUP4			string public name
DUP4			string public name
DUP3			string public name
SWAP1			string public name
PUSH1 0x0		string public name
PUSH1 0x4		string public name
PUSH1 0x20		string public name
DUP5			string public name
PUSH1 0x1F		string public name
ADD			string public name
DIV			string public name
PUSH1 0x3		string public name
MUL			string public name
PUSH1 0xF		string public name
ADD			string public name
CALL			string public name
POP			string public name
SWAP1			string public name
POP			string public name
SWAP1			string public name
DUP2			string public name
ADD			string public name
SWAP1			string public name
PUSH1 0x1F		string public name
AND			string public name
DUP1			string public name
ISZERO			string public name
PUSH [tag36]		string public name
JUMPI			string public name
DUP1			string public name
DUP3			string public name
SUB			string public name
DUP1			string public name
MLOAD			string public name
PUSH1 0x1		string public name
DUP4			string public name
PUSH1 0x20		string public name
SUB			string public name
PUSH2 0x100		string public name
EXP			string public name
SUB			string public name
NOT			string public name
AND			string public name
DUP2			string public name
MSTORE			string public name
PUSH1 0x20		string public name
ADD			string public name
SWAP2			string public name
POP			string public name
tag36
 
JUMPDEST		string public name
POP			string public name
SWAP3			string public name
POP			string public name
POP			string public name
POP			string public name
PUSH1 0x40		string public name
MLOAD			string public name
DUP1			string public name
SWAP2			string public name
SUB			string public name
SWAP1			string public name
RETURN			string public name
tag3
 
JUMPDEST		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLVALUE			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [ErrorTag]		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMPI			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [tag37]		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x4		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLDATALOAD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLDATALOAD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [tag38]		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag37
 
JUMPDEST		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x40		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MLOAD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP3			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ISZERO			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ISZERO			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MSTORE			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x40		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MLOAD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SUB			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
RETURN			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag4
 
JUMPDEST		uint public creationBlock
CALLVALUE			uint public creationBlock
PUSH [ErrorTag]		uint public creationBlock
JUMPI			uint public creationBlock
PUSH [tag39]		uint public creationBlock
PUSH [tag40]		uint public creationBlock
JUMP			uint public creationBlock
tag39
 
JUMPDEST		uint public creationBlock
PUSH1 0x40		uint public creationBlock
MLOAD			uint public creationBlock
DUP1			uint public creationBlock
DUP3			uint public creationBlock
DUP2			uint public creationBlock
MSTORE			uint public creationBlock
PUSH1 0x20		uint public creationBlock
ADD			uint public creationBlock
SWAP2			uint public creationBlock
POP			uint public creationBlock
POP			uint public creationBlock
PUSH1 0x40		uint public creationBlock
MLOAD			uint public creationBlock
DUP1			uint public creationBlock
SWAP2			uint public creationBlock
SUB			uint public creationBlock
SWAP1			uint public creationBlock
RETURN			uint public creationBlock
tag5
 
JUMPDEST		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
CALLVALUE			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH [ErrorTag]		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
JUMPI			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH [tag41]		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH [tag42]		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
JUMP			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
tag41
 
JUMPDEST		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH1 0x40		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
MLOAD			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
DUP1			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
DUP3			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
DUP2			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
MSTORE			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH1 0x20		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
ADD			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
SWAP2			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
POP			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
POP			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH1 0x40		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
MLOAD			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
DUP1			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
SWAP2			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
SUB			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
SWAP1			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
RETURN			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
tag6
 
JUMPDEST		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
CALLVALUE			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH [ErrorTag]		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
JUMPI			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH [tag43]		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x4		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
CALLDATALOAD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x20		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ADD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
CALLDATALOAD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x20		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ADD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
CALLDATALOAD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x20		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ADD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH [tag44]		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
JUMP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
tag43
 
JUMPDEST		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x40		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
MLOAD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP3			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ISZERO			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ISZERO			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
MSTORE			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x20		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ADD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x40		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
MLOAD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SUB			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
RETURN			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
tag7
 
JUMPDEST		uint8 public decimals
CALLVALUE			uint8 public decimals
PUSH [ErrorTag]		uint8 public decimals
JUMPI			uint8 public decimals
PUSH [tag45]		uint8 public decimals
PUSH [tag46]		uint8 public decimals
JUMP			uint8 public decimals
tag45
 
JUMPDEST		uint8 public decimals
PUSH1 0x40		uint8 public decimals
MLOAD			uint8 public decimals
DUP1			uint8 public decimals
DUP3			uint8 public decimals
PUSH1 0xFF		uint8 public decimals
AND			uint8 public decimals
DUP2			uint8 public decimals
MSTORE			uint8 public decimals
PUSH1 0x20		uint8 public decimals
ADD			uint8 public decimals
SWAP2			uint8 public decimals
POP			uint8 public decimals
POP			uint8 public decimals
PUSH1 0x40		uint8 public decimals
MLOAD			uint8 public decimals
DUP1			uint8 public decimals
SWAP2			uint8 public decimals
SUB			uint8 public decimals
SWAP1			uint8 public decimals
RETURN			uint8 public decimals
tag8
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
CALLVALUE			function changeController
(
address _newController
)
 onlyController {
...
PUSH [ErrorTag]		function changeController
(
address _newController
)
 onlyController {
...
JUMPI			function changeController
(
address _newController
)
 onlyController {
...
PUSH [tag47]		function changeController
(
address _newController
)
 onlyController {
...
PUSH1 0x4		function changeController
(
address _newController
)
 onlyController {
...
DUP1			function changeController
(
address _newController
)
 onlyController {
...
DUP1			function changeController
(
address _newController
)
 onlyController {
...
CALLDATALOAD			function changeController
(
address _newController
)
 onlyController {
...
SWAP1			function changeController
(
address _newController
)
 onlyController {
...
PUSH1 0x20		function changeController
(
address _newController
)
 onlyController {
...
ADD			function changeController
(
address _newController
)
 onlyController {
...
SWAP1			function changeController
(
address _newController
)
 onlyController {
...
SWAP2			function changeController
(
address _newController
)
 onlyController {
...
SWAP1			function changeController
(
address _newController
)
 onlyController {
...
POP			function changeController
(
address _newController
)
 onlyController {
...
POP			function changeController
(
address _newController
)
 onlyController {
...
PUSH [tag48]		function changeController
(
address _newController
)
 onlyController {
...
JUMP			function changeController
(
address _newController
)
 onlyController {
...
tag47
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
STOP			function changeController
(
address _newController
)
 onlyController {
...
tag9
 
JUMPDEST		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
CALLVALUE			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH [ErrorTag]		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
JUMPI			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH [tag49]		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x4		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
CALLDATALOAD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x20		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
ADD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
CALLDATALOAD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x20		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
ADD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH [tag50]		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
JUMP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
tag49
 
JUMPDEST		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x40		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
MLOAD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP3			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
MSTORE			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x20		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
ADD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x40		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
MLOAD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SUB			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
RETURN			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
tag10
 
JUMPDEST		string public version = 'MMT_0.1'
CALLVALUE			string public version = 'MMT_0.1'
PUSH [ErrorTag]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
PUSH [tag51]		string public version = 'MMT_0.1'
PUSH [tag52]		string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag51
 
JUMPDEST		string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
PUSH1 0x4		string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
DUP5			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
PUSH1 0x3		string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
PUSH1 0xF		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
CALL			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH [tag53]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
PUSH2 0x100		string public version = 'MMT_0.1'
EXP			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
NOT			string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
tag53
 
JUMPDEST		string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
SWAP3			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
RETURN			string public version = 'MMT_0.1'
tag11
 
JUMPDEST		function createCloneToken
(
...
CALLVALUE			function createCloneToken
(
...
PUSH [ErrorTag]		function createCloneToken
(
...
JUMPI			function createCloneToken
(
...
PUSH [tag54]		function createCloneToken
(
...
PUSH1 0x4		function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
PUSH1 0x1F		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
DIV			function createCloneToken
(
...
MUL			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP4			function createCloneToken
(
...
SWAP3			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
DUP5			function createCloneToken
(
...
CALLDATACOPY			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
PUSH1 0x1F		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
DIV			function createCloneToken
(
...
MUL			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP4			function createCloneToken
(
...
SWAP3			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
DUP5			function createCloneToken
(
...
CALLDATACOPY			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
PUSH [tag55]		function createCloneToken
(
...
JUMP			function createCloneToken
(
...
tag54
 
JUMPDEST		function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		function createCloneToken
(
...
AND			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SUB			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
RETURN			function createCloneToken
(
...
tag12
 
JUMPDEST		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
CALLVALUE			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH [ErrorTag]		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
JUMPI			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH [tag56]		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x4		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
CALLDATALOAD			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x20		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
ADD			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP2			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
POP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
POP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH [tag57]		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
JUMP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
tag56
 
JUMPDEST		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x40		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
MLOAD			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP3			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP2			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
MSTORE			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x20		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
ADD			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP2			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
POP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
POP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x40		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
MLOAD			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP2			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SUB			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
RETURN			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
tag13
 
JUMPDEST		MiniMeToken public parentToken
CALLVALUE			MiniMeToken public parentToken
PUSH [ErrorTag]		MiniMeToken public parentToken
JUMPI			MiniMeToken public parentToken
PUSH [tag58]		MiniMeToken public parentToken
PUSH [tag59]		MiniMeToken public parentToken
JUMP			MiniMeToken public parentToken
tag58
 
JUMPDEST		MiniMeToken public parentToken
PUSH1 0x40		MiniMeToken public parentToken
MLOAD			MiniMeToken public parentToken
DUP1			MiniMeToken public parentToken
DUP3			MiniMeToken public parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		MiniMeToken public parentToken
AND			MiniMeToken public parentToken
DUP2			MiniMeToken public parentToken
MSTORE			MiniMeToken public parentToken
PUSH1 0x20		MiniMeToken public parentToken
ADD			MiniMeToken public parentToken
SWAP2			MiniMeToken public parentToken
POP			MiniMeToken public parentToken
POP			MiniMeToken public parentToken
PUSH1 0x40		MiniMeToken public parentToken
MLOAD			MiniMeToken public parentToken
DUP1			MiniMeToken public parentToken
SWAP2			MiniMeToken public parentToken
SUB			MiniMeToken public parentToken
SWAP1			MiniMeToken public parentToken
RETURN			MiniMeToken public parentToken
tag14
 
JUMPDEST		function generateTokens
(
address _owner
 uint _amount
...
CALLVALUE			function generateTokens
(
address _owner
 uint _amount
...
PUSH [ErrorTag]		function generateTokens
(
address _owner
 uint _amount
...
JUMPI			function generateTokens
(
address _owner
 uint _amount
...
PUSH [tag60]		function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x4		function generateTokens
(
address _owner
 uint _amount
...
DUP1			function generateTokens
(
address _owner
 uint _amount
...
DUP1			function generateTokens
(
address _owner
 uint _amount
...
CALLDATALOAD			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function generateTokens
(
address _owner
 uint _amount
...
ADD			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
SWAP2			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
DUP1			function generateTokens
(
address _owner
 uint _amount
...
CALLDATALOAD			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function generateTokens
(
address _owner
 uint _amount
...
ADD			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
SWAP2			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
PUSH [tag61]		function generateTokens
(
address _owner
 uint _amount
...
JUMP			function generateTokens
(
address _owner
 uint _amount
...
tag60
 
JUMPDEST		function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x40		function generateTokens
(
address _owner
 uint _amount
...
MLOAD			function generateTokens
(
address _owner
 uint _amount
...
DUP1			function generateTokens
(
address _owner
 uint _amount
...
DUP3			function generateTokens
(
address _owner
 uint _amount
...
ISZERO			function generateTokens
(
address _owner
 uint _amount
...
ISZERO			function generateTokens
(
address _owner
 uint _amount
...
DUP2			function generateTokens
(
address _owner
 uint _amount
...
MSTORE			function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function generateTokens
(
address _owner
 uint _amount
...
ADD			function generateTokens
(
address _owner
 uint _amount
...
SWAP2			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x40		function generateTokens
(
address _owner
 uint _amount
...
MLOAD			function generateTokens
(
address _owner
 uint _amount
...
DUP1			function generateTokens
(
address _owner
 uint _amount
...
SWAP2			function generateTokens
(
address _owner
 uint _amount
...
SUB			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
RETURN			function generateTokens
(
address _owner
 uint _amount
...
tag15
 
JUMPDEST		string public symbol
CALLVALUE			string public symbol
PUSH [ErrorTag]		string public symbol
JUMPI			string public symbol
PUSH [tag62]		string public symbol
PUSH [tag63]		string public symbol
JUMP			string public symbol
tag62
 
JUMPDEST		string public symbol
PUSH1 0x40		string public symbol
MLOAD			string public symbol
DUP1			string public symbol
DUP1			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
DUP3			string public symbol
DUP2			string public symbol
SUB			string public symbol
DUP3			string public symbol
MSTORE			string public symbol
DUP4			string public symbol
DUP2			string public symbol
DUP2			string public symbol
MLOAD			string public symbol
DUP2			string public symbol
MSTORE			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
SWAP2			string public symbol
POP			string public symbol
DUP1			string public symbol
MLOAD			string public symbol
SWAP1			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
SWAP1			string public symbol
DUP1			string public symbol
DUP4			string public symbol
DUP4			string public symbol
DUP3			string public symbol
SWAP1			string public symbol
PUSH1 0x0		string public symbol
PUSH1 0x4		string public symbol
PUSH1 0x20		string public symbol
DUP5			string public symbol
PUSH1 0x1F		string public symbol
ADD			string public symbol
DIV			string public symbol
PUSH1 0x3		string public symbol
MUL			string public symbol
PUSH1 0xF		string public symbol
ADD			string public symbol
CALL			string public symbol
POP			string public symbol
SWAP1			string public symbol
POP			string public symbol
SWAP1			string public symbol
DUP2			string public symbol
ADD			string public symbol
SWAP1			string public symbol
PUSH1 0x1F		string public symbol
AND			string public symbol
DUP1			string public symbol
ISZERO			string public symbol
PUSH [tag64]		string public symbol
JUMPI			string public symbol
DUP1			string public symbol
DUP3			string public symbol
SUB			string public symbol
DUP1			string public symbol
MLOAD			string public symbol
PUSH1 0x1		string public symbol
DUP4			string public symbol
PUSH1 0x20		string public symbol
SUB			string public symbol
PUSH2 0x100		string public symbol
EXP			string public symbol
SUB			string public symbol
NOT			string public symbol
AND			string public symbol
DUP2			string public symbol
MSTORE			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
SWAP2			string public symbol
POP			string public symbol
tag64
 
JUMPDEST		string public symbol
POP			string public symbol
SWAP3			string public symbol
POP			string public symbol
POP			string public symbol
POP			string public symbol
PUSH1 0x40		string public symbol
MLOAD			string public symbol
DUP1			string public symbol
SWAP2			string public symbol
SUB			string public symbol
SWAP1			string public symbol
RETURN			string public symbol
tag16
 
JUMPDEST		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
CALLVALUE			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH [ErrorTag]		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
JUMPI			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH [tag65]		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x4		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
CALLDATALOAD			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x20		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
ADD			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP2			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
POP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
POP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH [tag66]		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
JUMP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
tag65
 
JUMPDEST		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x40		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
MLOAD			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP3			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP2			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
MSTORE			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x20		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
ADD			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP2			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
POP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
POP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x40		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
MLOAD			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP2			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SUB			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
RETURN			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
tag17
 
JUMPDEST		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLVALUE			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [ErrorTag]		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMPI			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [tag67]		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x4		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLDATALOAD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLDATALOAD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [tag68]		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag67
 
JUMPDEST		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x40		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MLOAD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP3			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ISZERO			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ISZERO			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MSTORE			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x40		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MLOAD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SUB			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
RETURN			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag18
 
JUMPDEST		bool public transfersEnabled
CALLVALUE			bool public transfersEnabled
PUSH [ErrorTag]		bool public transfersEnabled
JUMPI			bool public transfersEnabled
PUSH [tag69]		bool public transfersEnabled
PUSH [tag70]		bool public transfersEnabled
JUMP			bool public transfersEnabled
tag69
 
JUMPDEST		bool public transfersEnabled
PUSH1 0x40		bool public transfersEnabled
MLOAD			bool public transfersEnabled
DUP1			bool public transfersEnabled
DUP3			bool public transfersEnabled
ISZERO			bool public transfersEnabled
ISZERO			bool public transfersEnabled
DUP2			bool public transfersEnabled
MSTORE			bool public transfersEnabled
PUSH1 0x20		bool public transfersEnabled
ADD			bool public transfersEnabled
SWAP2			bool public transfersEnabled
POP			bool public transfersEnabled
POP			bool public transfersEnabled
PUSH1 0x40		bool public transfersEnabled
MLOAD			bool public transfersEnabled
DUP1			bool public transfersEnabled
SWAP2			bool public transfersEnabled
SUB			bool public transfersEnabled
SWAP1			bool public transfersEnabled
RETURN			bool public transfersEnabled
tag19
 
JUMPDEST		uint public parentSnapShotBlock
CALLVALUE			uint public parentSnapShotBlock
PUSH [ErrorTag]		uint public parentSnapShotBlock
JUMPI			uint public parentSnapShotBlock
PUSH [tag71]		uint public parentSnapShotBlock
PUSH [tag72]		uint public parentSnapShotBlock
JUMP			uint public parentSnapShotBlock
tag71
 
JUMPDEST		uint public parentSnapShotBlock
PUSH1 0x40		uint public parentSnapShotBlock
MLOAD			uint public parentSnapShotBlock
DUP1			uint public parentSnapShotBlock
DUP3			uint public parentSnapShotBlock
DUP2			uint public parentSnapShotBlock
MSTORE			uint public parentSnapShotBlock
PUSH1 0x20		uint public parentSnapShotBlock
ADD			uint public parentSnapShotBlock
SWAP2			uint public parentSnapShotBlock
POP			uint public parentSnapShotBlock
POP			uint public parentSnapShotBlock
PUSH1 0x40		uint public parentSnapShotBlock
MLOAD			uint public parentSnapShotBlock
DUP1			uint public parentSnapShotBlock
SWAP2			uint public parentSnapShotBlock
SUB			uint public parentSnapShotBlock
SWAP1			uint public parentSnapShotBlock
RETURN			uint public parentSnapShotBlock
tag20
 
JUMPDEST		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLVALUE			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH [ErrorTag]		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
JUMPI			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH [tag73]		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x4		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLDATALOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLDATALOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLDATALOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLDATALOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x1F		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DIV			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MUL			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x40		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MLOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x40		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MSTORE			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP4			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MSTORE			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP4			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP4			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP5			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLDATACOPY			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH [tag74]		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
JUMP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
tag73
 
JUMPDEST		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x40		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MLOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ISZERO			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ISZERO			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MSTORE			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x40		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MLOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SUB			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
RETURN			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
tag21
 
JUMPDEST		function destroyTokens
(
address _owner
 uint _amount
...
CALLVALUE			function destroyTokens
(
address _owner
 uint _amount
...
PUSH [ErrorTag]		function destroyTokens
(
address _owner
 uint _amount
...
JUMPI			function destroyTokens
(
address _owner
 uint _amount
...
PUSH [tag75]		function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x4		function destroyTokens
(
address _owner
 uint _amount
...
DUP1			function destroyTokens
(
address _owner
 uint _amount
...
DUP1			function destroyTokens
(
address _owner
 uint _amount
...
CALLDATALOAD			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function destroyTokens
(
address _owner
 uint _amount
...
ADD			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
SWAP2			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
DUP1			function destroyTokens
(
address _owner
 uint _amount
...
CALLDATALOAD			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function destroyTokens
(
address _owner
 uint _amount
...
ADD			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
SWAP2			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
PUSH [tag76]		function destroyTokens
(
address _owner
 uint _amount
...
JUMP			function destroyTokens
(
address _owner
 uint _amount
...
tag75
 
JUMPDEST		function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x40		function destroyTokens
(
address _owner
 uint _amount
...
MLOAD			function destroyTokens
(
address _owner
 uint _amount
...
DUP1			function destroyTokens
(
address _owner
 uint _amount
...
DUP3			function destroyTokens
(
address _owner
 uint _amount
...
ISZERO			function destroyTokens
(
address _owner
 uint _amount
...
ISZERO			function destroyTokens
(
address _owner
 uint _amount
...
DUP2			function destroyTokens
(
address _owner
 uint _amount
...
MSTORE			function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function destroyTokens
(
address _owner
 uint _amount
...
ADD			function destroyTokens
(
address _owner
 uint _amount
...
SWAP2			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x40		function destroyTokens
(
address _owner
 uint _amount
...
MLOAD			function destroyTokens
(
address _owner
 uint _amount
...
DUP1			function destroyTokens
(
address _owner
 uint _amount
...
SWAP2			function destroyTokens
(
address _owner
 uint _amount
...
SUB			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
RETURN			function destroyTokens
(
address _owner
 uint _amount
...
tag22
 
JUMPDEST		function allowance
(
address _owner
 address _spender
...
CALLVALUE			function allowance
(
address _owner
 address _spender
...
PUSH [ErrorTag]		function allowance
(
address _owner
 address _spender
...
JUMPI			function allowance
(
address _owner
 address _spender
...
PUSH [tag77]		function allowance
(
address _owner
 address _spender
...
PUSH1 0x4		function allowance
(
address _owner
 address _spender
...
DUP1			function allowance
(
address _owner
 address _spender
...
DUP1			function allowance
(
address _owner
 address _spender
...
CALLDATALOAD			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
PUSH1 0x20		function allowance
(
address _owner
 address _spender
...
ADD			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
SWAP2			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
DUP1			function allowance
(
address _owner
 address _spender
...
CALLDATALOAD			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
PUSH1 0x20		function allowance
(
address _owner
 address _spender
...
ADD			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
SWAP2			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
PUSH [tag78]		function allowance
(
address _owner
 address _spender
...
JUMP			function allowance
(
address _owner
 address _spender
...
tag77
 
JUMPDEST		function allowance
(
address _owner
 address _spender
...
PUSH1 0x40		function allowance
(
address _owner
 address _spender
...
MLOAD			function allowance
(
address _owner
 address _spender
...
DUP1			function allowance
(
address _owner
 address _spender
...
DUP3			function allowance
(
address _owner
 address _spender
...
DUP2			function allowance
(
address _owner
 address _spender
...
MSTORE			function allowance
(
address _owner
 address _spender
...
PUSH1 0x20		function allowance
(
address _owner
 address _spender
...
ADD			function allowance
(
address _owner
 address _spender
...
SWAP2			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
PUSH1 0x40		function allowance
(
address _owner
 address _spender
...
MLOAD			function allowance
(
address _owner
 address _spender
...
DUP1			function allowance
(
address _owner
 address _spender
...
SWAP2			function allowance
(
address _owner
 address _spender
...
SUB			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
RETURN			function allowance
(
address _owner
 address _spender
...
tag23
 
JUMPDEST		MiniMeTokenFactory public tokenFactory
CALLVALUE			MiniMeTokenFactory public tokenFactory
PUSH [ErrorTag]		MiniMeTokenFactory public tokenFactory
JUMPI			MiniMeTokenFactory public tokenFactory
PUSH [tag79]		MiniMeTokenFactory public tokenFactory
PUSH [tag80]		MiniMeTokenFactory public tokenFactory
JUMP			MiniMeTokenFactory public tokenFactory
tag79
 
JUMPDEST		MiniMeTokenFactory public tokenFactory
PUSH1 0x40		MiniMeTokenFactory public tokenFactory
MLOAD			MiniMeTokenFactory public tokenFactory
DUP1			MiniMeTokenFactory public tokenFactory
DUP3			MiniMeTokenFactory public tokenFactory
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		MiniMeTokenFactory public tokenFactory
AND			MiniMeTokenFactory public tokenFactory
DUP2			MiniMeTokenFactory public tokenFactory
MSTORE			MiniMeTokenFactory public tokenFactory
PUSH1 0x20		MiniMeTokenFactory public tokenFactory
ADD			MiniMeTokenFactory public tokenFactory
SWAP2			MiniMeTokenFactory public tokenFactory
POP			MiniMeTokenFactory public tokenFactory
POP			MiniMeTokenFactory public tokenFactory
PUSH1 0x40		MiniMeTokenFactory public tokenFactory
MLOAD			MiniMeTokenFactory public tokenFactory
DUP1			MiniMeTokenFactory public tokenFactory
SWAP2			MiniMeTokenFactory public tokenFactory
SUB			MiniMeTokenFactory public tokenFactory
SWAP1			MiniMeTokenFactory public tokenFactory
RETURN			MiniMeTokenFactory public tokenFactory
tag24
 
JUMPDEST		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
CALLVALUE			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH [ErrorTag]		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
JUMPI			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH [tag81]		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH1 0x4		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
DUP1			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
DUP1			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
CALLDATALOAD			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
SWAP1			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH1 0x20		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
ADD			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
SWAP1			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
SWAP2			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
SWAP1			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
POP			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
POP			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH [tag82]		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
JUMP			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
tag81
 
JUMPDEST		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
STOP			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
tag25
 
JUMPDEST		address public controller
CALLVALUE			address public controller
PUSH [ErrorTag]		address public controller
JUMPI			address public controller
PUSH [tag83]		address public controller
PUSH [tag84]		address public controller
JUMP			address public controller
tag83
 
JUMPDEST		address public controller
PUSH1 0x40		address public controller
MLOAD			address public controller
DUP1			address public controller
DUP3			address public controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public controller
AND			address public controller
DUP2			address public controller
MSTORE			address public controller
PUSH1 0x20		address public controller
ADD			address public controller
SWAP2			address public controller
POP			address public controller
POP			address public controller
PUSH1 0x40		address public controller
MLOAD			address public controller
DUP1			address public controller
SWAP2			address public controller
SUB			address public controller
SWAP1			address public controller
RETURN			address public controller
tag30
 
JUMPDEST		function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
PUSH1 0x0		bool
PUSH1 0x0		uint size
PUSH1 0x0		0
DUP4			_addr
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_addr == 0
AND			_addr == 0
EQ			_addr == 0
ISZERO			if 
(
_addr == 0
)
 return false
PUSH [tag86]		if 
(
_addr == 0
)
 return false
JUMPI			if 
(
_addr == 0
)
 return false
PUSH1 0x0		false
SWAP2			return false
POP			return false
PUSH [tag85]		return false
JUMP			return false
tag86
 
JUMPDEST		if 
(
_addr == 0
)
 return false
DUP3			_addr
EXTCODESIZE			extcodesize
SWAP1			size 
= extcodesize
(
_addr
)
POP			size 
= extcodesize
(
_addr
)
PUSH1 0x0		0
DUP2			size
GT			size>0
SWAP2			return size>0
POP			return size>0
tag85
 
JUMPDEST		function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
POP			function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
SWAP2			function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
SWAP1			function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
POP			function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
JUMP	[out]		function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
tag35
 
JUMPDEST		string public name
PUSH1 0x1		string public name
DUP1			string public name
SLOAD			string public name
PUSH1 0x1		string public name
DUP2			string public name
PUSH1 0x1		string public name
AND			string public name
ISZERO			string public name
PUSH2 0x100		string public name
MUL			string public name
SUB			string public name
AND			string public name
PUSH1 0x2		string public name
SWAP1			string public name
DIV			string public name
DUP1			string public name
PUSH1 0x1F		string public name
ADD			string public name
PUSH1 0x20		string public name
DUP1			string public name
SWAP2			string public name
DIV			string public name
MUL			string public name
PUSH1 0x20		string public name
ADD			string public name
PUSH1 0x40		string public name
MLOAD			string public name
SWAP1			string public name
DUP2			string public name
ADD			string public name
PUSH1 0x40		string public name
MSTORE			string public name
DUP1			string public name
SWAP3			string public name
SWAP2			string public name
SWAP1			string public name
DUP2			string public name
DUP2			string public name
MSTORE			string public name
PUSH1 0x20		string public name
ADD			string public name
DUP3			string public name
DUP1			string public name
SLOAD			string public name
PUSH1 0x1		string public name
DUP2			string public name
PUSH1 0x1		string public name
AND			string public name
ISZERO			string public name
PUSH2 0x100		string public name
MUL			string public name
SUB			string public name
AND			string public name
PUSH1 0x2		string public name
SWAP1			string public name
DIV			string public name
DUP1			string public name
ISZERO			string public name
PUSH [tag87]		string public name
JUMPI			string public name
DUP1			string public name
PUSH1 0x1F		string public name
LT			string public name
PUSH [tag88]		string public name
JUMPI			string public name
PUSH2 0x100		string public name
DUP1			string public name
DUP4			string public name
SLOAD			string public name
DIV			string public name
MUL			string public name
DUP4			string public name
MSTORE			string public name
SWAP2			string public name
PUSH1 0x20		string public name
ADD			string public name
SWAP2			string public name
PUSH [tag87]		string public name
JUMP			string public name
tag88
 
JUMPDEST		string public name
DUP3			string public name
ADD			string public name
SWAP2			string public name
SWAP1			string public name
PUSH1 0x0		string public name
MSTORE			string public name
PUSH1 0x20		string public name
PUSH1 0x0		string public name
SHA3			string public name
SWAP1			string public name
tag89
 
JUMPDEST		string public name
DUP2			string public name
SLOAD			string public name
DUP2			string public name
MSTORE			string public name
SWAP1			string public name
PUSH1 0x1		string public name
ADD			string public name
SWAP1			string public name
PUSH1 0x20		string public name
ADD			string public name
DUP1			string public name
DUP4			string public name
GT			string public name
PUSH [tag89]		string public name
JUMPI			string public name
DUP3			string public name
SWAP1			string public name
SUB			string public name
PUSH1 0x1F		string public name
AND			string public name
DUP3			string public name
ADD			string public name
SWAP2			string public name
tag87
 
JUMPDEST		string public name
POP			string public name
POP			string public name
POP			string public name
POP			string public name
POP			string public name
DUP2			string public name
JUMP	[out]		string public name
tag38
 
JUMPDEST		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x0		bool success
PUSH1 0xB		transfersEnabled
PUSH1 0x0		transfersEnabled
SWAP1			transfersEnabled
SLOAD			transfersEnabled
SWAP1			transfersEnabled
PUSH2 0x100		transfersEnabled
EXP			transfersEnabled
SWAP1			transfersEnabled
DIV			transfersEnabled
PUSH1 0xFF		transfersEnabled
AND			transfersEnabled
ISZERO			!transfersEnabled
ISZERO			if 
(
!transfersEnabled
)
 throw
PUSH [tag91]		if 
(
!transfersEnabled
)
 throw
JUMPI			if 
(
!transfersEnabled
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag91
 
JUMPDEST		if 
(
!transfersEnabled
)
 throw
PUSH1 0x0		0
DUP3			_amount
EQ			_amount!=0
ISZERO			_amount!=0
DUP1			
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
ISZERO			
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
PUSH [tag92]		
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
JUMPI			
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
POP			
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
PUSH1 0x0		0
PUSH1 0x9		allowed
PUSH1 0x0		allowed[msg.sender]
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender]
AND			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
SWAP1			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender]
SHA3			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender][_spender]
DUP6			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender][_spender]
AND			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
SWAP1			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
PUSH1 0x0		allowed[msg.sender][_spender]
SHA3			allowed[msg.sender][_spender]
SLOAD			allowed[msg.sender][_spender]
EQ			allowed[msg.sender][_spender] !=0
ISZERO			allowed[msg.sender][_spender] !=0
tag92
 
JUMPDEST		
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
ISZERO			if 
(
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
)
 throw
PUSH [tag93]		if 
(
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
)
 throw
JUMPI			if 
(
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag93
 
JUMPDEST		if 
(
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
)
 throw
PUSH [tag94]		isContract
(
controller
)
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH [tag30]		isContract
JUMP	[in]		isContract
(
controller
)
tag94
 
JUMPDEST		isContract
(
controller
)
ISZERO			if 
(
isContract
(
controller
)
)
 {
...
PUSH [tag95]		if 
(
isContract
(
controller
)
)
 {
...
JUMPI			if 
(
isContract
(
controller
)
)
 {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onApprove
AND			TokenController
(
controller
)
.onApprove
PUSH4 0xDA682AEB		TokenController
(
controller
)
.onApprove
CALLER			msg.sender
DUP6			_spender
DUP6			_amount
PUSH1 0x0		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MLOAD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MSTORE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MLOAD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP5			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MUL			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP2			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MSTORE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x4		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP1			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP5			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
AND			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP2			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MSTORE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP4			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
AND			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP2			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MSTORE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP3			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP2			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MSTORE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
SWAP4			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MLOAD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP1			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP4			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
SUB			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP2			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x0		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP8			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP1			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
EXTCODESIZE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ISZERO			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH [ErrorTag]		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
JUMPI			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x32		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
GAS			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
SUB			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
CALL			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ISZERO			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH [ErrorTag]		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
JUMPI			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MLOAD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP1			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MLOAD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
SWAP1			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ISZERO			!TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ISZERO			if 
(
!TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
)
...
PUSH [tag96]		if 
(
!TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
)
...
JUMPI			if 
(
!TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
)
...
PUSH [ErrorTag]		throw
JUMP			throw
tag96
 
JUMPDEST		if 
(
!TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
)
...
tag95
 
JUMPDEST		if 
(
isContract
(
controller
)
)
 {
...
DUP2			_amount
PUSH1 0x9		allowed
PUSH1 0x0		allowed[msg.sender]
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender]
AND			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
SWAP1			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender]
SHA3			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender][_spender]
DUP6			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender][_spender]
AND			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
SWAP1			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
PUSH1 0x0		allowed[msg.sender][_spender]
SHA3			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender] = _amount
SWAP1			allowed[msg.sender][_spender] = _amount
SSTORE			allowed[msg.sender][_spender] = _amount
POP			allowed[msg.sender][_spender] = _amount
DUP3			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval
(
msg.sender
 _spender
 _amount
)
AND			Approval
(
msg.sender
 _spender
 _amount
)
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval
(
msg.sender
 _spender
 _amount
)
AND			Approval
(
msg.sender
 _spender
 _amount
)
PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925		Approval
(
msg.sender
 _spender
 _amount
)
DUP5			_amount
PUSH1 0x40		Approval
(
msg.sender
 _spender
 _amount
)
MLOAD			Approval
(
msg.sender
 _spender
 _amount
)
DUP1			Approval
(
msg.sender
 _spender
 _amount
)
DUP3			Approval
(
msg.sender
 _spender
 _amount
)
DUP2			Approval
(
msg.sender
 _spender
 _amount
)
MSTORE			Approval
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		Approval
(
msg.sender
 _spender
 _amount
)
ADD			Approval
(
msg.sender
 _spender
 _amount
)
SWAP2			Approval
(
msg.sender
 _spender
 _amount
)
POP			Approval
(
msg.sender
 _spender
 _amount
)
POP			Approval
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		Approval
(
msg.sender
 _spender
 _amount
)
MLOAD			Approval
(
msg.sender
 _spender
 _amount
)
DUP1			Approval
(
msg.sender
 _spender
 _amount
)
SWAP2			Approval
(
msg.sender
 _spender
 _amount
)
SUB			Approval
(
msg.sender
 _spender
 _amount
)
SWAP1			Approval
(
msg.sender
 _spender
 _amount
)
LOG3			Approval
(
msg.sender
 _spender
 _amount
)
PUSH1 0x1		true
SWAP1			return true
POP			return true
tag90
 
JUMPDEST		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP3			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMP	[out]		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag40
 
JUMPDEST		uint public creationBlock
PUSH1 0x7		uint public creationBlock
SLOAD			uint public creationBlock
DUP2			uint public creationBlock
JUMP	[out]		uint public creationBlock
tag42
 
JUMPDEST		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH1 0x0		uint
PUSH [tag98]		totalSupplyAt
(
block.number
)
NUMBER			block.number
PUSH [tag66]		totalSupplyAt
JUMP	[in]		totalSupplyAt
(
block.number
)
tag98
 
JUMPDEST		totalSupplyAt
(
block.number
)
SWAP1			return totalSupplyAt
(
block.number
)
POP			return totalSupplyAt
(
block.number
)
tag97
 
JUMPDEST		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
SWAP1			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
JUMP	[out]		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
tag44
 
JUMPDEST		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x0		bool success
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 {
...
PUSH [tag100]		if 
(
msg.sender != controller
)
 {
...
JUMPI			if 
(
msg.sender != controller
)
 {
...
PUSH1 0xB		transfersEnabled
PUSH1 0x0		transfersEnabled
SWAP1			transfersEnabled
SLOAD			transfersEnabled
SWAP1			transfersEnabled
PUSH2 0x100		transfersEnabled
EXP			transfersEnabled
SWAP1			transfersEnabled
DIV			transfersEnabled
PUSH1 0xFF		transfersEnabled
AND			transfersEnabled
ISZERO			!transfersEnabled
ISZERO			if 
(
!transfersEnabled
)
 throw
PUSH [tag101]		if 
(
!transfersEnabled
)
 throw
JUMPI			if 
(
!transfersEnabled
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag101
 
JUMPDEST		if 
(
!transfersEnabled
)
 throw
DUP2			_amount
PUSH1 0x9		allowed
PUSH1 0x0		allowed[_from]
DUP7			_from
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
AND			allowed[_from]
DUP2			allowed[_from]
MSTORE			allowed[_from]
PUSH1 0x20		allowed[_from]
ADD			allowed[_from]
SWAP1			allowed[_from]
DUP2			allowed[_from]
MSTORE			allowed[_from]
PUSH1 0x20		allowed[_from]
ADD			allowed[_from]
PUSH1 0x0		allowed[_from]
SHA3			allowed[_from]
PUSH1 0x0		allowed[_from][msg.sender]
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
AND			allowed[_from][msg.sender]
DUP2			allowed[_from][msg.sender]
MSTORE			allowed[_from][msg.sender]
PUSH1 0x20		allowed[_from][msg.sender]
ADD			allowed[_from][msg.sender]
SWAP1			allowed[_from][msg.sender]
DUP2			allowed[_from][msg.sender]
MSTORE			allowed[_from][msg.sender]
PUSH1 0x20		allowed[_from][msg.sender]
ADD			allowed[_from][msg.sender]
PUSH1 0x0		allowed[_from][msg.sender]
SHA3			allowed[_from][msg.sender]
SLOAD			allowed[_from][msg.sender]
LT			allowed[_from][msg.sender] < _amount
ISZERO			if 
(
allowed[_from][msg.sender] < _amount
)
 return false
PUSH [tag102]		if 
(
allowed[_from][msg.sender] < _amount
)
 return false
JUMPI			if 
(
allowed[_from][msg.sender] < _amount
)
 return false
PUSH1 0x0		false
SWAP1			return false
POP			return false
PUSH [tag99]		return false
JUMP			return false
tag102
 
JUMPDEST		if 
(
allowed[_from][msg.sender] < _amount
)
 return false
DUP2			_amount
PUSH1 0x9		allowed
PUSH1 0x0		allowed[_from]
DUP7			_from
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
AND			allowed[_from]
DUP2			allowed[_from]
MSTORE			allowed[_from]
PUSH1 0x20		allowed[_from]
ADD			allowed[_from]
SWAP1			allowed[_from]
DUP2			allowed[_from]
MSTORE			allowed[_from]
PUSH1 0x20		allowed[_from]
ADD			allowed[_from]
PUSH1 0x0		allowed[_from]
SHA3			allowed[_from]
PUSH1 0x0		allowed[_from][msg.sender]
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
AND			allowed[_from][msg.sender]
DUP2			allowed[_from][msg.sender]
MSTORE			allowed[_from][msg.sender]
PUSH1 0x20		allowed[_from][msg.sender]
ADD			allowed[_from][msg.sender]
SWAP1			allowed[_from][msg.sender]
DUP2			allowed[_from][msg.sender]
MSTORE			allowed[_from][msg.sender]
PUSH1 0x20		allowed[_from][msg.sender]
ADD			allowed[_from][msg.sender]
PUSH1 0x0		allowed[_from][msg.sender]
SHA3			allowed[_from][msg.sender]
PUSH1 0x0		allowed[_from][msg.sender]
DUP3			allowed[_from][msg.sender] -= _amount
DUP3			allowed[_from][msg.sender] -= _amount
SLOAD			allowed[_from][msg.sender] -= _amount
SUB			allowed[_from][msg.sender] -= _amount
SWAP3			allowed[_from][msg.sender] -= _amount
POP			allowed[_from][msg.sender] -= _amount
POP			allowed[_from][msg.sender] -= _amount
DUP2			allowed[_from][msg.sender] -= _amount
SWAP1			allowed[_from][msg.sender] -= _amount
SSTORE			allowed[_from][msg.sender] -= _amount
POP			allowed[_from][msg.sender] -= _amount
tag100
 
JUMPDEST		if 
(
msg.sender != controller
)
 {
...
PUSH [tag103]		doTransfer
(
_from
 _to
 _amount
)
DUP5			_from
DUP5			_to
DUP5			_amount
PUSH [tag104]		doTransfer
JUMP	[in]		doTransfer
(
_from
 _to
 _amount
)
tag103
 
JUMPDEST		doTransfer
(
_from
 _to
 _amount
)
SWAP1			return doTransfer
(
_from
 _to
 _amount
)
POP			return doTransfer
(
_from
 _to
 _amount
)
tag99
 
JUMPDEST		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP4			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP3			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
JUMP	[out]		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
tag46
 
JUMPDEST		uint8 public decimals
PUSH1 0x2		uint8 public decimals
PUSH1 0x0		uint8 public decimals
SWAP1			uint8 public decimals
SLOAD			uint8 public decimals
SWAP1			uint8 public decimals
PUSH2 0x100		uint8 public decimals
EXP			uint8 public decimals
SWAP1			uint8 public decimals
DIV			uint8 public decimals
PUSH1 0xFF		uint8 public decimals
AND			uint8 public decimals
DUP2			uint8 public decimals
JUMP	[out]		uint8 public decimals
tag48
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 throw
PUSH [tag106]		if 
(
msg.sender != controller
)
 throw
JUMPI			if 
(
msg.sender != controller
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag106
 
JUMPDEST		if 
(
msg.sender != controller
)
 throw
DUP1			_newController
PUSH1 0x0		controller
PUSH1 0x0		controller
PUSH2 0x100		controller = _newController
EXP			controller = _newController
DUP2			controller = _newController
SLOAD			controller = _newController
DUP2			controller = _newController
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller = _newController
MUL			controller = _newController
NOT			controller = _newController
AND			controller = _newController
SWAP1			controller = _newController
DUP4			controller = _newController
PUSH13 0x1000000000000000000000000		controller = _newController
SWAP1			controller = _newController
DUP2			controller = _newController
MUL			controller = _newController
DIV			controller = _newController
MUL			controller = _newController
OR			controller = _newController
SWAP1			controller = _newController
SSTORE			controller = _newController
POP			controller = _newController
tag107
 
JUMPDEST		_
tag105
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
POP			function changeController
(
address _newController
)
 onlyController {
...
JUMP	[out]		function changeController
(
address _newController
)
 onlyController {
...
tag50
 
JUMPDEST		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x0		uint
PUSH1 0x7		creationBlock
SLOAD			creationBlock
DUP3			_blockNumber
LT			_blockNumber < creationBlock
ISZERO			if 
(
_blockNumber < creationBlock
)
 {
...
PUSH [tag109]		if 
(
_blockNumber < creationBlock
)
 {
...
JUMPI			if 
(
_blockNumber < creationBlock
)
 {
...
PUSH1 0x0		0
SWAP1			return 0
POP			return 0
PUSH [tag108]		return 0
JUMP			return 0
PUSH [tag110]		if 
(
_blockNumber < creationBlock
)
 {
...
JUMP			if 
(
_blockNumber < creationBlock
)
 {
...
tag109
 
JUMPDEST		if 
(
_blockNumber < creationBlock
)
 {
...
PUSH1 0x0		0
PUSH1 0x8		balances
PUSH1 0x0		balances[_owner]
DUP6			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
AND			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
SWAP1			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
PUSH1 0x0		balances[_owner]
SHA3			balances[_owner]
DUP1			balances[_owner].length
SLOAD			balances[_owner].length
SWAP1			balances[_owner].length
POP			balances[_owner].length
EQ			balances[_owner].length == 0
DUP1			
(
balances[_owner].length == 0
)
...
PUSH [tag111]		
(
balances[_owner].length == 0
)
...
JUMPI			
(
balances[_owner].length == 0
)
...
POP			
(
balances[_owner].length == 0
)
...
DUP2			_blockNumber
PUSH1 0x8		balances
PUSH1 0x0		balances[_owner]
DUP6			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
AND			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
SWAP1			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
PUSH1 0x0		balances[_owner]
SHA3			balances[_owner]
PUSH1 0x0		0
DUP2			balances[_owner][0]
SLOAD			balances[_owner][0]
DUP2			balances[_owner][0]
LT			balances[_owner][0]
ISZERO			balances[_owner][0]
PUSH [ErrorTag]		balances[_owner][0]
JUMPI			balances[_owner][0]
SWAP1			balances[_owner][0]
PUSH1 0x0		balances[_owner][0]
MSTORE			balances[_owner][0]
PUSH1 0x20		balances[_owner][0]
PUSH1 0x0		balances[_owner][0]
SHA3			balances[_owner][0]
SWAP1			balances[_owner][0]
ADD			balances[_owner][0]
PUSH1 0x0		balances[_owner][0]
tag112
 
JUMPDEST		balances[_owner][0]
POP			balances[_owner][0]
PUSH1 0x0		balances[_owner][0].fromBlock
ADD			balances[_owner][0].fromBlock
PUSH1 0x0		balances[_owner][0].fromBlock
SWAP1			balances[_owner][0].fromBlock
SLOAD			balances[_owner][0].fromBlock
SWAP1			balances[_owner][0].fromBlock
PUSH2 0x100		balances[_owner][0].fromBlock
EXP			balances[_owner][0].fromBlock
SWAP1			balances[_owner][0].fromBlock
DIV			balances[_owner][0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner][0].fromBlock
AND			balances[_owner][0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner][0].fromBlock > _blockNumber
AND			balances[_owner][0].fromBlock > _blockNumber
GT			balances[_owner][0].fromBlock > _blockNumber
tag111
 
JUMPDEST		
(
balances[_owner].length == 0
)
...
ISZERO			if 
(
(
balances[_owner].length == 0
)
...
PUSH [tag113]		if 
(
(
balances[_owner].length == 0
)
...
JUMPI			if 
(
(
balances[_owner].length == 0
)
...
PUSH1 0x0		0
PUSH1 0x5		parentToken
PUSH1 0x0		parentToken
SWAP1			parentToken
SLOAD			parentToken
SWAP1			parentToken
PUSH2 0x100		parentToken
EXP			parentToken
SWAP1			parentToken
DIV			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken
AND			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address
(
parentToken
)
 != 0
AND			address
(
parentToken
)
 != 0
EQ			address
(
parentToken
)
 != 0
ISZERO			address
(
parentToken
)
 != 0
ISZERO			if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH [tag114]		if 
(
address
(
parentToken
)
 != 0
)
 {
...
JUMPI			if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH1 0x5		parentToken
PUSH1 0x0		parentToken
SWAP1			parentToken
SLOAD			parentToken
SWAP1			parentToken
PUSH2 0x100		parentToken
EXP			parentToken
SWAP1			parentToken
DIV			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken
AND			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken.balanceOfAt
AND			parentToken.balanceOfAt
PUSH4 0x4EE2CD7E		parentToken.balanceOfAt
DUP5			_owner
PUSH1 0x6		parentSnapShotBlock
SLOAD			parentSnapShotBlock
PUSH1 0x0		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x40		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MLOAD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x20		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ADD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MSTORE			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x40		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MLOAD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP4			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MUL			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP2			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MSTORE			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x4		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ADD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP1			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP4			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
AND			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP2			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MSTORE			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x20		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ADD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP3			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP2			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MSTORE			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x20		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ADD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
SWAP3			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x20		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x40		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MLOAD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP1			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP4			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
SUB			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP2			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x0		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP8			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP1			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
EXTCODESIZE			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ISZERO			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH [ErrorTag]		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
JUMPI			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x32		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
GAS			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
SUB			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
CALL			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ISZERO			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH [ErrorTag]		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
JUMPI			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x40		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MLOAD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP1			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MLOAD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
SWAP1			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x20		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ADD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
SWAP1			return parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			return parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH [tag108]		return parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
JUMP			return parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH [tag115]		if 
(
address
(
parentToken
)
 != 0
)
 {
...
JUMP			if 
(
address
(
parentToken
)
 != 0
)
 {
...
tag114
 
JUMPDEST		if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH1 0x0		0
SWAP1			return 0
POP			return 0
PUSH [tag108]		return 0
JUMP			return 0
tag115
 
JUMPDEST		if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH [tag116]		if 
(
(
balances[_owner].length == 0
)
...
JUMP			if 
(
(
balances[_owner].length == 0
)
...
tag113
 
JUMPDEST		if 
(
(
balances[_owner].length == 0
)
...
PUSH [tag117]		getValueAt
(
balances[_owner]
 _blockNumber
)
PUSH1 0x8		balances
PUSH1 0x0		balances[_owner]
DUP6			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
AND			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
SWAP1			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
PUSH1 0x0		balances[_owner]
SHA3			balances[_owner]
DUP4			_blockNumber
PUSH [tag118]		getValueAt
JUMP	[in]		getValueAt
(
balances[_owner]
 _blockNumber
)
tag117
 
JUMPDEST		getValueAt
(
balances[_owner]
 _blockNumber
)
SWAP1			return getValueAt
(
balances[_owner]
 _blockNumber
)
POP			return getValueAt
(
balances[_owner]
 _blockNumber
)
PUSH [tag108]		return getValueAt
(
balances[_owner]
 _blockNumber
)
JUMP			return getValueAt
(
balances[_owner]
 _blockNumber
)
tag116
 
JUMPDEST		if 
(
(
balances[_owner].length == 0
)
...
tag110
 
JUMPDEST		if 
(
_blockNumber < creationBlock
)
 {
...
tag108
 
JUMPDEST		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP3			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
JUMP	[out]		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
tag52
 
JUMPDEST		string public version = 'MMT_0.1'
PUSH1 0x4		string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SLOAD			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH2 0x100		string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
PUSH1 0x2		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SWAP3			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SLOAD			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH2 0x100		string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
PUSH1 0x2		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH [tag119]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
LT			string public version = 'MMT_0.1'
PUSH [tag120]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
PUSH2 0x100		string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
SLOAD			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
PUSH [tag119]		string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag120
 
JUMPDEST		string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
SHA3			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
tag121
 
JUMPDEST		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
SLOAD			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
GT			string public version = 'MMT_0.1'
PUSH [tag121]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
tag119
 
JUMPDEST		string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
JUMP	[out]		string public version = 'MMT_0.1'
tag55
 
JUMPDEST		function createCloneToken
(
...
PUSH1 0x0		address
PUSH1 0x0		MiniMeToken cloneToken
NUMBER			block.number
DUP5			_snapshotBlock
GT			_snapshotBlock > block.number
ISZERO			if 
(
_snapshotBlock > block.number
)
 _snapshotBlock = block.number
PUSH [tag123]		if 
(
_snapshotBlock > block.number
)
 _snapshotBlock = block.number
JUMPI			if 
(
_snapshotBlock > block.number
)
 _snapshotBlock = block.number
NUMBER			block.number
SWAP4			_snapshotBlock = block.number
POP			_snapshotBlock = block.number
tag123
 
JUMPDEST		if 
(
_snapshotBlock > block.number
)
 _snapshotBlock = block.number
PUSH1 0xB		tokenFactory
PUSH1 0x1		tokenFactory
SWAP1			tokenFactory
SLOAD			tokenFactory
SWAP1			tokenFactory
PUSH2 0x100		tokenFactory
EXP			tokenFactory
SWAP1			tokenFactory
DIV			tokenFactory
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenFactory
AND			tokenFactory
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenFactory.createCloneToken
AND			tokenFactory.createCloneToken
PUSH4 0x5B7B72C1		tokenFactory.createCloneToken
ADDRESS			this
DUP7			_snapshotBlock
DUP11			_cloneTokenName
DUP11			_cloneDecimalUnits
DUP11			_cloneTokenSymbol
DUP10			_transfersEnabled
PUSH1 0x0		tokenFactory.createCloneToken
(
...
PUSH1 0x40		tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x40		tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
DUP8			tokenFactory.createCloneToken
(
...
PUSH29 0x100000000000000000000000000000000000000000000000000000000		tokenFactory.createCloneToken
(
...
MUL			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x4		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP8			tokenFactory.createCloneToken
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP7			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP6			tokenFactory.createCloneToken
(
...
PUSH1 0xFF		tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP5			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
DUP8			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP2			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP3			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x0		tokenFactory.createCloneToken
(
...
PUSH1 0x4		tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
DUP5			tokenFactory.createCloneToken
(
...
PUSH1 0x1F		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DIV			tokenFactory.createCloneToken
(
...
PUSH1 0x3		tokenFactory.createCloneToken
(
...
MUL			tokenFactory.createCloneToken
(
...
PUSH1 0xF		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
CALL			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x1F		tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
PUSH [tag124]		tokenFactory.createCloneToken
(
...
JUMPI			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP3			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
PUSH1 0x1		tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
PUSH2 0x100		tokenFactory.createCloneToken
(
...
EXP			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
NOT			tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP2			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
tag124
 
JUMPDEST		tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
DUP3			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
DUP6			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP2			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP3			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x0		tokenFactory.createCloneToken
(
...
PUSH1 0x4		tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
DUP5			tokenFactory.createCloneToken
(
...
PUSH1 0x1F		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DIV			tokenFactory.createCloneToken
(
...
PUSH1 0x3		tokenFactory.createCloneToken
(
...
MUL			tokenFactory.createCloneToken
(
...
PUSH1 0xF		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
CALL			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x1F		tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
PUSH [tag125]		tokenFactory.createCloneToken
(
...
JUMPI			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP3			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
PUSH1 0x1		tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
PUSH2 0x100		tokenFactory.createCloneToken
(
...
EXP			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
NOT			tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP2			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
tag125
 
JUMPDEST		tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP9			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
PUSH1 0x40		tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
PUSH1 0x0		tokenFactory.createCloneToken
(
...
DUP8			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
EXTCODESIZE			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
PUSH [ErrorTag]		tokenFactory.createCloneToken
(
...
JUMPI			tokenFactory.createCloneToken
(
...
PUSH1 0x32		tokenFactory.createCloneToken
(
...
GAS			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
CALL			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
PUSH [ErrorTag]		tokenFactory.createCloneToken
(
...
JUMPI			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
PUSH1 0x40		tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP1			MiniMeToken cloneToken = tokenFactory.createCloneToken
(
...
POP			MiniMeToken cloneToken = tokenFactory.createCloneToken
(
...
DUP1			cloneToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		cloneToken.changeController
AND			cloneToken.changeController
PUSH4 0x3CEBB823		cloneToken.changeController
CALLER			msg.sender
PUSH1 0x40		cloneToken.changeController
(
msg.sender
)
MLOAD			cloneToken.changeController
(
msg.sender
)
DUP3			cloneToken.changeController
(
msg.sender
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		cloneToken.changeController
(
msg.sender
)
MUL			cloneToken.changeController
(
msg.sender
)
DUP2			cloneToken.changeController
(
msg.sender
)
MSTORE			cloneToken.changeController
(
msg.sender
)
PUSH1 0x4		cloneToken.changeController
(
msg.sender
)
ADD			cloneToken.changeController
(
msg.sender
)
DUP1			cloneToken.changeController
(
msg.sender
)
DUP3			cloneToken.changeController
(
msg.sender
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		cloneToken.changeController
(
msg.sender
)
AND			cloneToken.changeController
(
msg.sender
)
DUP2			cloneToken.changeController
(
msg.sender
)
MSTORE			cloneToken.changeController
(
msg.sender
)
PUSH1 0x20		cloneToken.changeController
(
msg.sender
)
ADD			cloneToken.changeController
(
msg.sender
)
SWAP2			cloneToken.changeController
(
msg.sender
)
POP			cloneToken.changeController
(
msg.sender
)
POP			cloneToken.changeController
(
msg.sender
)
PUSH1 0x0		cloneToken.changeController
(
msg.sender
)
PUSH1 0x40		cloneToken.changeController
(
msg.sender
)
MLOAD			cloneToken.changeController
(
msg.sender
)
DUP1			cloneToken.changeController
(
msg.sender
)
DUP4			cloneToken.changeController
(
msg.sender
)
SUB			cloneToken.changeController
(
msg.sender
)
DUP2			cloneToken.changeController
(
msg.sender
)
PUSH1 0x0		cloneToken.changeController
(
msg.sender
)
DUP8			cloneToken.changeController
(
msg.sender
)
DUP1			cloneToken.changeController
(
msg.sender
)
EXTCODESIZE			cloneToken.changeController
(
msg.sender
)
ISZERO			cloneToken.changeController
(
msg.sender
)
PUSH [ErrorTag]		cloneToken.changeController
(
msg.sender
)
JUMPI			cloneToken.changeController
(
msg.sender
)
PUSH1 0x32		cloneToken.changeController
(
msg.sender
)
GAS			cloneToken.changeController
(
msg.sender
)
SUB			cloneToken.changeController
(
msg.sender
)
CALL			cloneToken.changeController
(
msg.sender
)
ISZERO			cloneToken.changeController
(
msg.sender
)
PUSH [ErrorTag]		cloneToken.changeController
(
msg.sender
)
JUMPI			cloneToken.changeController
(
msg.sender
)
POP			cloneToken.changeController
(
msg.sender
)
POP			cloneToken.changeController
(
msg.sender
)
POP			cloneToken.changeController
(
msg.sender
)
DUP1			cloneToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
AND			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
PUSH32 0x86C875B377F900B07CE03575813022F05DD10ED7640B5282CF6D3C3FC352ADE		NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP6			_snapshotBlock
PUSH1 0x40		NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
MLOAD			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP1			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP3			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP2			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
MSTORE			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
PUSH1 0x20		NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
ADD			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
SWAP2			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
POP			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
POP			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
PUSH1 0x40		NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
MLOAD			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP1			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
SWAP2			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
SUB			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
SWAP1			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
LOG2			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP1			cloneToken
SWAP2			return address
(
cloneToken
)
POP			return address
(
cloneToken
)
tag122
 
JUMPDEST		function createCloneToken
(
...
POP			function createCloneToken
(
...
SWAP6			function createCloneToken
(
...
SWAP5			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
JUMP	[out]		function createCloneToken
(
...
tag57
 
JUMPDEST		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x0		uint256 balance
PUSH [tag127]		balanceOfAt
(
_owner
 block.number
)
DUP3			_owner
NUMBER			block.number
PUSH [tag50]		balanceOfAt
JUMP	[in]		balanceOfAt
(
_owner
 block.number
)
tag127
 
JUMPDEST		balanceOfAt
(
_owner
 block.number
)
SWAP1			return balanceOfAt
(
_owner
 block.number
)
POP			return balanceOfAt
(
_owner
 block.number
)
tag126
 
JUMPDEST		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP2			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
POP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
JUMP	[out]		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
tag59
 
JUMPDEST		MiniMeToken public parentToken
PUSH1 0x5		MiniMeToken public parentToken
PUSH1 0x0		MiniMeToken public parentToken
SWAP1			MiniMeToken public parentToken
SLOAD			MiniMeToken public parentToken
SWAP1			MiniMeToken public parentToken
PUSH2 0x100		MiniMeToken public parentToken
EXP			MiniMeToken public parentToken
SWAP1			MiniMeToken public parentToken
DIV			MiniMeToken public parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		MiniMeToken public parentToken
AND			MiniMeToken public parentToken
DUP2			MiniMeToken public parentToken
JUMP	[out]		MiniMeToken public parentToken
tag61
 
JUMPDEST		function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x0		bool
PUSH1 0x0		uint curTotalSupply
PUSH1 0x0		var previousBalanceTo
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 throw
PUSH [tag129]		if 
(
msg.sender != controller
)
 throw
JUMPI			if 
(
msg.sender != controller
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag129
 
JUMPDEST		if 
(
msg.sender != controller
)
 throw
PUSH [tag131]		getValueAt
(
totalSupplyHistory
 block.number
)
PUSH1 0xA		totalSupplyHistory
NUMBER			block.number
PUSH [tag118]		getValueAt
JUMP	[in]		getValueAt
(
totalSupplyHistory
 block.number
)
tag131
 
JUMPDEST		getValueAt
(
totalSupplyHistory
 block.number
)
SWAP2			uint curTotalSupply = getValueAt
(
totalSupplyHistory
 block.number
)
POP			uint curTotalSupply = getValueAt
(
totalSupplyHistory
 block.number
)
PUSH [tag132]		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply + _amount
)
PUSH1 0xA		totalSupplyHistory
DUP6			_amount
DUP5			curTotalSupply
ADD			curTotalSupply + _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply + _amount
)
tag132
 
JUMPDEST		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply + _amount
)
PUSH [tag134]		balanceOf
(
_owner
)
DUP6			_owner
PUSH [tag57]		balanceOf
JUMP	[in]		balanceOf
(
_owner
)
tag134
 
JUMPDEST		balanceOf
(
_owner
)
SWAP1			var previousBalanceTo = balanceOf
(
_owner
)
POP			var previousBalanceTo = balanceOf
(
_owner
)
PUSH [tag135]		updateValueAtNow
(
balances[_owner]
 previousBalanceTo + _amount
)
PUSH1 0x8		balances
PUSH1 0x0		balances[_owner]
DUP8			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
AND			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
SWAP1			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
PUSH1 0x0		balances[_owner]
SHA3			balances[_owner]
DUP6			_amount
DUP4			previousBalanceTo
ADD			previousBalanceTo + _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
balances[_owner]
 previousBalanceTo + _amount
)
tag135
 
JUMPDEST		updateValueAtNow
(
balances[_owner]
 previousBalanceTo + _amount
)
DUP5			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer
(
0
 _owner
 _amount
)
AND			Transfer
(
0
 _owner
 _amount
)
PUSH1 0x0		0
PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer
(
0
 _owner
 _amount
)
DUP7			_amount
PUSH1 0x40		Transfer
(
0
 _owner
 _amount
)
MLOAD			Transfer
(
0
 _owner
 _amount
)
DUP1			Transfer
(
0
 _owner
 _amount
)
DUP3			Transfer
(
0
 _owner
 _amount
)
DUP2			Transfer
(
0
 _owner
 _amount
)
MSTORE			Transfer
(
0
 _owner
 _amount
)
PUSH1 0x20		Transfer
(
0
 _owner
 _amount
)
ADD			Transfer
(
0
 _owner
 _amount
)
SWAP2			Transfer
(
0
 _owner
 _amount
)
POP			Transfer
(
0
 _owner
 _amount
)
POP			Transfer
(
0
 _owner
 _amount
)
PUSH1 0x40		Transfer
(
0
 _owner
 _amount
)
MLOAD			Transfer
(
0
 _owner
 _amount
)
DUP1			Transfer
(
0
 _owner
 _amount
)
SWAP2			Transfer
(
0
 _owner
 _amount
)
SUB			Transfer
(
0
 _owner
 _amount
)
SWAP1			Transfer
(
0
 _owner
 _amount
)
LOG3			Transfer
(
0
 _owner
 _amount
)
PUSH1 0x1		true
SWAP3			return true
POP			return true
tag130
 
JUMPDEST		_
tag128
 
JUMPDEST		function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
SWAP3			function generateTokens
(
address _owner
 uint _amount
...
SWAP2			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
JUMP	[out]		function generateTokens
(
address _owner
 uint _amount
...
tag63
 
JUMPDEST		string public symbol
PUSH1 0x3		string public symbol
DUP1			string public symbol
SLOAD			string public symbol
PUSH1 0x1		string public symbol
DUP2			string public symbol
PUSH1 0x1		string public symbol
AND			string public symbol
ISZERO			string public symbol
PUSH2 0x100		string public symbol
MUL			string public symbol
SUB			string public symbol
AND			string public symbol
PUSH1 0x2		string public symbol
SWAP1			string public symbol
DIV			string public symbol
DUP1			string public symbol
PUSH1 0x1F		string public symbol
ADD			string public symbol
PUSH1 0x20		string public symbol
DUP1			string public symbol
SWAP2			string public symbol
DIV			string public symbol
MUL			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
PUSH1 0x40		string public symbol
MLOAD			string public symbol
SWAP1			string public symbol
DUP2			string public symbol
ADD			string public symbol
PUSH1 0x40		string public symbol
MSTORE			string public symbol
DUP1			string public symbol
SWAP3			string public symbol
SWAP2			string public symbol
SWAP1			string public symbol
DUP2			string public symbol
DUP2			string public symbol
MSTORE			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
DUP3			string public symbol
DUP1			string public symbol
SLOAD			string public symbol
PUSH1 0x1		string public symbol
DUP2			string public symbol
PUSH1 0x1		string public symbol
AND			string public symbol
ISZERO			string public symbol
PUSH2 0x100		string public symbol
MUL			string public symbol
SUB			string public symbol
AND			string public symbol
PUSH1 0x2		string public symbol
SWAP1			string public symbol
DIV			string public symbol
DUP1			string public symbol
ISZERO			string public symbol
PUSH [tag136]		string public symbol
JUMPI			string public symbol
DUP1			string public symbol
PUSH1 0x1F		string public symbol
LT			string public symbol
PUSH [tag137]		string public symbol
JUMPI			string public symbol
PUSH2 0x100		string public symbol
DUP1			string public symbol
DUP4			string public symbol
SLOAD			string public symbol
DIV			string public symbol
MUL			string public symbol
DUP4			string public symbol
MSTORE			string public symbol
SWAP2			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
SWAP2			string public symbol
PUSH [tag136]		string public symbol
JUMP			string public symbol
tag137
 
JUMPDEST		string public symbol
DUP3			string public symbol
ADD			string public symbol
SWAP2			string public symbol
SWAP1			string public symbol
PUSH1 0x0		string public symbol
MSTORE			string public symbol
PUSH1 0x20		string public symbol
PUSH1 0x0		string public symbol
SHA3			string public symbol
SWAP1			string public symbol
tag138
 
JUMPDEST		string public symbol
DUP2			string public symbol
SLOAD			string public symbol
DUP2			string public symbol
MSTORE			string public symbol
SWAP1			string public symbol
PUSH1 0x1		string public symbol
ADD			string public symbol
SWAP1			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
DUP1			string public symbol
DUP4			string public symbol
GT			string public symbol
PUSH [tag138]		string public symbol
JUMPI			string public symbol
DUP3			string public symbol
SWAP1			string public symbol
SUB			string public symbol
PUSH1 0x1F		string public symbol
AND			string public symbol
DUP3			string public symbol
ADD			string public symbol
SWAP2			string public symbol
tag136
 
JUMPDEST		string public symbol
POP			string public symbol
POP			string public symbol
POP			string public symbol
POP			string public symbol
POP			string public symbol
DUP2			string public symbol
JUMP	[out]		string public symbol
tag66
 
JUMPDEST		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x0		uint
PUSH1 0x7		creationBlock
SLOAD			creationBlock
DUP3			_blockNumber
LT			_blockNumber < creationBlock
ISZERO			if 
(
_blockNumber < creationBlock
)
 {
...
PUSH [tag140]		if 
(
_blockNumber < creationBlock
)
 {
...
JUMPI			if 
(
_blockNumber < creationBlock
)
 {
...
PUSH1 0x0		0
SWAP1			return 0
POP			return 0
PUSH [tag139]		return 0
JUMP			return 0
PUSH [tag141]		if 
(
_blockNumber < creationBlock
)
 {
...
JUMP			if 
(
_blockNumber < creationBlock
)
 {
...
tag140
 
JUMPDEST		if 
(
_blockNumber < creationBlock
)
 {
...
PUSH1 0x0		0
PUSH1 0xA		totalSupplyHistory
DUP1			totalSupplyHistory.length
SLOAD			totalSupplyHistory.length
SWAP1			totalSupplyHistory.length
POP			totalSupplyHistory.length
EQ			totalSupplyHistory.length == 0
DUP1			
(
totalSupplyHistory.length == 0
)
...
PUSH [tag142]		
(
totalSupplyHistory.length == 0
)
...
JUMPI			
(
totalSupplyHistory.length == 0
)
...
POP			
(
totalSupplyHistory.length == 0
)
...
DUP2			_blockNumber
PUSH1 0xA		totalSupplyHistory
PUSH1 0x0		0
DUP2			totalSupplyHistory[0]
SLOAD			totalSupplyHistory[0]
DUP2			totalSupplyHistory[0]
LT			totalSupplyHistory[0]
ISZERO			totalSupplyHistory[0]
PUSH [ErrorTag]		totalSupplyHistory[0]
JUMPI			totalSupplyHistory[0]
SWAP1			totalSupplyHistory[0]
PUSH1 0x0		totalSupplyHistory[0]
MSTORE			totalSupplyHistory[0]
PUSH1 0x20		totalSupplyHistory[0]
PUSH1 0x0		totalSupplyHistory[0]
SHA3			totalSupplyHistory[0]
SWAP1			totalSupplyHistory[0]
ADD			totalSupplyHistory[0]
PUSH1 0x0		totalSupplyHistory[0]
tag143
 
JUMPDEST		totalSupplyHistory[0]
POP			totalSupplyHistory[0]
PUSH1 0x0		totalSupplyHistory[0].fromBlock
ADD			totalSupplyHistory[0].fromBlock
PUSH1 0x0		totalSupplyHistory[0].fromBlock
SWAP1			totalSupplyHistory[0].fromBlock
SLOAD			totalSupplyHistory[0].fromBlock
SWAP1			totalSupplyHistory[0].fromBlock
PUSH2 0x100		totalSupplyHistory[0].fromBlock
EXP			totalSupplyHistory[0].fromBlock
SWAP1			totalSupplyHistory[0].fromBlock
DIV			totalSupplyHistory[0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		totalSupplyHistory[0].fromBlock
AND			totalSupplyHistory[0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		totalSupplyHistory[0].fromBlock > _blockNumber
AND			totalSupplyHistory[0].fromBlock > _blockNumber
GT			totalSupplyHistory[0].fromBlock > _blockNumber
tag142
 
JUMPDEST		
(
totalSupplyHistory.length == 0
)
...
ISZERO			if 
(
(
totalSupplyHistory.length == 0
)
...
PUSH [tag144]		if 
(
(
totalSupplyHistory.length == 0
)
...
JUMPI			if 
(
(
totalSupplyHistory.length == 0
)
...
PUSH1 0x0		0
PUSH1 0x5		parentToken
PUSH1 0x0		parentToken
SWAP1			parentToken
SLOAD			parentToken
SWAP1			parentToken
PUSH2 0x100		parentToken
EXP			parentToken
SWAP1			parentToken
DIV			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken
AND			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address
(
parentToken
)
 != 0
AND			address
(
parentToken
)
 != 0
EQ			address
(
parentToken
)
 != 0
ISZERO			address
(
parentToken
)
 != 0
ISZERO			if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH [tag145]		if 
(
address
(
parentToken
)
 != 0
)
 {
...
JUMPI			if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH1 0x5		parentToken
PUSH1 0x0		parentToken
SWAP1			parentToken
SLOAD			parentToken
SWAP1			parentToken
PUSH2 0x100		parentToken
EXP			parentToken
SWAP1			parentToken
DIV			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken
AND			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken.totalSupplyAt
AND			parentToken.totalSupplyAt
PUSH4 0x981B24D0		parentToken.totalSupplyAt
PUSH1 0x6		parentSnapShotBlock
SLOAD			parentSnapShotBlock
PUSH1 0x0		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x40		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MLOAD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x20		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ADD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MSTORE			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x40		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MLOAD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP3			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MUL			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP2			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MSTORE			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x4		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ADD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP1			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP3			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP2			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MSTORE			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x20		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ADD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
SWAP2			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x20		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x40		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MLOAD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP1			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP4			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
SUB			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP2			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x0		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP8			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP1			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
EXTCODESIZE			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ISZERO			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH [ErrorTag]		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
JUMPI			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x32		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
GAS			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
SUB			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
CALL			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ISZERO			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH [ErrorTag]		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
JUMPI			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x40		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MLOAD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP1			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MLOAD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
SWAP1			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x20		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ADD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
SWAP1			return parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			return parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH [tag139]		return parentToken.totalSupplyAt
(
parentSnapShotBlock
)
JUMP			return parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH [tag146]		if 
(
address
(
parentToken
)
 != 0
)
 {
...
JUMP			if 
(
address
(
parentToken
)
 != 0
)
 {
...
tag145
 
JUMPDEST		if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH1 0x0		0
SWAP1			return 0
POP			return 0
PUSH [tag139]		return 0
JUMP			return 0
tag146
 
JUMPDEST		if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH [tag147]		if 
(
(
totalSupplyHistory.length == 0
)
...
JUMP			if 
(
(
totalSupplyHistory.length == 0
)
...
tag144
 
JUMPDEST		if 
(
(
totalSupplyHistory.length == 0
)
...
PUSH [tag148]		getValueAt
(
totalSupplyHistory
 _blockNumber
)
PUSH1 0xA		totalSupplyHistory
DUP4			_blockNumber
PUSH [tag118]		getValueAt
JUMP	[in]		getValueAt
(
totalSupplyHistory
 _blockNumber
)
tag148
 
JUMPDEST		getValueAt
(
totalSupplyHistory
 _blockNumber
)
SWAP1			return getValueAt
(
totalSupplyHistory
 _blockNumber
)
POP			return getValueAt
(
totalSupplyHistory
 _blockNumber
)
PUSH [tag139]		return getValueAt
(
totalSupplyHistory
 _blockNumber
)
JUMP			return getValueAt
(
totalSupplyHistory
 _blockNumber
)
tag147
 
JUMPDEST		if 
(
(
totalSupplyHistory.length == 0
)
...
tag141
 
JUMPDEST		if 
(
_blockNumber < creationBlock
)
 {
...
tag139
 
JUMPDEST		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP2			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
POP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
JUMP	[out]		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
tag68
 
JUMPDEST		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x0		bool success
PUSH1 0xB		transfersEnabled
PUSH1 0x0		transfersEnabled
SWAP1			transfersEnabled
SLOAD			transfersEnabled
SWAP1			transfersEnabled
PUSH2 0x100		transfersEnabled
EXP			transfersEnabled
SWAP1			transfersEnabled
DIV			transfersEnabled
PUSH1 0xFF		transfersEnabled
AND			transfersEnabled
ISZERO			!transfersEnabled
ISZERO			if 
(
!transfersEnabled
)
 throw
PUSH [tag150]		if 
(
!transfersEnabled
)
 throw
JUMPI			if 
(
!transfersEnabled
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag150
 
JUMPDEST		if 
(
!transfersEnabled
)
 throw
PUSH [tag151]		doTransfer
(
msg.sender
 _to
 _amount
)
CALLER			msg.sender
DUP5			_to
DUP5			_amount
PUSH [tag104]		doTransfer
JUMP	[in]		doTransfer
(
msg.sender
 _to
 _amount
)
tag151
 
JUMPDEST		doTransfer
(
msg.sender
 _to
 _amount
)
SWAP1			return doTransfer
(
msg.sender
 _to
 _amount
)
POP			return doTransfer
(
msg.sender
 _to
 _amount
)
tag149
 
JUMPDEST		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP3			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMP	[out]		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag70
 
JUMPDEST		bool public transfersEnabled
PUSH1 0xB		bool public transfersEnabled
PUSH1 0x0		bool public transfersEnabled
SWAP1			bool public transfersEnabled
SLOAD			bool public transfersEnabled
SWAP1			bool public transfersEnabled
PUSH2 0x100		bool public transfersEnabled
EXP			bool public transfersEnabled
SWAP1			bool public transfersEnabled
DIV			bool public transfersEnabled
PUSH1 0xFF		bool public transfersEnabled
AND			bool public transfersEnabled
DUP2			bool public transfersEnabled
JUMP	[out]		bool public transfersEnabled
tag72
 
JUMPDEST		uint public parentSnapShotBlock
PUSH1 0x6		uint public parentSnapShotBlock
SLOAD			uint public parentSnapShotBlock
DUP2			uint public parentSnapShotBlock
JUMP	[out]		uint public parentSnapShotBlock
tag74
 
JUMPDEST		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x0		bool success
DUP3			_amount
PUSH1 0x9		allowed
PUSH1 0x0		allowed[msg.sender]
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender]
AND			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
SWAP1			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender]
SHA3			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender][_spender]
DUP7			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender][_spender]
AND			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
SWAP1			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
PUSH1 0x0		allowed[msg.sender][_spender]
SHA3			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender] = _amount
SWAP1			allowed[msg.sender][_spender] = _amount
SSTORE			allowed[msg.sender][_spender] = _amount
POP			allowed[msg.sender][_spender] = _amount
DUP4			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval
(
msg.sender
 _spender
 _amount
)
AND			Approval
(
msg.sender
 _spender
 _amount
)
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval
(
msg.sender
 _spender
 _amount
)
AND			Approval
(
msg.sender
 _spender
 _amount
)
PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925		Approval
(
msg.sender
 _spender
 _amount
)
DUP6			_amount
PUSH1 0x40		Approval
(
msg.sender
 _spender
 _amount
)
MLOAD			Approval
(
msg.sender
 _spender
 _amount
)
DUP1			Approval
(
msg.sender
 _spender
 _amount
)
DUP3			Approval
(
msg.sender
 _spender
 _amount
)
DUP2			Approval
(
msg.sender
 _spender
 _amount
)
MSTORE			Approval
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		Approval
(
msg.sender
 _spender
 _amount
)
ADD			Approval
(
msg.sender
 _spender
 _amount
)
SWAP2			Approval
(
msg.sender
 _spender
 _amount
)
POP			Approval
(
msg.sender
 _spender
 _amount
)
POP			Approval
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		Approval
(
msg.sender
 _spender
 _amount
)
MLOAD			Approval
(
msg.sender
 _spender
 _amount
)
DUP1			Approval
(
msg.sender
 _spender
 _amount
)
SWAP2			Approval
(
msg.sender
 _spender
 _amount
)
SUB			Approval
(
msg.sender
 _spender
 _amount
)
SWAP1			Approval
(
msg.sender
 _spender
 _amount
)
LOG3			Approval
(
msg.sender
 _spender
 _amount
)
DUP4			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_spender.call
AND			_spender.call
PUSH1 0x40		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
MLOAD			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
DUP1			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
DUP1			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH32 0x72656365697665417070726F76616C28616464726573732C75696E743235362C		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
DUP2			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
MSTORE			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH1 0x20		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
ADD			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH32 0x616464726573732C627974657329000000000000000000000000000000000000		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
DUP2			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
MSTORE			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH1 0x20		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
ADD			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
POP			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH1 0x2E		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
ADD			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
SWAP1			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
POP			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH1 0x40		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
MLOAD			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
DUP1			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
SWAP2			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
SUB			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
SWAP1			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
SHA3			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		_spender.call
(
...
SWAP1			_spender.call
(
...
DIV			_spender.call
(
...
CALLER			msg.sender
DUP6			_amount
ADDRESS			this
DUP7			_extraData
PUSH1 0x40		_spender.call
(
...
MLOAD			_spender.call
(
...
DUP6			_spender.call
(
...
PUSH29 0x100000000000000000000000000000000000000000000000000000000		_spender.call
(
...
MUL			_spender.call
(
...
DUP2			_spender.call
(
...
MSTORE			_spender.call
(
...
PUSH1 0x4		_spender.call
(
...
ADD			_spender.call
(
...
DUP1			_spender.call
(
...
DUP6			_spender.call
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_spender.call
(
...
AND			_spender.call
(
...
DUP2			_spender.call
(
...
MSTORE			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
ADD			_spender.call
(
...
DUP5			_spender.call
(
...
DUP2			_spender.call
(
...
MSTORE			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
ADD			_spender.call
(
...
DUP4			_spender.call
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_spender.call
(
...
AND			_spender.call
(
...
DUP2			_spender.call
(
...
MSTORE			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
ADD			_spender.call
(
...
DUP3			_spender.call
(
...
DUP1			_spender.call
(
...
MLOAD			_spender.call
(
...
SWAP1			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
ADD			_spender.call
(
...
SWAP1			_spender.call
(
...
DUP1			_spender.call
(
...
DUP4			_spender.call
(
...
DUP4			_spender.call
(
...
DUP3			_spender.call
(
...
SWAP1			_spender.call
(
...
PUSH1 0x0		_spender.call
(
...
PUSH1 0x4		_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
DUP5			_spender.call
(
...
PUSH1 0x1F		_spender.call
(
...
ADD			_spender.call
(
...
DIV			_spender.call
(
...
PUSH1 0x3		_spender.call
(
...
MUL			_spender.call
(
...
PUSH1 0xF		_spender.call
(
...
ADD			_spender.call
(
...
CALL			_spender.call
(
...
POP			_spender.call
(
...
SWAP1			_spender.call
(
...
POP			_spender.call
(
...
SWAP1			_spender.call
(
...
DUP2			_spender.call
(
...
ADD			_spender.call
(
...
SWAP1			_spender.call
(
...
PUSH1 0x1F		_spender.call
(
...
AND			_spender.call
(
...
DUP1			_spender.call
(
...
ISZERO			_spender.call
(
...
PUSH [tag153]		_spender.call
(
...
JUMPI			_spender.call
(
...
DUP1			_spender.call
(
...
DUP3			_spender.call
(
...
SUB			_spender.call
(
...
DUP1			_spender.call
(
...
MLOAD			_spender.call
(
...
PUSH1 0x1		_spender.call
(
...
DUP4			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
SUB			_spender.call
(
...
PUSH2 0x100		_spender.call
(
...
EXP			_spender.call
(
...
SUB			_spender.call
(
...
NOT			_spender.call
(
...
AND			_spender.call
(
...
DUP2			_spender.call
(
...
MSTORE			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
ADD			_spender.call
(
...
SWAP2			_spender.call
(
...
POP			_spender.call
(
...
tag153
 
JUMPDEST		_spender.call
(
...
POP			_spender.call
(
...
SWAP5			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
PUSH1 0x0		_spender.call
(
...
PUSH1 0x40		_spender.call
(
...
MLOAD			_spender.call
(
...
DUP1			_spender.call
(
...
DUP4			_spender.call
(
...
SUB			_spender.call
(
...
DUP2			_spender.call
(
...
PUSH1 0x0		_spender.call
(
...
DUP8			_spender.call
(
...
PUSH2 0x61DA		_spender.call
(
...
GAS			_spender.call
(
...
SUB			_spender.call
(
...
CALL			_spender.call
(
...
SWAP3			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
ISZERO			!_spender.call
(
...
ISZERO			if
(
!_spender.call
(
...
PUSH [tag154]		if
(
!_spender.call
(
...
JUMPI			if
(
!_spender.call
(
...
PUSH [ErrorTag]		throw
JUMP			throw
tag154
 
JUMPDEST		if
(
!_spender.call
(
...
PUSH1 0x1		true
SWAP1			return true
POP			return true
tag152
 
JUMPDEST		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP4			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
JUMP	[out]		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
tag76
 
JUMPDEST		function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x0		bool
PUSH1 0x0		uint curTotalSupply
PUSH1 0x0		var previousBalanceFrom
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 throw
PUSH [tag156]		if 
(
msg.sender != controller
)
 throw
JUMPI			if 
(
msg.sender != controller
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag156
 
JUMPDEST		if 
(
msg.sender != controller
)
 throw
PUSH [tag158]		getValueAt
(
totalSupplyHistory
 block.number
)
PUSH1 0xA		totalSupplyHistory
NUMBER			block.number
PUSH [tag118]		getValueAt
JUMP	[in]		getValueAt
(
totalSupplyHistory
 block.number
)
tag158
 
JUMPDEST		getValueAt
(
totalSupplyHistory
 block.number
)
SWAP2			uint curTotalSupply = getValueAt
(
totalSupplyHistory
 block.number
)
POP			uint curTotalSupply = getValueAt
(
totalSupplyHistory
 block.number
)
DUP4			_amount
DUP3			curTotalSupply
LT			curTotalSupply < _amount
ISZERO			if 
(
curTotalSupply < _amount
)
 throw
PUSH [tag159]		if 
(
curTotalSupply < _amount
)
 throw
JUMPI			if 
(
curTotalSupply < _amount
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag159
 
JUMPDEST		if 
(
curTotalSupply < _amount
)
 throw
PUSH [tag160]		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply - _amount
)
PUSH1 0xA		totalSupplyHistory
DUP6			_amount
DUP5			curTotalSupply
SUB			curTotalSupply - _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply - _amount
)
tag160
 
JUMPDEST		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply - _amount
)
PUSH [tag161]		balanceOf
(
_owner
)
DUP6			_owner
PUSH [tag57]		balanceOf
JUMP	[in]		balanceOf
(
_owner
)
tag161
 
JUMPDEST		balanceOf
(
_owner
)
SWAP1			var previousBalanceFrom = balanceOf
(
_owner
)
POP			var previousBalanceFrom = balanceOf
(
_owner
)
DUP4			_amount
DUP2			previousBalanceFrom
LT			previousBalanceFrom < _amount
ISZERO			if 
(
previousBalanceFrom < _amount
)
 throw
PUSH [tag162]		if 
(
previousBalanceFrom < _amount
)
 throw
JUMPI			if 
(
previousBalanceFrom < _amount
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag162
 
JUMPDEST		if 
(
previousBalanceFrom < _amount
)
 throw
PUSH [tag163]		updateValueAtNow
(
balances[_owner]
 previousBalanceFrom - _amount
)
PUSH1 0x8		balances
PUSH1 0x0		balances[_owner]
DUP8			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
AND			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
SWAP1			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
PUSH1 0x0		balances[_owner]
SHA3			balances[_owner]
DUP6			_amount
DUP4			previousBalanceFrom
SUB			previousBalanceFrom - _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
balances[_owner]
 previousBalanceFrom - _amount
)
tag163
 
JUMPDEST		updateValueAtNow
(
balances[_owner]
 previousBalanceFrom - _amount
)
PUSH1 0x0		0
DUP6			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer
(
_owner
 0
 _amount
)
AND			Transfer
(
_owner
 0
 _amount
)
PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer
(
_owner
 0
 _amount
)
DUP7			_amount
PUSH1 0x40		Transfer
(
_owner
 0
 _amount
)
MLOAD			Transfer
(
_owner
 0
 _amount
)
DUP1			Transfer
(
_owner
 0
 _amount
)
DUP3			Transfer
(
_owner
 0
 _amount
)
DUP2			Transfer
(
_owner
 0
 _amount
)
MSTORE			Transfer
(
_owner
 0
 _amount
)
PUSH1 0x20		Transfer
(
_owner
 0
 _amount
)
ADD			Transfer
(
_owner
 0
 _amount
)
SWAP2			Transfer
(
_owner
 0
 _amount
)
POP			Transfer
(
_owner
 0
 _amount
)
POP			Transfer
(
_owner
 0
 _amount
)
PUSH1 0x40		Transfer
(
_owner
 0
 _amount
)
MLOAD			Transfer
(
_owner
 0
 _amount
)
DUP1			Transfer
(
_owner
 0
 _amount
)
SWAP2			Transfer
(
_owner
 0
 _amount
)
SUB			Transfer
(
_owner
 0
 _amount
)
SWAP1			Transfer
(
_owner
 0
 _amount
)
LOG3			Transfer
(
_owner
 0
 _amount
)
PUSH1 0x1		true
SWAP3			return true
POP			return true
tag157
 
JUMPDEST		_
tag155
 
JUMPDEST		function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
SWAP3			function destroyTokens
(
address _owner
 uint _amount
...
SWAP2			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
JUMP	[out]		function destroyTokens
(
address _owner
 uint _amount
...
tag78
 
JUMPDEST		function allowance
(
address _owner
 address _spender
...
PUSH1 0x0		uint256 remaining
PUSH1 0x9		allowed
PUSH1 0x0		allowed[_owner]
DUP5			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner]
AND			allowed[_owner]
DUP2			allowed[_owner]
MSTORE			allowed[_owner]
PUSH1 0x20		allowed[_owner]
ADD			allowed[_owner]
SWAP1			allowed[_owner]
DUP2			allowed[_owner]
MSTORE			allowed[_owner]
PUSH1 0x20		allowed[_owner]
ADD			allowed[_owner]
PUSH1 0x0		allowed[_owner]
SHA3			allowed[_owner]
PUSH1 0x0		allowed[_owner][_spender]
DUP4			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner][_spender]
AND			allowed[_owner][_spender]
DUP2			allowed[_owner][_spender]
MSTORE			allowed[_owner][_spender]
PUSH1 0x20		allowed[_owner][_spender]
ADD			allowed[_owner][_spender]
SWAP1			allowed[_owner][_spender]
DUP2			allowed[_owner][_spender]
MSTORE			allowed[_owner][_spender]
PUSH1 0x20		allowed[_owner][_spender]
ADD			allowed[_owner][_spender]
PUSH1 0x0		allowed[_owner][_spender]
SHA3			allowed[_owner][_spender]
SLOAD			allowed[_owner][_spender]
SWAP1			return allowed[_owner][_spender]
POP			return allowed[_owner][_spender]
tag164
 
JUMPDEST		function allowance
(
address _owner
 address _spender
...
SWAP3			function allowance
(
address _owner
 address _spender
...
SWAP2			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
JUMP	[out]		function allowance
(
address _owner
 address _spender
...
tag80
 
JUMPDEST		MiniMeTokenFactory public tokenFactory
PUSH1 0xB		MiniMeTokenFactory public tokenFactory
PUSH1 0x1		MiniMeTokenFactory public tokenFactory
SWAP1			MiniMeTokenFactory public tokenFactory
SLOAD			MiniMeTokenFactory public tokenFactory
SWAP1			MiniMeTokenFactory public tokenFactory
PUSH2 0x100		MiniMeTokenFactory public tokenFactory
EXP			MiniMeTokenFactory public tokenFactory
SWAP1			MiniMeTokenFactory public tokenFactory
DIV			MiniMeTokenFactory public tokenFactory
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		MiniMeTokenFactory public tokenFactory
AND			MiniMeTokenFactory public tokenFactory
DUP2			MiniMeTokenFactory public tokenFactory
JUMP	[out]		MiniMeTokenFactory public tokenFactory
tag82
 
JUMPDEST		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 throw
PUSH [tag166]		if 
(
msg.sender != controller
)
 throw
JUMPI			if 
(
msg.sender != controller
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag166
 
JUMPDEST		if 
(
msg.sender != controller
)
 throw
DUP1			_transfersEnabled
PUSH1 0xB		transfersEnabled
PUSH1 0x0		transfersEnabled
PUSH2 0x100		transfersEnabled = _transfersEnabled
EXP			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
SLOAD			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
PUSH1 0xFF		transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
NOT			transfersEnabled = _transfersEnabled
AND			transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
DUP4			transfersEnabled = _transfersEnabled
PUSH32 0x100000000000000000000000000000000000000000000000000000000000000		transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
DIV			transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
OR			transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
SSTORE			transfersEnabled = _transfersEnabled
POP			transfersEnabled = _transfersEnabled
tag167
 
JUMPDEST		_
tag165
 
JUMPDEST		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
POP			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
JUMP	[out]		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
tag84
 
JUMPDEST		address public controller
PUSH1 0x0		address public controller
PUSH1 0x0		address public controller
SWAP1			address public controller
SLOAD			address public controller
SWAP1			address public controller
PUSH2 0x100		address public controller
EXP			address public controller
SWAP1			address public controller
DIV			address public controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public controller
AND			address public controller
DUP2			address public controller
JUMP	[out]		address public controller
tag104
 
JUMPDEST		function doTransfer
(
address _from
 address _to
 uint _amount
...
PUSH1 0x0		bool
PUSH1 0x0		var previousBalanceFrom
PUSH1 0x0		var previousBalanceTo
PUSH1 0x0		0
DUP5			_amount
EQ			_amount == 0
ISZERO			if 
(
_amount == 0
)
 {
...
PUSH [tag169]		if 
(
_amount == 0
)
 {
...
JUMPI			if 
(
_amount == 0
)
 {
...
PUSH1 0x1		true
SWAP3			return true
POP			return true
PUSH [tag168]		return true
JUMP			return true
tag169
 
JUMPDEST		if 
(
_amount == 0
)
 {
...
PUSH1 0x0		0
DUP6			_to
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_to == 0
AND			_to == 0
EQ			_to == 0
DUP1			
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
PUSH [tag170]		
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
JUMPI			
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
POP			
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
ADDRESS			this
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_to == address
(
this
)
AND			_to == address
(
this
)
DUP6			_to
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_to == address
(
this
)
AND			_to == address
(
this
)
EQ			_to == address
(
this
)
tag170
 
JUMPDEST		
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
ISZERO			if 
(
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
)
 throw
PUSH [tag171]		if 
(
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
)
 throw
JUMPI			if 
(
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag171
 
JUMPDEST		if 
(
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
)
 throw
PUSH [tag172]		balanceOfAt
(
_from
 block.number
)
DUP7			_from
NUMBER			block.number
PUSH [tag50]		balanceOfAt
JUMP	[in]		balanceOfAt
(
_from
 block.number
)
tag172
 
JUMPDEST		balanceOfAt
(
_from
 block.number
)
SWAP2			var previousBalanceFrom = balanceOfAt
(
_from
 block.number
)
POP			var previousBalanceFrom = balanceOfAt
(
_from
 block.number
)
DUP4			_amount
DUP3			previousBalanceFrom
LT			previousBalanceFrom < _amount
ISZERO			if 
(
previousBalanceFrom < _amount
)
 {
...
PUSH [tag173]		if 
(
previousBalanceFrom < _amount
)
 {
...
JUMPI			if 
(
previousBalanceFrom < _amount
)
 {
...
PUSH1 0x0		false
SWAP3			return false
POP			return false
PUSH [tag168]		return false
JUMP			return false
tag173
 
JUMPDEST		if 
(
previousBalanceFrom < _amount
)
 {
...
PUSH [tag174]		isContract
(
controller
)
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH [tag30]		isContract
JUMP	[in]		isContract
(
controller
)
tag174
 
JUMPDEST		isContract
(
controller
)
ISZERO			if 
(
isContract
(
controller
)
)
 {
...
PUSH [tag175]		if 
(
isContract
(
controller
)
)
 {
...
JUMPI			if 
(
isContract
(
controller
)
)
 {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onTransfer
AND			TokenController
(
controller
)
.onTransfer
PUSH4 0x4A393149		TokenController
(
controller
)
.onTransfer
DUP8			_from
DUP8			_to
DUP8			_amount
PUSH1 0x0		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MLOAD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MSTORE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MLOAD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP5			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MUL			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP2			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MSTORE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x4		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP1			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP5			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
AND			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP2			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MSTORE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP4			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
AND			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP2			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MSTORE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP3			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP2			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MSTORE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
SWAP4			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MLOAD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP1			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP4			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
SUB			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP2			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x0		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP8			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP1			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
EXTCODESIZE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ISZERO			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH [ErrorTag]		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
JUMPI			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x32		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
GAS			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
SUB			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
CALL			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ISZERO			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH [ErrorTag]		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
JUMPI			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MLOAD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP1			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MLOAD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
SWAP1			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ISZERO			!TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ISZERO			if 
(
!TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
)
...
PUSH [tag176]		if 
(
!TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
)
...
JUMPI			if 
(
!TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
)
...
PUSH [ErrorTag]		throw
JUMP			throw
tag176
 
JUMPDEST		if 
(
!TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
)
...
tag175
 
JUMPDEST		if 
(
isContract
(
controller
)
)
 {
...
PUSH [tag177]		updateValueAtNow
(
balances[_from]
 previousBalanceFrom - _amount
)
PUSH1 0x8		balances
PUSH1 0x0		balances[_from]
DUP9			_from
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_from]
AND			balances[_from]
DUP2			balances[_from]
MSTORE			balances[_from]
PUSH1 0x20		balances[_from]
ADD			balances[_from]
SWAP1			balances[_from]
DUP2			balances[_from]
MSTORE			balances[_from]
PUSH1 0x20		balances[_from]
ADD			balances[_from]
PUSH1 0x0		balances[_from]
SHA3			balances[_from]
DUP6			_amount
DUP5			previousBalanceFrom
SUB			previousBalanceFrom - _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
balances[_from]
 previousBalanceFrom - _amount
)
tag177
 
JUMPDEST		updateValueAtNow
(
balances[_from]
 previousBalanceFrom - _amount
)
PUSH [tag178]		balanceOfAt
(
_to
 block.number
)
DUP6			_to
NUMBER			block.number
PUSH [tag50]		balanceOfAt
JUMP	[in]		balanceOfAt
(
_to
 block.number
)
tag178
 
JUMPDEST		balanceOfAt
(
_to
 block.number
)
SWAP1			var previousBalanceTo = balanceOfAt
(
_to
 block.number
)
POP			var previousBalanceTo = balanceOfAt
(
_to
 block.number
)
PUSH [tag179]		updateValueAtNow
(
balances[_to]
 previousBalanceTo + _amount
)
PUSH1 0x8		balances
PUSH1 0x0		balances[_to]
DUP8			_to
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_to]
AND			balances[_to]
DUP2			balances[_to]
MSTORE			balances[_to]
PUSH1 0x20		balances[_to]
ADD			balances[_to]
SWAP1			balances[_to]
DUP2			balances[_to]
MSTORE			balances[_to]
PUSH1 0x20		balances[_to]
ADD			balances[_to]
PUSH1 0x0		balances[_to]
SHA3			balances[_to]
DUP6			_amount
DUP4			previousBalanceTo
ADD			previousBalanceTo + _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
balances[_to]
 previousBalanceTo + _amount
)
tag179
 
JUMPDEST		updateValueAtNow
(
balances[_to]
 previousBalanceTo + _amount
)
DUP5			_to
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer
(
_from
 _to
 _amount
)
AND			Transfer
(
_from
 _to
 _amount
)
DUP7			_from
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer
(
_from
 _to
 _amount
)
AND			Transfer
(
_from
 _to
 _amount
)
PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer
(
_from
 _to
 _amount
)
DUP7			_amount
PUSH1 0x40		Transfer
(
_from
 _to
 _amount
)
MLOAD			Transfer
(
_from
 _to
 _amount
)
DUP1			Transfer
(
_from
 _to
 _amount
)
DUP3			Transfer
(
_from
 _to
 _amount
)
DUP2			Transfer
(
_from
 _to
 _amount
)
MSTORE			Transfer
(
_from
 _to
 _amount
)
PUSH1 0x20		Transfer
(
_from
 _to
 _amount
)
ADD			Transfer
(
_from
 _to
 _amount
)
SWAP2			Transfer
(
_from
 _to
 _amount
)
POP			Transfer
(
_from
 _to
 _amount
)
POP			Transfer
(
_from
 _to
 _amount
)
PUSH1 0x40		Transfer
(
_from
 _to
 _amount
)
MLOAD			Transfer
(
_from
 _to
 _amount
)
DUP1			Transfer
(
_from
 _to
 _amount
)
SWAP2			Transfer
(
_from
 _to
 _amount
)
SUB			Transfer
(
_from
 _to
 _amount
)
SWAP1			Transfer
(
_from
 _to
 _amount
)
LOG3			Transfer
(
_from
 _to
 _amount
)
PUSH1 0x1		true
SWAP3			return true
POP			return true
tag168
 
JUMPDEST		function doTransfer
(
address _from
 address _to
 uint _amount
...
POP			function doTransfer
(
address _from
 address _to
 uint _amount
...
POP			function doTransfer
(
address _from
 address _to
 uint _amount
...
SWAP4			function doTransfer
(
address _from
 address _to
 uint _amount
...
SWAP3			function doTransfer
(
address _from
 address _to
 uint _amount
...
POP			function doTransfer
(
address _from
 address _to
 uint _amount
...
POP			function doTransfer
(
address _from
 address _to
 uint _amount
...
POP			function doTransfer
(
address _from
 address _to
 uint _amount
...
JUMP	[out]		function doTransfer
(
address _from
 address _to
 uint _amount
...
tag118
 
JUMPDEST		function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
PUSH1 0x0		uint
PUSH1 0x0		uint min
PUSH1 0x0		uint max
PUSH1 0x0		uint mid
PUSH1 0x0		0
DUP7			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
EQ			checkpoints.length == 0
ISZERO			if 
(
checkpoints.length == 0
)
 return 0
PUSH [tag181]		if 
(
checkpoints.length == 0
)
 return 0
JUMPI			if 
(
checkpoints.length == 0
)
 return 0
PUSH1 0x0		0
SWAP4			return 0
POP			return 0
PUSH [tag180]		return 0
JUMP			return 0
tag181
 
JUMPDEST		if 
(
checkpoints.length == 0
)
 return 0
DUP6			checkpoints
PUSH1 0x1		1
DUP8			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
SUB			checkpoints.length-1
DUP2			checkpoints[checkpoints.length-1]
SLOAD			checkpoints[checkpoints.length-1]
DUP2			checkpoints[checkpoints.length-1]
LT			checkpoints[checkpoints.length-1]
ISZERO			checkpoints[checkpoints.length-1]
PUSH [ErrorTag]		checkpoints[checkpoints.length-1]
JUMPI			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
MSTORE			checkpoints[checkpoints.length-1]
PUSH1 0x20		checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
SHA3			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
ADD			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
tag182
 
JUMPDEST		checkpoints[checkpoints.length-1]
POP			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1].fromBlock
ADD			checkpoints[checkpoints.length-1].fromBlock
PUSH1 0x0		checkpoints[checkpoints.length-1].fromBlock
SWAP1			checkpoints[checkpoints.length-1].fromBlock
SLOAD			checkpoints[checkpoints.length-1].fromBlock
SWAP1			checkpoints[checkpoints.length-1].fromBlock
PUSH2 0x100		checkpoints[checkpoints.length-1].fromBlock
EXP			checkpoints[checkpoints.length-1].fromBlock
SWAP1			checkpoints[checkpoints.length-1].fromBlock
DIV			checkpoints[checkpoints.length-1].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[checkpoints.length-1].fromBlock
AND			checkpoints[checkpoints.length-1].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_block >= checkpoints[checkpoints.length-1].fromBlock
AND			_block >= checkpoints[checkpoints.length-1].fromBlock
DUP6			_block
LT			_block >= checkpoints[checkpoints.length-1].fromBlock
ISZERO			_block >= checkpoints[checkpoints.length-1].fromBlock
ISZERO			if 
(
_block >= checkpoints[checkpoints.length-1].fromBlock
)
...
PUSH [tag183]		if 
(
_block >= checkpoints[checkpoints.length-1].fromBlock
)
...
JUMPI			if 
(
_block >= checkpoints[checkpoints.length-1].fromBlock
)
...
DUP6			checkpoints
PUSH1 0x1		1
DUP8			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
SUB			checkpoints.length-1
DUP2			checkpoints[checkpoints.length-1]
SLOAD			checkpoints[checkpoints.length-1]
DUP2			checkpoints[checkpoints.length-1]
LT			checkpoints[checkpoints.length-1]
ISZERO			checkpoints[checkpoints.length-1]
PUSH [ErrorTag]		checkpoints[checkpoints.length-1]
JUMPI			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
MSTORE			checkpoints[checkpoints.length-1]
PUSH1 0x20		checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
SHA3			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
ADD			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
tag184
 
JUMPDEST		checkpoints[checkpoints.length-1]
POP			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1].value
ADD			checkpoints[checkpoints.length-1].value
PUSH1 0x10		checkpoints[checkpoints.length-1].value
SWAP1			checkpoints[checkpoints.length-1].value
SLOAD			checkpoints[checkpoints.length-1].value
SWAP1			checkpoints[checkpoints.length-1].value
PUSH2 0x100		checkpoints[checkpoints.length-1].value
EXP			checkpoints[checkpoints.length-1].value
SWAP1			checkpoints[checkpoints.length-1].value
DIV			checkpoints[checkpoints.length-1].value
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[checkpoints.length-1].value
AND			checkpoints[checkpoints.length-1].value
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		return checkpoints[checkpoints.length-1].value
AND			return checkpoints[checkpoints.length-1].value
SWAP4			return checkpoints[checkpoints.length-1].value
POP			return checkpoints[checkpoints.length-1].value
PUSH [tag180]		return checkpoints[checkpoints.length-1].value
JUMP			return checkpoints[checkpoints.length-1].value
tag183
 
JUMPDEST		if 
(
_block >= checkpoints[checkpoints.length-1].fromBlock
)
...
DUP6			checkpoints
PUSH1 0x0		0
DUP2			checkpoints[0]
SLOAD			checkpoints[0]
DUP2			checkpoints[0]
LT			checkpoints[0]
ISZERO			checkpoints[0]
PUSH [ErrorTag]		checkpoints[0]
JUMPI			checkpoints[0]
SWAP1			checkpoints[0]
PUSH1 0x0		checkpoints[0]
MSTORE			checkpoints[0]
PUSH1 0x20		checkpoints[0]
PUSH1 0x0		checkpoints[0]
SHA3			checkpoints[0]
SWAP1			checkpoints[0]
ADD			checkpoints[0]
PUSH1 0x0		checkpoints[0]
tag185
 
JUMPDEST		checkpoints[0]
POP			checkpoints[0]
PUSH1 0x0		checkpoints[0].fromBlock
ADD			checkpoints[0].fromBlock
PUSH1 0x0		checkpoints[0].fromBlock
SWAP1			checkpoints[0].fromBlock
SLOAD			checkpoints[0].fromBlock
SWAP1			checkpoints[0].fromBlock
PUSH2 0x100		checkpoints[0].fromBlock
EXP			checkpoints[0].fromBlock
SWAP1			checkpoints[0].fromBlock
DIV			checkpoints[0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[0].fromBlock
AND			checkpoints[0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_block < checkpoints[0].fromBlock
AND			_block < checkpoints[0].fromBlock
DUP6			_block
LT			_block < checkpoints[0].fromBlock
ISZERO			if 
(
_block < checkpoints[0].fromBlock
)
 return 0
PUSH [tag186]		if 
(
_block < checkpoints[0].fromBlock
)
 return 0
JUMPI			if 
(
_block < checkpoints[0].fromBlock
)
 return 0
PUSH1 0x0		0
SWAP4			return 0
POP			return 0
PUSH [tag180]		return 0
JUMP			return 0
tag186
 
JUMPDEST		if 
(
_block < checkpoints[0].fromBlock
)
 return 0
PUSH1 0x0		0
SWAP3			uint min = 0
POP			uint min = 0
PUSH1 0x1		1
DUP7			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
SUB			checkpoints.length-1
SWAP2			uint max = checkpoints.length-1
POP			uint max = checkpoints.length-1
tag187
 
JUMPDEST		while 
(
max > min
)
 {
...
DUP3			min
DUP3			max
GT			max > min
ISZERO			while 
(
max > min
)
 {
...
PUSH [tag188]		while 
(
max > min
)
 {
...
JUMPI			while 
(
max > min
)
 {
...
PUSH1 0x2		2
PUSH1 0x1		1
DUP5			min
DUP5			max
ADD			max + min
ADD			max + min + 1
DUP2			
(
max + min + 1
)
/ 2
ISZERO			
(
max + min + 1
)
/ 2
PUSH [ErrorTag]		
(
max + min + 1
)
/ 2
JUMPI			
(
max + min + 1
)
/ 2
DIV			
(
max + min + 1
)
/ 2
SWAP1			uint mid = 
(
max + min + 1
)
/ 2
POP			uint mid = 
(
max + min + 1
)
/ 2
DUP5			_block
DUP7			checkpoints
DUP3			mid
DUP2			checkpoints[mid]
SLOAD			checkpoints[mid]
DUP2			checkpoints[mid]
LT			checkpoints[mid]
ISZERO			checkpoints[mid]
PUSH [ErrorTag]		checkpoints[mid]
JUMPI			checkpoints[mid]
SWAP1			checkpoints[mid]
PUSH1 0x0		checkpoints[mid]
MSTORE			checkpoints[mid]
PUSH1 0x20		checkpoints[mid]
PUSH1 0x0		checkpoints[mid]
SHA3			checkpoints[mid]
SWAP1			checkpoints[mid]
ADD			checkpoints[mid]
PUSH1 0x0		checkpoints[mid]
tag189
 
JUMPDEST		checkpoints[mid]
POP			checkpoints[mid]
PUSH1 0x0		checkpoints[mid].fromBlock
ADD			checkpoints[mid].fromBlock
PUSH1 0x0		checkpoints[mid].fromBlock
SWAP1			checkpoints[mid].fromBlock
SLOAD			checkpoints[mid].fromBlock
SWAP1			checkpoints[mid].fromBlock
PUSH2 0x100		checkpoints[mid].fromBlock
EXP			checkpoints[mid].fromBlock
SWAP1			checkpoints[mid].fromBlock
DIV			checkpoints[mid].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[mid].fromBlock
AND			checkpoints[mid].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[mid].fromBlock<=_block
AND			checkpoints[mid].fromBlock<=_block
GT			checkpoints[mid].fromBlock<=_block
ISZERO			checkpoints[mid].fromBlock<=_block
ISZERO			if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
PUSH [tag190]		if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
JUMPI			if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
DUP1			mid
SWAP3			min = mid
POP			min = mid
PUSH [tag191]		if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
JUMP			if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
tag190
 
JUMPDEST		if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
PUSH1 0x1		1
DUP2			mid
SUB			mid-1
SWAP2			max = mid-1
POP			max = mid-1
tag191
 
JUMPDEST		if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
PUSH [tag187]		while 
(
max > min
)
 {
...
JUMP			while 
(
max > min
)
 {
...
tag188
 
JUMPDEST		while 
(
max > min
)
 {
...
DUP6			checkpoints
DUP4			min
DUP2			checkpoints[min]
SLOAD			checkpoints[min]
DUP2			checkpoints[min]
LT			checkpoints[min]
ISZERO			checkpoints[min]
PUSH [ErrorTag]		checkpoints[min]
JUMPI			checkpoints[min]
SWAP1			checkpoints[min]
PUSH1 0x0		checkpoints[min]
MSTORE			checkpoints[min]
PUSH1 0x20		checkpoints[min]
PUSH1 0x0		checkpoints[min]
SHA3			checkpoints[min]
SWAP1			checkpoints[min]
ADD			checkpoints[min]
PUSH1 0x0		checkpoints[min]
tag192
 
JUMPDEST		checkpoints[min]
POP			checkpoints[min]
PUSH1 0x0		checkpoints[min].value
ADD			checkpoints[min].value
PUSH1 0x10		checkpoints[min].value
SWAP1			checkpoints[min].value
SLOAD			checkpoints[min].value
SWAP1			checkpoints[min].value
PUSH2 0x100		checkpoints[min].value
EXP			checkpoints[min].value
SWAP1			checkpoints[min].value
DIV			checkpoints[min].value
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[min].value
AND			checkpoints[min].value
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		return checkpoints[min].value
AND			return checkpoints[min].value
SWAP4			return checkpoints[min].value
POP			return checkpoints[min].value
tag180
 
JUMPDEST		function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
POP			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
POP			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
POP			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
SWAP3			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
SWAP2			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
POP			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
POP			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
JUMP	[out]		function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
tag133
 
JUMPDEST		function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
PUSH1 0x0		Checkpoint newCheckPoint
PUSH1 0x0		Checkpoint oldCheckPoint
PUSH1 0x0		0
DUP5			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
EQ			checkpoints.length == 0
DUP1			
(
checkpoints.length == 0
)
...
PUSH [tag194]		
(
checkpoints.length == 0
)
...
JUMPI			
(
checkpoints.length == 0
)
...
POP			
(
checkpoints.length == 0
)
...
NUMBER			block.number
DUP5			checkpoints
PUSH1 0x1		1
DUP7			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
SUB			checkpoints.length -1
DUP2			checkpoints[checkpoints.length -1]
SLOAD			checkpoints[checkpoints.length -1]
DUP2			checkpoints[checkpoints.length -1]
LT			checkpoints[checkpoints.length -1]
ISZERO			checkpoints[checkpoints.length -1]
PUSH [ErrorTag]		checkpoints[checkpoints.length -1]
JUMPI			checkpoints[checkpoints.length -1]
SWAP1			checkpoints[checkpoints.length -1]
PUSH1 0x0		checkpoints[checkpoints.length -1]
MSTORE			checkpoints[checkpoints.length -1]
PUSH1 0x20		checkpoints[checkpoints.length -1]
PUSH1 0x0		checkpoints[checkpoints.length -1]
SHA3			checkpoints[checkpoints.length -1]
SWAP1			checkpoints[checkpoints.length -1]
ADD			checkpoints[checkpoints.length -1]
PUSH1 0x0		checkpoints[checkpoints.length -1]
tag195
 
JUMPDEST		checkpoints[checkpoints.length -1]
POP			checkpoints[checkpoints.length -1]
PUSH1 0x0		checkpoints[checkpoints.length -1].fromBlock
ADD			checkpoints[checkpoints.length -1].fromBlock
PUSH1 0x0		checkpoints[checkpoints.length -1].fromBlock
SWAP1			checkpoints[checkpoints.length -1].fromBlock
SLOAD			checkpoints[checkpoints.length -1].fromBlock
SWAP1			checkpoints[checkpoints.length -1].fromBlock
PUSH2 0x100		checkpoints[checkpoints.length -1].fromBlock
EXP			checkpoints[checkpoints.length -1].fromBlock
SWAP1			checkpoints[checkpoints.length -1].fromBlock
DIV			checkpoints[checkpoints.length -1].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[checkpoints.length -1].fromBlock
AND			checkpoints[checkpoints.length -1].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[checkpoints.length -1].fromBlock < block.number
AND			checkpoints[checkpoints.length -1].fromBlock < block.number
LT			checkpoints[checkpoints.length -1].fromBlock < block.number
tag194
 
JUMPDEST		
(
checkpoints.length == 0
)
...
ISZERO			if 
(
(
checkpoints.length == 0
)
...
PUSH [tag196]		if 
(
(
checkpoints.length == 0
)
...
JUMPI			if 
(
(
checkpoints.length == 0
)
...
DUP4			checkpoints
DUP5			checkpoints
DUP1			checkpoints.length++
SLOAD			checkpoints.length++
DUP1			checkpoints.length++
SWAP2			checkpoints.length++
SWAP1			checkpoints.length++
PUSH1 0x1		checkpoints.length++
ADD			checkpoints.length++
DUP2			checkpoints.length++
SLOAD			checkpoints.length++
DUP2			checkpoints.length++
DUP4			checkpoints.length++
SSTORE			checkpoints.length++
DUP2			checkpoints.length++
DUP2			checkpoints.length++
ISZERO			checkpoints.length++
GT			checkpoints.length++
PUSH [tag197]		checkpoints.length++
JUMPI			checkpoints.length++
DUP2			checkpoints.length++
DUP4			checkpoints.length++
PUSH1 0x0		checkpoints.length++
MSTORE			checkpoints.length++
PUSH1 0x20		checkpoints.length++
PUSH1 0x0		checkpoints.length++
SHA3			checkpoints.length++
SWAP2			checkpoints.length++
DUP3			checkpoints.length++
ADD			checkpoints.length++
SWAP2			checkpoints.length++
ADD			checkpoints.length++
PUSH [tag198]		checkpoints.length++
SWAP2			checkpoints.length++
SWAP1			checkpoints.length++
tag199
 
JUMPDEST		checkpoints.length++
DUP1			checkpoints.length++
DUP3			checkpoints.length++
GT			checkpoints.length++
ISZERO			checkpoints.length++
PUSH [tag200]		checkpoints.length++
JUMPI			checkpoints.length++
PUSH1 0x0		checkpoints.length++
PUSH1 0x0		checkpoints.length++
DUP3			checkpoints.length++
ADD			checkpoints.length++
PUSH1 0x0		checkpoints.length++
PUSH2 0x100		checkpoints.length++
EXP			checkpoints.length++
DUP2			checkpoints.length++
SLOAD			checkpoints.length++
SWAP1			checkpoints.length++
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints.length++
MUL			checkpoints.length++
NOT			checkpoints.length++
AND			checkpoints.length++
SWAP1			checkpoints.length++
SSTORE			checkpoints.length++
PUSH1 0x0		checkpoints.length++
DUP3			checkpoints.length++
ADD			checkpoints.length++
PUSH1 0x10		checkpoints.length++
PUSH2 0x100		checkpoints.length++
EXP			checkpoints.length++
DUP2			checkpoints.length++
SLOAD			checkpoints.length++
SWAP1			checkpoints.length++
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints.length++
MUL			checkpoints.length++
NOT			checkpoints.length++
AND			checkpoints.length++
SWAP1			checkpoints.length++
SSTORE			checkpoints.length++
POP			checkpoints.length++
PUSH1 0x1		checkpoints.length++
ADD			checkpoints.length++
PUSH [tag199]		checkpoints.length++
JUMP			checkpoints.length++
tag200
 
JUMPDEST		checkpoints.length++
POP			checkpoints.length++
SWAP1			checkpoints.length++
JUMP			checkpoints.length++
tag198
 
JUMPDEST		checkpoints.length++
tag197
 
JUMPDEST		checkpoints.length++
POP			checkpoints.length++
POP			checkpoints.length++
POP			checkpoints.length++
DUP2			checkpoints[ checkpoints.length++ ]
SLOAD			checkpoints[ checkpoints.length++ ]
DUP2			checkpoints[ checkpoints.length++ ]
LT			checkpoints[ checkpoints.length++ ]
ISZERO			checkpoints[ checkpoints.length++ ]
PUSH [ErrorTag]		checkpoints[ checkpoints.length++ ]
JUMPI			checkpoints[ checkpoints.length++ ]
SWAP1			checkpoints[ checkpoints.length++ ]
PUSH1 0x0		checkpoints[ checkpoints.length++ ]
MSTORE			checkpoints[ checkpoints.length++ ]
PUSH1 0x20		checkpoints[ checkpoints.length++ ]
PUSH1 0x0		checkpoints[ checkpoints.length++ ]
SHA3			checkpoints[ checkpoints.length++ ]
SWAP1			checkpoints[ checkpoints.length++ ]
ADD			checkpoints[ checkpoints.length++ ]
PUSH1 0x0		checkpoints[ checkpoints.length++ ]
tag201
 
JUMPDEST		checkpoints[ checkpoints.length++ ]
POP			checkpoints[ checkpoints.length++ ]
SWAP2			Checkpoint newCheckPoint = checkpoints[ checkpoints.length++ ]
POP			Checkpoint newCheckPoint = checkpoints[ checkpoints.length++ ]
NUMBER			block.number
DUP3			newCheckPoint
PUSH1 0x0		newCheckPoint.fromBlock
ADD			newCheckPoint.fromBlock
PUSH1 0x0		newCheckPoint.fromBlock
PUSH2 0x100		newCheckPoint.fromBlock =uint128
(
block.number
)
EXP			newCheckPoint.fromBlock =uint128
(
block.number
)
DUP2			newCheckPoint.fromBlock =uint128
(
block.number
)
SLOAD			newCheckPoint.fromBlock =uint128
(
block.number
)
DUP2			newCheckPoint.fromBlock =uint128
(
block.number
)
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		newCheckPoint.fromBlock =uint128
(
block.number
)
MUL			newCheckPoint.fromBlock =uint128
(
block.number
)
NOT			newCheckPoint.fromBlock =uint128
(
block.number
)
AND			newCheckPoint.fromBlock =uint128
(
block.number
)
SWAP1			newCheckPoint.fromBlock =uint128
(
block.number
)
DUP4			newCheckPoint.fromBlock =uint128
(
block.number
)
PUSH17 0x100000000000000000000000000000000		newCheckPoint.fromBlock =uint128
(
block.number
)
SWAP1			newCheckPoint.fromBlock =uint128
(
block.number
)
DUP2			newCheckPoint.fromBlock =uint128
(
block.number
)
MUL			newCheckPoint.fromBlock =uint128
(
block.number
)
DIV			newCheckPoint.fromBlock =uint128
(
block.number
)
MUL			newCheckPoint.fromBlock =uint128
(
block.number
)
OR			newCheckPoint.fromBlock =uint128
(
block.number
)
SWAP1			newCheckPoint.fromBlock =uint128
(
block.number
)
SSTORE			newCheckPoint.fromBlock =uint128
(
block.number
)
POP			newCheckPoint.fromBlock =uint128
(
block.number
)
DUP3			_value
DUP3			newCheckPoint
PUSH1 0x0		newCheckPoint.value
ADD			newCheckPoint.value
PUSH1 0x10		newCheckPoint.value
PUSH2 0x100		newCheckPoint.value = uint128
(
_value
)
EXP			newCheckPoint.value = uint128
(
_value
)
DUP2			newCheckPoint.value = uint128
(
_value
)
SLOAD			newCheckPoint.value = uint128
(
_value
)
DUP2			newCheckPoint.value = uint128
(
_value
)
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		newCheckPoint.value = uint128
(
_value
)
MUL			newCheckPoint.value = uint128
(
_value
)
NOT			newCheckPoint.value = uint128
(
_value
)
AND			newCheckPoint.value = uint128
(
_value
)
SWAP1			newCheckPoint.value = uint128
(
_value
)
DUP4			newCheckPoint.value = uint128
(
_value
)
PUSH17 0x100000000000000000000000000000000		newCheckPoint.value = uint128
(
_value
)
SWAP1			newCheckPoint.value = uint128
(
_value
)
DUP2			newCheckPoint.value = uint128
(
_value
)
MUL			newCheckPoint.value = uint128
(
_value
)
DIV			newCheckPoint.value = uint128
(
_value
)
MUL			newCheckPoint.value = uint128
(
_value
)
OR			newCheckPoint.value = uint128
(
_value
)
SWAP1			newCheckPoint.value = uint128
(
_value
)
SSTORE			newCheckPoint.value = uint128
(
_value
)
POP			newCheckPoint.value = uint128
(
_value
)
PUSH [tag202]		if 
(
(
checkpoints.length == 0
)
...
JUMP			if 
(
(
checkpoints.length == 0
)
...
tag196
 
JUMPDEST		if 
(
(
checkpoints.length == 0
)
...
DUP4			checkpoints
PUSH1 0x1		1
DUP6			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
SUB			checkpoints.length-1
DUP2			checkpoints[checkpoints.length-1]
SLOAD			checkpoints[checkpoints.length-1]
DUP2			checkpoints[checkpoints.length-1]
LT			checkpoints[checkpoints.length-1]
ISZERO			checkpoints[checkpoints.length-1]
PUSH [ErrorTag]		checkpoints[checkpoints.length-1]
JUMPI			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
MSTORE			checkpoints[checkpoints.length-1]
PUSH1 0x20		checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
SHA3			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
ADD			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
tag203
 
JUMPDEST		checkpoints[checkpoints.length-1]
POP			checkpoints[checkpoints.length-1]
SWAP1			Checkpoint oldCheckPoint = checkpoints[checkpoints.length-1]
POP			Checkpoint oldCheckPoint = checkpoints[checkpoints.length-1]
DUP3			_value
DUP2			oldCheckPoint
PUSH1 0x0		oldCheckPoint.value
ADD			oldCheckPoint.value
PUSH1 0x10		oldCheckPoint.value
PUSH2 0x100		oldCheckPoint.value = uint128
(
_value
)
EXP			oldCheckPoint.value = uint128
(
_value
)
DUP2			oldCheckPoint.value = uint128
(
_value
)
SLOAD			oldCheckPoint.value = uint128
(
_value
)
DUP2			oldCheckPoint.value = uint128
(
_value
)
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		oldCheckPoint.value = uint128
(
_value
)
MUL			oldCheckPoint.value = uint128
(
_value
)
NOT			oldCheckPoint.value = uint128
(
_value
)
AND			oldCheckPoint.value = uint128
(
_value
)
SWAP1			oldCheckPoint.value = uint128
(
_value
)
DUP4			oldCheckPoint.value = uint128
(
_value
)
PUSH17 0x100000000000000000000000000000000		oldCheckPoint.value = uint128
(
_value
)
SWAP1			oldCheckPoint.value = uint128
(
_value
)
DUP2			oldCheckPoint.value = uint128
(
_value
)
MUL			oldCheckPoint.value = uint128
(
_value
)
DIV			oldCheckPoint.value = uint128
(
_value
)
MUL			oldCheckPoint.value = uint128
(
_value
)
OR			oldCheckPoint.value = uint128
(
_value
)
SWAP1			oldCheckPoint.value = uint128
(
_value
)
SSTORE			oldCheckPoint.value = uint128
(
_value
)
POP			oldCheckPoint.value = uint128
(
_value
)
tag202
 
JUMPDEST		if 
(
(
checkpoints.length == 0
)
...
tag193
 
JUMPDEST		function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
POP			function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
POP			function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
POP			function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
POP			function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
JUMP	[out]		function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
.code
PUSH1 0x60		contract MiniMeTokenFactory {
...
PUSH1 0x40		contract MiniMeTokenFactory {
...
MSTORE			contract MiniMeTokenFactory {
...
CALLVALUE			contract MiniMeTokenFactory {
...
PUSH [ErrorTag]		contract MiniMeTokenFactory {
...
JUMPI			contract MiniMeTokenFactory {
...
tag1
 
JUMPDEST		contract MiniMeTokenFactory {
...
PUSH #[$0]		contract MiniMeTokenFactory {
...
DUP1			contract MiniMeTokenFactory {
...
PUSH [$0]		contract MiniMeTokenFactory {
...
PUSH1 0x0		contract MiniMeTokenFactory {
...
CODECOPY			contract MiniMeTokenFactory {
...
PUSH1 0x0		contract MiniMeTokenFactory {
...
RETURN			contract MiniMeTokenFactory {
...
.data
0
 
.code
PUSH1 0x60		contract MiniMeTokenFactory {
...
PUSH1 0x40		contract MiniMeTokenFactory {
...
MSTORE			contract MiniMeTokenFactory {
...
PUSH1 0x0		contract MiniMeTokenFactory {
...
CALLDATALOAD			contract MiniMeTokenFactory {
...
PUSH29 0x100000000000000000000000000000000000000000000000000000000		contract MiniMeTokenFactory {
...
SWAP1			contract MiniMeTokenFactory {
...
DIV			contract MiniMeTokenFactory {
...
DUP1			contract MiniMeTokenFactory {
...
PUSH4 0x5B7B72C1		contract MiniMeTokenFactory {
...
EQ			contract MiniMeTokenFactory {
...
PUSH [tag2]		contract MiniMeTokenFactory {
...
JUMPI			contract MiniMeTokenFactory {
...
tag1
 
JUMPDEST		contract MiniMeTokenFactory {
...
PUSH [ErrorTag]		contract MiniMeTokenFactory {
...
JUMP			contract MiniMeTokenFactory {
...
tag2
 
JUMPDEST		function createCloneToken
(
...
CALLVALUE			function createCloneToken
(
...
PUSH [ErrorTag]		function createCloneToken
(
...
JUMPI			function createCloneToken
(
...
PUSH [tag3]		function createCloneToken
(
...
PUSH1 0x4		function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
PUSH1 0x1F		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
DIV			function createCloneToken
(
...
MUL			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP4			function createCloneToken
(
...
SWAP3			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
DUP5			function createCloneToken
(
...
CALLDATACOPY			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
PUSH1 0x1F		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
DIV			function createCloneToken
(
...
MUL			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP4			function createCloneToken
(
...
SWAP3			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
DUP5			function createCloneToken
(
...
CALLDATACOPY			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
PUSH [tag4]		function createCloneToken
(
...
JUMP			function createCloneToken
(
...
tag3
 
JUMPDEST		function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		function createCloneToken
(
...
AND			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SUB			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
RETURN			function createCloneToken
(
...
tag4
 
JUMPDEST		function createCloneToken
(
...
PUSH1 0x0		MiniMeToken
PUSH1 0x0		MiniMeToken newToken
ADDRESS			this
DUP9			_parentToken
DUP9			_snapshotBlock
DUP9			_tokenName
DUP9			_decimalUnits
DUP9			_tokenSymbol
DUP9			_transfersEnabled
PUSH1 0x40		new MiniMeToken
(
...
MLOAD			new MiniMeToken
(
...
PUSH #[$0]		new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
PUSH [$0]		new MiniMeToken
(
...
DUP4			new MiniMeToken
(
...
CODECOPY			new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
DUP9			new MiniMeToken
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new MiniMeToken
(
...
AND			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
DUP8			new MiniMeToken
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new MiniMeToken
(
...
AND			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
DUP7			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
DUP6			new MiniMeToken
(
...
PUSH1 0xFF		new MiniMeToken
(
...
AND			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
DUP5			new MiniMeToken
(
...
ISZERO			new MiniMeToken
(
...
ISZERO			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
DUP4			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
SUB			new MiniMeToken
(
...
DUP4			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
DUP8			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MLOAD			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
SWAP2			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
MLOAD			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
DUP4			new MiniMeToken
(
...
DUP4			new MiniMeToken
(
...
DUP3			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
PUSH1 0x0		new MiniMeToken
(
...
PUSH1 0x4		new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
DUP5			new MiniMeToken
(
...
PUSH1 0x1F		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
DIV			new MiniMeToken
(
...
PUSH1 0x3		new MiniMeToken
(
...
MUL			new MiniMeToken
(
...
PUSH1 0xF		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
CALL			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
PUSH1 0x1F		new MiniMeToken
(
...
AND			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
ISZERO			new MiniMeToken
(
...
PUSH [tag6]		new MiniMeToken
(
...
JUMPI			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
DUP3			new MiniMeToken
(
...
SUB			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
MLOAD			new MiniMeToken
(
...
PUSH1 0x1		new MiniMeToken
(
...
DUP4			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
SUB			new MiniMeToken
(
...
PUSH2 0x100		new MiniMeToken
(
...
EXP			new MiniMeToken
(
...
SUB			new MiniMeToken
(
...
NOT			new MiniMeToken
(
...
AND			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
SWAP2			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
tag6
 
JUMPDEST		new MiniMeToken
(
...
POP			new MiniMeToken
(
...
DUP4			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
SUB			new MiniMeToken
(
...
DUP3			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
DUP6			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MLOAD			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
SWAP2			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
MLOAD			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
DUP4			new MiniMeToken
(
...
DUP4			new MiniMeToken
(
...
DUP3			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
PUSH1 0x0		new MiniMeToken
(
...
PUSH1 0x4		new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
DUP5			new MiniMeToken
(
...
PUSH1 0x1F		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
DIV			new MiniMeToken
(
...
PUSH1 0x3		new MiniMeToken
(
...
MUL			new MiniMeToken
(
...
PUSH1 0xF		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
CALL			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
PUSH1 0x1F		new MiniMeToken
(
...
AND			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
ISZERO			new MiniMeToken
(
...
PUSH [tag7]		new MiniMeToken
(
...
JUMPI			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
DUP3			new MiniMeToken
(
...
SUB			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
MLOAD			new MiniMeToken
(
...
PUSH1 0x1		new MiniMeToken
(
...
DUP4			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
SUB			new MiniMeToken
(
...
PUSH2 0x100		new MiniMeToken
(
...
EXP			new MiniMeToken
(
...
SUB			new MiniMeToken
(
...
NOT			new MiniMeToken
(
...
AND			new MiniMeToken
(
...
DUP2			new MiniMeToken
(
...
MSTORE			new MiniMeToken
(
...
PUSH1 0x20		new MiniMeToken
(
...
ADD			new MiniMeToken
(
...
SWAP2			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
tag7
 
JUMPDEST		new MiniMeToken
(
...
POP			new MiniMeToken
(
...
SWAP10			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
POP			new MiniMeToken
(
...
PUSH1 0x40		new MiniMeToken
(
...
MLOAD			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
SWAP2			new MiniMeToken
(
...
SUB			new MiniMeToken
(
...
SWAP1			new MiniMeToken
(
...
PUSH1 0x0		new MiniMeToken
(
...
CREATE			new MiniMeToken
(
...
DUP1			new MiniMeToken
(
...
ISZERO			new MiniMeToken
(
...
PUSH [ErrorTag]		new MiniMeToken
(
...
JUMPI			new MiniMeToken
(
...
SWAP1			MiniMeToken newToken = new MiniMeToken
(
...
POP			MiniMeToken newToken = new MiniMeToken
(
...
DUP1			newToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		newToken.changeController
AND			newToken.changeController
PUSH4 0x3CEBB823		newToken.changeController
CALLER			msg.sender
PUSH1 0x40		newToken.changeController
(
msg.sender
)
MLOAD			newToken.changeController
(
msg.sender
)
DUP3			newToken.changeController
(
msg.sender
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		newToken.changeController
(
msg.sender
)
MUL			newToken.changeController
(
msg.sender
)
DUP2			newToken.changeController
(
msg.sender
)
MSTORE			newToken.changeController
(
msg.sender
)
PUSH1 0x4		newToken.changeController
(
msg.sender
)
ADD			newToken.changeController
(
msg.sender
)
DUP1			newToken.changeController
(
msg.sender
)
DUP3			newToken.changeController
(
msg.sender
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		newToken.changeController
(
msg.sender
)
AND			newToken.changeController
(
msg.sender
)
DUP2			newToken.changeController
(
msg.sender
)
MSTORE			newToken.changeController
(
msg.sender
)
PUSH1 0x20		newToken.changeController
(
msg.sender
)
ADD			newToken.changeController
(
msg.sender
)
SWAP2			newToken.changeController
(
msg.sender
)
POP			newToken.changeController
(
msg.sender
)
POP			newToken.changeController
(
msg.sender
)
PUSH1 0x0		newToken.changeController
(
msg.sender
)
PUSH1 0x40		newToken.changeController
(
msg.sender
)
MLOAD			newToken.changeController
(
msg.sender
)
DUP1			newToken.changeController
(
msg.sender
)
DUP4			newToken.changeController
(
msg.sender
)
SUB			newToken.changeController
(
msg.sender
)
DUP2			newToken.changeController
(
msg.sender
)
PUSH1 0x0		newToken.changeController
(
msg.sender
)
DUP8			newToken.changeController
(
msg.sender
)
DUP1			newToken.changeController
(
msg.sender
)
EXTCODESIZE			newToken.changeController
(
msg.sender
)
ISZERO			newToken.changeController
(
msg.sender
)
PUSH [ErrorTag]		newToken.changeController
(
msg.sender
)
JUMPI			newToken.changeController
(
msg.sender
)
PUSH1 0x32		newToken.changeController
(
msg.sender
)
GAS			newToken.changeController
(
msg.sender
)
SUB			newToken.changeController
(
msg.sender
)
CALL			newToken.changeController
(
msg.sender
)
ISZERO			newToken.changeController
(
msg.sender
)
PUSH [ErrorTag]		newToken.changeController
(
msg.sender
)
JUMPI			newToken.changeController
(
msg.sender
)
POP			newToken.changeController
(
msg.sender
)
POP			newToken.changeController
(
msg.sender
)
POP			newToken.changeController
(
msg.sender
)
DUP1			newToken
SWAP2			return newToken
POP			return newToken
tag5
 
JUMPDEST		function createCloneToken
(
...
POP			function createCloneToken
(
...
SWAP7			function createCloneToken
(
...
SWAP6			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
JUMP	[out]		function createCloneToken
(
...
.data
0
 
.code
PUSH1 0x60		contract MiniMeToken is Controlled {
...
PUSH1 0x40		contract MiniMeToken is Controlled {
...
MSTORE			contract MiniMeToken is Controlled {
...
PUSH1 0x40		string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
PUSH1 0x7		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH32 0x4D4D545F302E3100000000000000000000000000000000000000000000000000		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
PUSH1 0x4		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SLOAD			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH2 0x100		string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
PUSH1 0x2		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
SHA3			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP3			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
LT			string public version = 'MMT_0.1'
PUSH [tag2]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
PUSH1 0xFF		string public version = 'MMT_0.1'
NOT			string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
OR			string public version = 'MMT_0.1'
DUP6			string public version = 'MMT_0.1'
SSTORE			string public version = 'MMT_0.1'
PUSH [tag1]		string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag2
 
JUMPDEST		string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
DUP6			string public version = 'MMT_0.1'
SSTORE			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH [tag1]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
tag3
 
JUMPDEST		string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
GT			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH [tag4]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
SSTORE			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH [tag3]		string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag4
 
JUMPDEST		string public version = 'MMT_0.1'
tag1
 
JUMPDEST		string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
PUSH [tag5]		string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
tag6
 
JUMPDEST		string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
GT			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH [tag7]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
SSTORE			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH [tag6]		string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag7
 
JUMPDEST		string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag5
 
JUMPDEST		string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
CALLVALUE			function MiniMeToken
(
...
PUSH [ErrorTag]		function MiniMeToken
(
...
JUMPI			function MiniMeToken
(
...
PUSH1 0x40		function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
PUSHSIZE		function MiniMeToken
(
...
CODESIZE			function MiniMeToken
(
...
SUB			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
PUSHSIZE		function MiniMeToken
(
...
DUP4			function MiniMeToken
(
...
CODECOPY			function MiniMeToken
(
...
DUP2			function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
PUSH1 0x40		function MiniMeToken
(
...
MSTORE			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
DUP3			function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
DUP3			function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
DUP1			function MiniMeToken
(
...
MLOAD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
PUSH1 0x20		function MiniMeToken
(
...
ADD			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
SWAP2			function MiniMeToken
(
...
SWAP1			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
tag8
 
JUMPDEST		function MiniMeToken
(
...
tag9
 
JUMPDEST		function Controlled
(
)
 { controller = msg.sender;}
CALLER			msg.sender
PUSH1 0x0		controller
PUSH1 0x0		controller
PUSH2 0x100		controller = msg.sender
EXP			controller = msg.sender
DUP2			controller = msg.sender
SLOAD			controller = msg.sender
DUP2			controller = msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller = msg.sender
MUL			controller = msg.sender
NOT			controller = msg.sender
AND			controller = msg.sender
SWAP1			controller = msg.sender
DUP4			controller = msg.sender
PUSH13 0x1000000000000000000000000		controller = msg.sender
SWAP1			controller = msg.sender
DUP2			controller = msg.sender
MUL			controller = msg.sender
DIV			controller = msg.sender
MUL			controller = msg.sender
OR			controller = msg.sender
SWAP1			controller = msg.sender
SSTORE			controller = msg.sender
POP			controller = msg.sender
tag10
 
JUMPDEST		function Controlled
(
)
 { controller = msg.sender;}
DUP7			_tokenFactory
PUSH1 0xB		tokenFactory
PUSH1 0x1		tokenFactory
PUSH2 0x100		tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
EXP			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DUP2			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
SLOAD			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DUP2			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
MUL			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
NOT			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
AND			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
SWAP1			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DUP4			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
PUSH13 0x1000000000000000000000000		tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
SWAP1			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DUP2			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
MUL			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DIV			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
MUL			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
OR			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
SWAP1			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
SSTORE			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
POP			tokenFactory = MiniMeTokenFactory
(
_tokenFactory
)
DUP4			_tokenName
PUSH1 0x1		name
SWAP1			name = _tokenName
DUP1			name = _tokenName
MLOAD			name = _tokenName
SWAP1			name = _tokenName
PUSH1 0x20		name = _tokenName
ADD			name = _tokenName
SWAP1			name = _tokenName
DUP3			name = _tokenName
DUP1			name = _tokenName
SLOAD			name = _tokenName
PUSH1 0x1		name = _tokenName
DUP2			name = _tokenName
PUSH1 0x1		name = _tokenName
AND			name = _tokenName
ISZERO			name = _tokenName
PUSH2 0x100		name = _tokenName
MUL			name = _tokenName
SUB			name = _tokenName
AND			name = _tokenName
PUSH1 0x2		name = _tokenName
SWAP1			name = _tokenName
DIV			name = _tokenName
SWAP1			name = _tokenName
PUSH1 0x0		name = _tokenName
MSTORE			name = _tokenName
PUSH1 0x20		name = _tokenName
PUSH1 0x0		name = _tokenName
SHA3			name = _tokenName
SWAP1			name = _tokenName
PUSH1 0x1F		name = _tokenName
ADD			name = _tokenName
PUSH1 0x20		name = _tokenName
SWAP1			name = _tokenName
DIV			name = _tokenName
DUP2			name = _tokenName
ADD			name = _tokenName
SWAP3			name = _tokenName
DUP3			name = _tokenName
PUSH1 0x1F		name = _tokenName
LT			name = _tokenName
PUSH [tag13]		name = _tokenName
JUMPI			name = _tokenName
DUP1			name = _tokenName
MLOAD			name = _tokenName
PUSH1 0xFF		name = _tokenName
NOT			name = _tokenName
AND			name = _tokenName
DUP4			name = _tokenName
DUP1			name = _tokenName
ADD			name = _tokenName
OR			name = _tokenName
DUP6			name = _tokenName
SSTORE			name = _tokenName
PUSH [tag12]		name = _tokenName
JUMP			name = _tokenName
tag13
 
JUMPDEST		name = _tokenName
DUP3			name = _tokenName
DUP1			name = _tokenName
ADD			name = _tokenName
PUSH1 0x1		name = _tokenName
ADD			name = _tokenName
DUP6			name = _tokenName
SSTORE			name = _tokenName
DUP3			name = _tokenName
ISZERO			name = _tokenName
PUSH [tag12]		name = _tokenName
JUMPI			name = _tokenName
SWAP2			name = _tokenName
DUP3			name = _tokenName
ADD			name = _tokenName
tag14
 
JUMPDEST		name = _tokenName
DUP3			name = _tokenName
DUP2			name = _tokenName
GT			name = _tokenName
ISZERO			name = _tokenName
PUSH [tag15]		name = _tokenName
JUMPI			name = _tokenName
DUP3			name = _tokenName
MLOAD			name = _tokenName
DUP3			name = _tokenName
SSTORE			name = _tokenName
SWAP2			name = _tokenName
PUSH1 0x20		name = _tokenName
ADD			name = _tokenName
SWAP2			name = _tokenName
SWAP1			name = _tokenName
PUSH1 0x1		name = _tokenName
ADD			name = _tokenName
SWAP1			name = _tokenName
PUSH [tag14]		name = _tokenName
JUMP			name = _tokenName
tag15
 
JUMPDEST		name = _tokenName
tag12
 
JUMPDEST		name = _tokenName
POP			name = _tokenName
SWAP1			name = _tokenName
POP			name = _tokenName
PUSH [tag16]		name = _tokenName
SWAP2			name = _tokenName
SWAP1			name = _tokenName
tag17
 
JUMPDEST		name = _tokenName
DUP1			name = _tokenName
DUP3			name = _tokenName
GT			name = _tokenName
ISZERO			name = _tokenName
PUSH [tag18]		name = _tokenName
JUMPI			name = _tokenName
PUSH1 0x0		name = _tokenName
DUP2			name = _tokenName
PUSH1 0x0		name = _tokenName
SWAP1			name = _tokenName
SSTORE			name = _tokenName
POP			name = _tokenName
PUSH1 0x1		name = _tokenName
ADD			name = _tokenName
PUSH [tag17]		name = _tokenName
JUMP			name = _tokenName
tag18
 
JUMPDEST		name = _tokenName
POP			name = _tokenName
SWAP1			name = _tokenName
JUMP			name = _tokenName
tag16
 
JUMPDEST		name = _tokenName
POP			name = _tokenName
POP			name = _tokenName
DUP3			_decimalUnits
PUSH1 0x2		decimals
PUSH1 0x0		decimals
PUSH2 0x100		decimals = _decimalUnits
EXP			decimals = _decimalUnits
DUP2			decimals = _decimalUnits
SLOAD			decimals = _decimalUnits
DUP2			decimals = _decimalUnits
PUSH1 0xFF		decimals = _decimalUnits
MUL			decimals = _decimalUnits
NOT			decimals = _decimalUnits
AND			decimals = _decimalUnits
SWAP1			decimals = _decimalUnits
DUP4			decimals = _decimalUnits
PUSH32 0x100000000000000000000000000000000000000000000000000000000000000		decimals = _decimalUnits
SWAP1			decimals = _decimalUnits
DUP2			decimals = _decimalUnits
MUL			decimals = _decimalUnits
DIV			decimals = _decimalUnits
MUL			decimals = _decimalUnits
OR			decimals = _decimalUnits
SWAP1			decimals = _decimalUnits
SSTORE			decimals = _decimalUnits
POP			decimals = _decimalUnits
DUP2			_tokenSymbol
PUSH1 0x3		symbol
SWAP1			symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
MLOAD			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
PUSH1 0x20		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
SLOAD			symbol = _tokenSymbol
PUSH1 0x1		symbol = _tokenSymbol
DUP2			symbol = _tokenSymbol
PUSH1 0x1		symbol = _tokenSymbol
AND			symbol = _tokenSymbol
ISZERO			symbol = _tokenSymbol
PUSH2 0x100		symbol = _tokenSymbol
MUL			symbol = _tokenSymbol
SUB			symbol = _tokenSymbol
AND			symbol = _tokenSymbol
PUSH1 0x2		symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
DIV			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
PUSH1 0x0		symbol = _tokenSymbol
MSTORE			symbol = _tokenSymbol
PUSH1 0x20		symbol = _tokenSymbol
PUSH1 0x0		symbol = _tokenSymbol
SHA3			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
PUSH1 0x1F		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
PUSH1 0x20		symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
DIV			symbol = _tokenSymbol
DUP2			symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
SWAP3			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
PUSH1 0x1F		symbol = _tokenSymbol
LT			symbol = _tokenSymbol
PUSH [tag20]		symbol = _tokenSymbol
JUMPI			symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
MLOAD			symbol = _tokenSymbol
PUSH1 0xFF		symbol = _tokenSymbol
NOT			symbol = _tokenSymbol
AND			symbol = _tokenSymbol
DUP4			symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
OR			symbol = _tokenSymbol
DUP6			symbol = _tokenSymbol
SSTORE			symbol = _tokenSymbol
PUSH [tag19]		symbol = _tokenSymbol
JUMP			symbol = _tokenSymbol
tag20
 
JUMPDEST		symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
PUSH1 0x1		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
DUP6			symbol = _tokenSymbol
SSTORE			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
ISZERO			symbol = _tokenSymbol
PUSH [tag19]		symbol = _tokenSymbol
JUMPI			symbol = _tokenSymbol
SWAP2			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
tag21
 
JUMPDEST		symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
DUP2			symbol = _tokenSymbol
GT			symbol = _tokenSymbol
ISZERO			symbol = _tokenSymbol
PUSH [tag22]		symbol = _tokenSymbol
JUMPI			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
MLOAD			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
SSTORE			symbol = _tokenSymbol
SWAP2			symbol = _tokenSymbol
PUSH1 0x20		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
SWAP2			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
PUSH1 0x1		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
PUSH [tag21]		symbol = _tokenSymbol
JUMP			symbol = _tokenSymbol
tag22
 
JUMPDEST		symbol = _tokenSymbol
tag19
 
JUMPDEST		symbol = _tokenSymbol
POP			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
POP			symbol = _tokenSymbol
PUSH [tag23]		symbol = _tokenSymbol
SWAP2			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
tag24
 
JUMPDEST		symbol = _tokenSymbol
DUP1			symbol = _tokenSymbol
DUP3			symbol = _tokenSymbol
GT			symbol = _tokenSymbol
ISZERO			symbol = _tokenSymbol
PUSH [tag25]		symbol = _tokenSymbol
JUMPI			symbol = _tokenSymbol
PUSH1 0x0		symbol = _tokenSymbol
DUP2			symbol = _tokenSymbol
PUSH1 0x0		symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
SSTORE			symbol = _tokenSymbol
POP			symbol = _tokenSymbol
PUSH1 0x1		symbol = _tokenSymbol
ADD			symbol = _tokenSymbol
PUSH [tag24]		symbol = _tokenSymbol
JUMP			symbol = _tokenSymbol
tag25
 
JUMPDEST		symbol = _tokenSymbol
POP			symbol = _tokenSymbol
SWAP1			symbol = _tokenSymbol
JUMP			symbol = _tokenSymbol
tag23
 
JUMPDEST		symbol = _tokenSymbol
POP			symbol = _tokenSymbol
POP			symbol = _tokenSymbol
DUP6			_parentToken
PUSH1 0x5		parentToken
PUSH1 0x0		parentToken
PUSH2 0x100		parentToken = MiniMeToken
(
_parentToken
)
EXP			parentToken = MiniMeToken
(
_parentToken
)
DUP2			parentToken = MiniMeToken
(
_parentToken
)
SLOAD			parentToken = MiniMeToken
(
_parentToken
)
DUP2			parentToken = MiniMeToken
(
_parentToken
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken = MiniMeToken
(
_parentToken
)
MUL			parentToken = MiniMeToken
(
_parentToken
)
NOT			parentToken = MiniMeToken
(
_parentToken
)
AND			parentToken = MiniMeToken
(
_parentToken
)
SWAP1			parentToken = MiniMeToken
(
_parentToken
)
DUP4			parentToken = MiniMeToken
(
_parentToken
)
PUSH13 0x1000000000000000000000000		parentToken = MiniMeToken
(
_parentToken
)
SWAP1			parentToken = MiniMeToken
(
_parentToken
)
DUP2			parentToken = MiniMeToken
(
_parentToken
)
MUL			parentToken = MiniMeToken
(
_parentToken
)
DIV			parentToken = MiniMeToken
(
_parentToken
)
MUL			parentToken = MiniMeToken
(
_parentToken
)
OR			parentToken = MiniMeToken
(
_parentToken
)
SWAP1			parentToken = MiniMeToken
(
_parentToken
)
SSTORE			parentToken = MiniMeToken
(
_parentToken
)
POP			parentToken = MiniMeToken
(
_parentToken
)
DUP5			_parentSnapShotBlock
PUSH1 0x6		parentSnapShotBlock
DUP2			parentSnapShotBlock = _parentSnapShotBlock
SWAP1			parentSnapShotBlock = _parentSnapShotBlock
SSTORE			parentSnapShotBlock = _parentSnapShotBlock
POP			parentSnapShotBlock = _parentSnapShotBlock
DUP1			_transfersEnabled
PUSH1 0xB		transfersEnabled
PUSH1 0x0		transfersEnabled
PUSH2 0x100		transfersEnabled = _transfersEnabled
EXP			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
SLOAD			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
PUSH1 0xFF		transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
NOT			transfersEnabled = _transfersEnabled
AND			transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
DUP4			transfersEnabled = _transfersEnabled
PUSH32 0x100000000000000000000000000000000000000000000000000000000000000		transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
DIV			transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
OR			transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
SSTORE			transfersEnabled = _transfersEnabled
POP			transfersEnabled = _transfersEnabled
NUMBER			block.number
PUSH1 0x7		creationBlock
DUP2			creationBlock = block.number
SWAP1			creationBlock = block.number
SSTORE			creationBlock = block.number
POP			creationBlock = block.number
tag11
 
JUMPDEST		function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
POP			function MiniMeToken
(
...
tag26
 
JUMPDEST		contract MiniMeToken is Controlled {
...
PUSH #[$0]		contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH [$0]		contract MiniMeToken is Controlled {
...
PUSH1 0x0		contract MiniMeToken is Controlled {
...
CODECOPY			contract MiniMeToken is Controlled {
...
PUSH1 0x0		contract MiniMeToken is Controlled {
...
RETURN			contract MiniMeToken is Controlled {
...
.data
0
 
.code
PUSH1 0x60		contract MiniMeToken is Controlled {
...
PUSH1 0x40		contract MiniMeToken is Controlled {
...
MSTORE			contract MiniMeToken is Controlled {
...
CALLDATASIZE			contract MiniMeToken is Controlled {
...
ISZERO			contract MiniMeToken is Controlled {
...
PUSH [tag1]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
PUSH1 0x0		contract MiniMeToken is Controlled {
...
CALLDATALOAD			contract MiniMeToken is Controlled {
...
PUSH29 0x100000000000000000000000000000000000000000000000000000000		contract MiniMeToken is Controlled {
...
SWAP1			contract MiniMeToken is Controlled {
...
DIV			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x6FDDE03		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag2]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x95EA7B3		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag3]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x17634514		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag4]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x18160DDD		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag5]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x23B872DD		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag6]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x313CE567		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag7]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x3CEBB823		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag8]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x4EE2CD7E		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag9]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x54FD4D50		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag10]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x6638C087		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag11]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x70A08231		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag12]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x80A54001		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag13]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x827F32C0		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag14]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x95D89B41		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag15]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0x981B24D0		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag16]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xA9059CBB		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag17]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xBEF97C87		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag18]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xC5BCC4F1		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag19]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xCAE9CA51		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag20]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xD3CE77FE		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag21]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xDD62ED3E		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag22]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xE77772FE		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag23]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xF41E60C5		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag24]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
DUP1			contract MiniMeToken is Controlled {
...
PUSH4 0xF77C4791		contract MiniMeToken is Controlled {
...
EQ			contract MiniMeToken is Controlled {
...
PUSH [tag25]		contract MiniMeToken is Controlled {
...
JUMPI			contract MiniMeToken is Controlled {
...
tag1
 
JUMPDEST		contract MiniMeToken is Controlled {
...
PUSH [tag26]		contract MiniMeToken is Controlled {
...
tag27
 
JUMPDEST		function 
(
)
payable {
...
PUSH [tag29]		isContract
(
controller
)
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH [tag30]		isContract
JUMP	[in]		isContract
(
controller
)
tag29
 
JUMPDEST		isContract
(
controller
)
ISZERO			if 
(
isContract
(
controller
)
)
 {
...
PUSH [tag31]		if 
(
isContract
(
controller
)
)
 {
...
JUMPI			if 
(
isContract
(
controller
)
)
 {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.proxyPayment
AND			TokenController
(
controller
)
.proxyPayment
PUSH4 0xF48C3054		TokenController
(
controller
)
.proxyPayment
CALLVALUE			msg.value
CALLER			msg.sender
PUSH1 0x0		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x40		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MLOAD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x20		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ADD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MSTORE			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x40		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MLOAD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP4			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MUL			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP2			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MSTORE			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x4		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ADD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP1			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP3			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
AND			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP2			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MSTORE			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x20		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ADD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
SWAP2			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x20		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x40		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MLOAD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP1			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP4			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
SUB			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP2			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP6			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP9			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP1			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
EXTCODESIZE			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ISZERO			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH [ErrorTag]		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
JUMPI			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH2 0x235A		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
GAS			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
SUB			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
CALL			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ISZERO			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH [ErrorTag]		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
JUMPI			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x40		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MLOAD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
DUP1			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
MLOAD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
SWAP1			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
PUSH1 0x20		TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ADD			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
POP			TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ISZERO			! TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
ISZERO			if 
(
! TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
)
...
PUSH [tag32]		if 
(
! TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
)
...
JUMPI			if 
(
! TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
)
...
PUSH [ErrorTag]		throw
JUMP			throw
tag32
 
JUMPDEST		if 
(
! TokenController
(
controller
)
.proxyPayment.value
(
msg.value
)
(
msg.sender
)
)
...
PUSH [tag33]		if 
(
isContract
(
controller
)
)
 {
...
JUMP			if 
(
isContract
(
controller
)
)
 {
...
tag31
 
JUMPDEST		if 
(
isContract
(
controller
)
)
 {
...
PUSH [ErrorTag]		throw
JUMP			throw
tag33
 
JUMPDEST		if 
(
isContract
(
controller
)
)
 {
...
tag28
 
JUMPDEST		function 
(
)
payable {
...
JUMP	[out]		function 
(
)
payable {
...
tag26
 
JUMPDEST		contract MiniMeToken is Controlled {
...
STOP			contract MiniMeToken is Controlled {
...
tag2
 
JUMPDEST		string public name
CALLVALUE			string public name
PUSH [ErrorTag]		string public name
JUMPI			string public name
PUSH [tag34]		string public name
PUSH [tag35]		string public name
JUMP			string public name
tag34
 
JUMPDEST		string public name
PUSH1 0x40		string public name
MLOAD			string public name
DUP1			string public name
DUP1			string public name
PUSH1 0x20		string public name
ADD			string public name
DUP3			string public name
DUP2			string public name
SUB			string public name
DUP3			string public name
MSTORE			string public name
DUP4			string public name
DUP2			string public name
DUP2			string public name
MLOAD			string public name
DUP2			string public name
MSTORE			string public name
PUSH1 0x20		string public name
ADD			string public name
SWAP2			string public name
POP			string public name
DUP1			string public name
MLOAD			string public name
SWAP1			string public name
PUSH1 0x20		string public name
ADD			string public name
SWAP1			string public name
DUP1			string public name
DUP4			string public name
DUP4			string public name
DUP3			string public name
SWAP1			string public name
PUSH1 0x0		string public name
PUSH1 0x4		string public name
PUSH1 0x20		string public name
DUP5			string public name
PUSH1 0x1F		string public name
ADD			string public name
DIV			string public name
PUSH1 0x3		string public name
MUL			string public name
PUSH1 0xF		string public name
ADD			string public name
CALL			string public name
POP			string public name
SWAP1			string public name
POP			string public name
SWAP1			string public name
DUP2			string public name
ADD			string public name
SWAP1			string public name
PUSH1 0x1F		string public name
AND			string public name
DUP1			string public name
ISZERO			string public name
PUSH [tag36]		string public name
JUMPI			string public name
DUP1			string public name
DUP3			string public name
SUB			string public name
DUP1			string public name
MLOAD			string public name
PUSH1 0x1		string public name
DUP4			string public name
PUSH1 0x20		string public name
SUB			string public name
PUSH2 0x100		string public name
EXP			string public name
SUB			string public name
NOT			string public name
AND			string public name
DUP2			string public name
MSTORE			string public name
PUSH1 0x20		string public name
ADD			string public name
SWAP2			string public name
POP			string public name
tag36
 
JUMPDEST		string public name
POP			string public name
SWAP3			string public name
POP			string public name
POP			string public name
POP			string public name
PUSH1 0x40		string public name
MLOAD			string public name
DUP1			string public name
SWAP2			string public name
SUB			string public name
SWAP1			string public name
RETURN			string public name
tag3
 
JUMPDEST		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLVALUE			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [ErrorTag]		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMPI			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [tag37]		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x4		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLDATALOAD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLDATALOAD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [tag38]		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag37
 
JUMPDEST		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x40		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MLOAD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP3			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ISZERO			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ISZERO			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MSTORE			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x40		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MLOAD			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SUB			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
RETURN			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag4
 
JUMPDEST		uint public creationBlock
CALLVALUE			uint public creationBlock
PUSH [ErrorTag]		uint public creationBlock
JUMPI			uint public creationBlock
PUSH [tag39]		uint public creationBlock
PUSH [tag40]		uint public creationBlock
JUMP			uint public creationBlock
tag39
 
JUMPDEST		uint public creationBlock
PUSH1 0x40		uint public creationBlock
MLOAD			uint public creationBlock
DUP1			uint public creationBlock
DUP3			uint public creationBlock
DUP2			uint public creationBlock
MSTORE			uint public creationBlock
PUSH1 0x20		uint public creationBlock
ADD			uint public creationBlock
SWAP2			uint public creationBlock
POP			uint public creationBlock
POP			uint public creationBlock
PUSH1 0x40		uint public creationBlock
MLOAD			uint public creationBlock
DUP1			uint public creationBlock
SWAP2			uint public creationBlock
SUB			uint public creationBlock
SWAP1			uint public creationBlock
RETURN			uint public creationBlock
tag5
 
JUMPDEST		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
CALLVALUE			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH [ErrorTag]		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
JUMPI			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH [tag41]		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH [tag42]		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
JUMP			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
tag41
 
JUMPDEST		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH1 0x40		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
MLOAD			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
DUP1			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
DUP3			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
DUP2			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
MSTORE			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH1 0x20		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
ADD			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
SWAP2			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
POP			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
POP			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH1 0x40		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
MLOAD			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
DUP1			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
SWAP2			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
SUB			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
SWAP1			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
RETURN			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
tag6
 
JUMPDEST		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
CALLVALUE			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH [ErrorTag]		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
JUMPI			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH [tag43]		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x4		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
CALLDATALOAD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x20		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ADD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
CALLDATALOAD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x20		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ADD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
CALLDATALOAD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x20		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ADD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH [tag44]		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
JUMP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
tag43
 
JUMPDEST		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x40		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
MLOAD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP3			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ISZERO			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ISZERO			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
MSTORE			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x20		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
ADD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x40		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
MLOAD			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
DUP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP2			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SUB			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP1			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
RETURN			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
tag7
 
JUMPDEST		uint8 public decimals
CALLVALUE			uint8 public decimals
PUSH [ErrorTag]		uint8 public decimals
JUMPI			uint8 public decimals
PUSH [tag45]		uint8 public decimals
PUSH [tag46]		uint8 public decimals
JUMP			uint8 public decimals
tag45
 
JUMPDEST		uint8 public decimals
PUSH1 0x40		uint8 public decimals
MLOAD			uint8 public decimals
DUP1			uint8 public decimals
DUP3			uint8 public decimals
PUSH1 0xFF		uint8 public decimals
AND			uint8 public decimals
DUP2			uint8 public decimals
MSTORE			uint8 public decimals
PUSH1 0x20		uint8 public decimals
ADD			uint8 public decimals
SWAP2			uint8 public decimals
POP			uint8 public decimals
POP			uint8 public decimals
PUSH1 0x40		uint8 public decimals
MLOAD			uint8 public decimals
DUP1			uint8 public decimals
SWAP2			uint8 public decimals
SUB			uint8 public decimals
SWAP1			uint8 public decimals
RETURN			uint8 public decimals
tag8
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
CALLVALUE			function changeController
(
address _newController
)
 onlyController {
...
PUSH [ErrorTag]		function changeController
(
address _newController
)
 onlyController {
...
JUMPI			function changeController
(
address _newController
)
 onlyController {
...
PUSH [tag47]		function changeController
(
address _newController
)
 onlyController {
...
PUSH1 0x4		function changeController
(
address _newController
)
 onlyController {
...
DUP1			function changeController
(
address _newController
)
 onlyController {
...
DUP1			function changeController
(
address _newController
)
 onlyController {
...
CALLDATALOAD			function changeController
(
address _newController
)
 onlyController {
...
SWAP1			function changeController
(
address _newController
)
 onlyController {
...
PUSH1 0x20		function changeController
(
address _newController
)
 onlyController {
...
ADD			function changeController
(
address _newController
)
 onlyController {
...
SWAP1			function changeController
(
address _newController
)
 onlyController {
...
SWAP2			function changeController
(
address _newController
)
 onlyController {
...
SWAP1			function changeController
(
address _newController
)
 onlyController {
...
POP			function changeController
(
address _newController
)
 onlyController {
...
POP			function changeController
(
address _newController
)
 onlyController {
...
PUSH [tag48]		function changeController
(
address _newController
)
 onlyController {
...
JUMP			function changeController
(
address _newController
)
 onlyController {
...
tag47
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
STOP			function changeController
(
address _newController
)
 onlyController {
...
tag9
 
JUMPDEST		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
CALLVALUE			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH [ErrorTag]		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
JUMPI			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH [tag49]		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x4		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
CALLDATALOAD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x20		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
ADD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
CALLDATALOAD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x20		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
ADD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH [tag50]		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
JUMP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
tag49
 
JUMPDEST		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x40		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
MLOAD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP3			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
MSTORE			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x20		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
ADD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x40		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
MLOAD			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
DUP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SUB			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP1			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
RETURN			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
tag10
 
JUMPDEST		string public version = 'MMT_0.1'
CALLVALUE			string public version = 'MMT_0.1'
PUSH [ErrorTag]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
PUSH [tag51]		string public version = 'MMT_0.1'
PUSH [tag52]		string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag51
 
JUMPDEST		string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
PUSH1 0x4		string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
DUP5			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
PUSH1 0x3		string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
PUSH1 0xF		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
CALL			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH [tag53]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
PUSH2 0x100		string public version = 'MMT_0.1'
EXP			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
NOT			string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
tag53
 
JUMPDEST		string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
SWAP3			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
RETURN			string public version = 'MMT_0.1'
tag11
 
JUMPDEST		function createCloneToken
(
...
CALLVALUE			function createCloneToken
(
...
PUSH [ErrorTag]		function createCloneToken
(
...
JUMPI			function createCloneToken
(
...
PUSH [tag54]		function createCloneToken
(
...
PUSH1 0x4		function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
PUSH1 0x1F		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
DIV			function createCloneToken
(
...
MUL			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP4			function createCloneToken
(
...
SWAP3			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
DUP5			function createCloneToken
(
...
CALLDATACOPY			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
PUSH1 0x1F		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
DIV			function createCloneToken
(
...
MUL			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
ADD			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP4			function createCloneToken
(
...
SWAP3			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP4			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
DUP5			function createCloneToken
(
...
CALLDATACOPY			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
CALLDATALOAD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
PUSH [tag55]		function createCloneToken
(
...
JUMP			function createCloneToken
(
...
tag54
 
JUMPDEST		function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
DUP3			function createCloneToken
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		function createCloneToken
(
...
AND			function createCloneToken
(
...
DUP2			function createCloneToken
(
...
MSTORE			function createCloneToken
(
...
PUSH1 0x20		function createCloneToken
(
...
ADD			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
PUSH1 0x40		function createCloneToken
(
...
MLOAD			function createCloneToken
(
...
DUP1			function createCloneToken
(
...
SWAP2			function createCloneToken
(
...
SUB			function createCloneToken
(
...
SWAP1			function createCloneToken
(
...
RETURN			function createCloneToken
(
...
tag12
 
JUMPDEST		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
CALLVALUE			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH [ErrorTag]		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
JUMPI			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH [tag56]		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x4		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
CALLDATALOAD			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x20		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
ADD			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP2			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
POP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
POP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH [tag57]		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
JUMP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
tag56
 
JUMPDEST		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x40		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
MLOAD			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP3			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP2			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
MSTORE			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x20		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
ADD			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP2			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
POP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
POP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x40		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
MLOAD			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
DUP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP2			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SUB			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
RETURN			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
tag13
 
JUMPDEST		MiniMeToken public parentToken
CALLVALUE			MiniMeToken public parentToken
PUSH [ErrorTag]		MiniMeToken public parentToken
JUMPI			MiniMeToken public parentToken
PUSH [tag58]		MiniMeToken public parentToken
PUSH [tag59]		MiniMeToken public parentToken
JUMP			MiniMeToken public parentToken
tag58
 
JUMPDEST		MiniMeToken public parentToken
PUSH1 0x40		MiniMeToken public parentToken
MLOAD			MiniMeToken public parentToken
DUP1			MiniMeToken public parentToken
DUP3			MiniMeToken public parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		MiniMeToken public parentToken
AND			MiniMeToken public parentToken
DUP2			MiniMeToken public parentToken
MSTORE			MiniMeToken public parentToken
PUSH1 0x20		MiniMeToken public parentToken
ADD			MiniMeToken public parentToken
SWAP2			MiniMeToken public parentToken
POP			MiniMeToken public parentToken
POP			MiniMeToken public parentToken
PUSH1 0x40		MiniMeToken public parentToken
MLOAD			MiniMeToken public parentToken
DUP1			MiniMeToken public parentToken
SWAP2			MiniMeToken public parentToken
SUB			MiniMeToken public parentToken
SWAP1			MiniMeToken public parentToken
RETURN			MiniMeToken public parentToken
tag14
 
JUMPDEST		function generateTokens
(
address _owner
 uint _amount
...
CALLVALUE			function generateTokens
(
address _owner
 uint _amount
...
PUSH [ErrorTag]		function generateTokens
(
address _owner
 uint _amount
...
JUMPI			function generateTokens
(
address _owner
 uint _amount
...
PUSH [tag60]		function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x4		function generateTokens
(
address _owner
 uint _amount
...
DUP1			function generateTokens
(
address _owner
 uint _amount
...
DUP1			function generateTokens
(
address _owner
 uint _amount
...
CALLDATALOAD			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function generateTokens
(
address _owner
 uint _amount
...
ADD			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
SWAP2			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
DUP1			function generateTokens
(
address _owner
 uint _amount
...
CALLDATALOAD			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function generateTokens
(
address _owner
 uint _amount
...
ADD			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
SWAP2			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
PUSH [tag61]		function generateTokens
(
address _owner
 uint _amount
...
JUMP			function generateTokens
(
address _owner
 uint _amount
...
tag60
 
JUMPDEST		function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x40		function generateTokens
(
address _owner
 uint _amount
...
MLOAD			function generateTokens
(
address _owner
 uint _amount
...
DUP1			function generateTokens
(
address _owner
 uint _amount
...
DUP3			function generateTokens
(
address _owner
 uint _amount
...
ISZERO			function generateTokens
(
address _owner
 uint _amount
...
ISZERO			function generateTokens
(
address _owner
 uint _amount
...
DUP2			function generateTokens
(
address _owner
 uint _amount
...
MSTORE			function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function generateTokens
(
address _owner
 uint _amount
...
ADD			function generateTokens
(
address _owner
 uint _amount
...
SWAP2			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x40		function generateTokens
(
address _owner
 uint _amount
...
MLOAD			function generateTokens
(
address _owner
 uint _amount
...
DUP1			function generateTokens
(
address _owner
 uint _amount
...
SWAP2			function generateTokens
(
address _owner
 uint _amount
...
SUB			function generateTokens
(
address _owner
 uint _amount
...
SWAP1			function generateTokens
(
address _owner
 uint _amount
...
RETURN			function generateTokens
(
address _owner
 uint _amount
...
tag15
 
JUMPDEST		string public symbol
CALLVALUE			string public symbol
PUSH [ErrorTag]		string public symbol
JUMPI			string public symbol
PUSH [tag62]		string public symbol
PUSH [tag63]		string public symbol
JUMP			string public symbol
tag62
 
JUMPDEST		string public symbol
PUSH1 0x40		string public symbol
MLOAD			string public symbol
DUP1			string public symbol
DUP1			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
DUP3			string public symbol
DUP2			string public symbol
SUB			string public symbol
DUP3			string public symbol
MSTORE			string public symbol
DUP4			string public symbol
DUP2			string public symbol
DUP2			string public symbol
MLOAD			string public symbol
DUP2			string public symbol
MSTORE			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
SWAP2			string public symbol
POP			string public symbol
DUP1			string public symbol
MLOAD			string public symbol
SWAP1			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
SWAP1			string public symbol
DUP1			string public symbol
DUP4			string public symbol
DUP4			string public symbol
DUP3			string public symbol
SWAP1			string public symbol
PUSH1 0x0		string public symbol
PUSH1 0x4		string public symbol
PUSH1 0x20		string public symbol
DUP5			string public symbol
PUSH1 0x1F		string public symbol
ADD			string public symbol
DIV			string public symbol
PUSH1 0x3		string public symbol
MUL			string public symbol
PUSH1 0xF		string public symbol
ADD			string public symbol
CALL			string public symbol
POP			string public symbol
SWAP1			string public symbol
POP			string public symbol
SWAP1			string public symbol
DUP2			string public symbol
ADD			string public symbol
SWAP1			string public symbol
PUSH1 0x1F		string public symbol
AND			string public symbol
DUP1			string public symbol
ISZERO			string public symbol
PUSH [tag64]		string public symbol
JUMPI			string public symbol
DUP1			string public symbol
DUP3			string public symbol
SUB			string public symbol
DUP1			string public symbol
MLOAD			string public symbol
PUSH1 0x1		string public symbol
DUP4			string public symbol
PUSH1 0x20		string public symbol
SUB			string public symbol
PUSH2 0x100		string public symbol
EXP			string public symbol
SUB			string public symbol
NOT			string public symbol
AND			string public symbol
DUP2			string public symbol
MSTORE			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
SWAP2			string public symbol
POP			string public symbol
tag64
 
JUMPDEST		string public symbol
POP			string public symbol
SWAP3			string public symbol
POP			string public symbol
POP			string public symbol
POP			string public symbol
PUSH1 0x40		string public symbol
MLOAD			string public symbol
DUP1			string public symbol
SWAP2			string public symbol
SUB			string public symbol
SWAP1			string public symbol
RETURN			string public symbol
tag16
 
JUMPDEST		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
CALLVALUE			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH [ErrorTag]		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
JUMPI			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH [tag65]		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x4		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
CALLDATALOAD			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x20		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
ADD			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP2			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
POP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
POP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH [tag66]		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
JUMP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
tag65
 
JUMPDEST		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x40		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
MLOAD			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP3			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP2			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
MSTORE			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x20		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
ADD			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP2			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
POP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
POP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x40		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
MLOAD			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
DUP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP2			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SUB			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
RETURN			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
tag17
 
JUMPDEST		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLVALUE			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [ErrorTag]		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMPI			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [tag67]		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x4		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLDATALOAD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
CALLDATALOAD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH [tag68]		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag67
 
JUMPDEST		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x40		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MLOAD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP3			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ISZERO			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ISZERO			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MSTORE			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x20		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
ADD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x40		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
MLOAD			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
DUP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SUB			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP1			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
RETURN			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag18
 
JUMPDEST		bool public transfersEnabled
CALLVALUE			bool public transfersEnabled
PUSH [ErrorTag]		bool public transfersEnabled
JUMPI			bool public transfersEnabled
PUSH [tag69]		bool public transfersEnabled
PUSH [tag70]		bool public transfersEnabled
JUMP			bool public transfersEnabled
tag69
 
JUMPDEST		bool public transfersEnabled
PUSH1 0x40		bool public transfersEnabled
MLOAD			bool public transfersEnabled
DUP1			bool public transfersEnabled
DUP3			bool public transfersEnabled
ISZERO			bool public transfersEnabled
ISZERO			bool public transfersEnabled
DUP2			bool public transfersEnabled
MSTORE			bool public transfersEnabled
PUSH1 0x20		bool public transfersEnabled
ADD			bool public transfersEnabled
SWAP2			bool public transfersEnabled
POP			bool public transfersEnabled
POP			bool public transfersEnabled
PUSH1 0x40		bool public transfersEnabled
MLOAD			bool public transfersEnabled
DUP1			bool public transfersEnabled
SWAP2			bool public transfersEnabled
SUB			bool public transfersEnabled
SWAP1			bool public transfersEnabled
RETURN			bool public transfersEnabled
tag19
 
JUMPDEST		uint public parentSnapShotBlock
CALLVALUE			uint public parentSnapShotBlock
PUSH [ErrorTag]		uint public parentSnapShotBlock
JUMPI			uint public parentSnapShotBlock
PUSH [tag71]		uint public parentSnapShotBlock
PUSH [tag72]		uint public parentSnapShotBlock
JUMP			uint public parentSnapShotBlock
tag71
 
JUMPDEST		uint public parentSnapShotBlock
PUSH1 0x40		uint public parentSnapShotBlock
MLOAD			uint public parentSnapShotBlock
DUP1			uint public parentSnapShotBlock
DUP3			uint public parentSnapShotBlock
DUP2			uint public parentSnapShotBlock
MSTORE			uint public parentSnapShotBlock
PUSH1 0x20		uint public parentSnapShotBlock
ADD			uint public parentSnapShotBlock
SWAP2			uint public parentSnapShotBlock
POP			uint public parentSnapShotBlock
POP			uint public parentSnapShotBlock
PUSH1 0x40		uint public parentSnapShotBlock
MLOAD			uint public parentSnapShotBlock
DUP1			uint public parentSnapShotBlock
SWAP2			uint public parentSnapShotBlock
SUB			uint public parentSnapShotBlock
SWAP1			uint public parentSnapShotBlock
RETURN			uint public parentSnapShotBlock
tag20
 
JUMPDEST		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLVALUE			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH [ErrorTag]		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
JUMPI			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH [tag73]		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x4		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLDATALOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLDATALOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLDATALOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLDATALOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x1F		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DIV			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MUL			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x40		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MLOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x40		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MSTORE			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP4			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MSTORE			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP4			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP4			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP5			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
CALLDATACOPY			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH [tag74]		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
JUMP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
tag73
 
JUMPDEST		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x40		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MLOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ISZERO			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ISZERO			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MSTORE			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x20		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
ADD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x40		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
MLOAD			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
DUP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP2			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SUB			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP1			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
RETURN			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
tag21
 
JUMPDEST		function destroyTokens
(
address _owner
 uint _amount
...
CALLVALUE			function destroyTokens
(
address _owner
 uint _amount
...
PUSH [ErrorTag]		function destroyTokens
(
address _owner
 uint _amount
...
JUMPI			function destroyTokens
(
address _owner
 uint _amount
...
PUSH [tag75]		function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x4		function destroyTokens
(
address _owner
 uint _amount
...
DUP1			function destroyTokens
(
address _owner
 uint _amount
...
DUP1			function destroyTokens
(
address _owner
 uint _amount
...
CALLDATALOAD			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function destroyTokens
(
address _owner
 uint _amount
...
ADD			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
SWAP2			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
DUP1			function destroyTokens
(
address _owner
 uint _amount
...
CALLDATALOAD			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function destroyTokens
(
address _owner
 uint _amount
...
ADD			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
SWAP2			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
PUSH [tag76]		function destroyTokens
(
address _owner
 uint _amount
...
JUMP			function destroyTokens
(
address _owner
 uint _amount
...
tag75
 
JUMPDEST		function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x40		function destroyTokens
(
address _owner
 uint _amount
...
MLOAD			function destroyTokens
(
address _owner
 uint _amount
...
DUP1			function destroyTokens
(
address _owner
 uint _amount
...
DUP3			function destroyTokens
(
address _owner
 uint _amount
...
ISZERO			function destroyTokens
(
address _owner
 uint _amount
...
ISZERO			function destroyTokens
(
address _owner
 uint _amount
...
DUP2			function destroyTokens
(
address _owner
 uint _amount
...
MSTORE			function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x20		function destroyTokens
(
address _owner
 uint _amount
...
ADD			function destroyTokens
(
address _owner
 uint _amount
...
SWAP2			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x40		function destroyTokens
(
address _owner
 uint _amount
...
MLOAD			function destroyTokens
(
address _owner
 uint _amount
...
DUP1			function destroyTokens
(
address _owner
 uint _amount
...
SWAP2			function destroyTokens
(
address _owner
 uint _amount
...
SUB			function destroyTokens
(
address _owner
 uint _amount
...
SWAP1			function destroyTokens
(
address _owner
 uint _amount
...
RETURN			function destroyTokens
(
address _owner
 uint _amount
...
tag22
 
JUMPDEST		function allowance
(
address _owner
 address _spender
...
CALLVALUE			function allowance
(
address _owner
 address _spender
...
PUSH [ErrorTag]		function allowance
(
address _owner
 address _spender
...
JUMPI			function allowance
(
address _owner
 address _spender
...
PUSH [tag77]		function allowance
(
address _owner
 address _spender
...
PUSH1 0x4		function allowance
(
address _owner
 address _spender
...
DUP1			function allowance
(
address _owner
 address _spender
...
DUP1			function allowance
(
address _owner
 address _spender
...
CALLDATALOAD			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
PUSH1 0x20		function allowance
(
address _owner
 address _spender
...
ADD			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
SWAP2			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
DUP1			function allowance
(
address _owner
 address _spender
...
CALLDATALOAD			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
PUSH1 0x20		function allowance
(
address _owner
 address _spender
...
ADD			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
SWAP2			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
PUSH [tag78]		function allowance
(
address _owner
 address _spender
...
JUMP			function allowance
(
address _owner
 address _spender
...
tag77
 
JUMPDEST		function allowance
(
address _owner
 address _spender
...
PUSH1 0x40		function allowance
(
address _owner
 address _spender
...
MLOAD			function allowance
(
address _owner
 address _spender
...
DUP1			function allowance
(
address _owner
 address _spender
...
DUP3			function allowance
(
address _owner
 address _spender
...
DUP2			function allowance
(
address _owner
 address _spender
...
MSTORE			function allowance
(
address _owner
 address _spender
...
PUSH1 0x20		function allowance
(
address _owner
 address _spender
...
ADD			function allowance
(
address _owner
 address _spender
...
SWAP2			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
PUSH1 0x40		function allowance
(
address _owner
 address _spender
...
MLOAD			function allowance
(
address _owner
 address _spender
...
DUP1			function allowance
(
address _owner
 address _spender
...
SWAP2			function allowance
(
address _owner
 address _spender
...
SUB			function allowance
(
address _owner
 address _spender
...
SWAP1			function allowance
(
address _owner
 address _spender
...
RETURN			function allowance
(
address _owner
 address _spender
...
tag23
 
JUMPDEST		MiniMeTokenFactory public tokenFactory
CALLVALUE			MiniMeTokenFactory public tokenFactory
PUSH [ErrorTag]		MiniMeTokenFactory public tokenFactory
JUMPI			MiniMeTokenFactory public tokenFactory
PUSH [tag79]		MiniMeTokenFactory public tokenFactory
PUSH [tag80]		MiniMeTokenFactory public tokenFactory
JUMP			MiniMeTokenFactory public tokenFactory
tag79
 
JUMPDEST		MiniMeTokenFactory public tokenFactory
PUSH1 0x40		MiniMeTokenFactory public tokenFactory
MLOAD			MiniMeTokenFactory public tokenFactory
DUP1			MiniMeTokenFactory public tokenFactory
DUP3			MiniMeTokenFactory public tokenFactory
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		MiniMeTokenFactory public tokenFactory
AND			MiniMeTokenFactory public tokenFactory
DUP2			MiniMeTokenFactory public tokenFactory
MSTORE			MiniMeTokenFactory public tokenFactory
PUSH1 0x20		MiniMeTokenFactory public tokenFactory
ADD			MiniMeTokenFactory public tokenFactory
SWAP2			MiniMeTokenFactory public tokenFactory
POP			MiniMeTokenFactory public tokenFactory
POP			MiniMeTokenFactory public tokenFactory
PUSH1 0x40		MiniMeTokenFactory public tokenFactory
MLOAD			MiniMeTokenFactory public tokenFactory
DUP1			MiniMeTokenFactory public tokenFactory
SWAP2			MiniMeTokenFactory public tokenFactory
SUB			MiniMeTokenFactory public tokenFactory
SWAP1			MiniMeTokenFactory public tokenFactory
RETURN			MiniMeTokenFactory public tokenFactory
tag24
 
JUMPDEST		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
CALLVALUE			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH [ErrorTag]		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
JUMPI			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH [tag81]		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH1 0x4		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
DUP1			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
DUP1			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
CALLDATALOAD			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
SWAP1			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH1 0x20		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
ADD			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
SWAP1			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
SWAP2			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
SWAP1			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
POP			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
POP			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH [tag82]		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
JUMP			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
tag81
 
JUMPDEST		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
STOP			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
tag25
 
JUMPDEST		address public controller
CALLVALUE			address public controller
PUSH [ErrorTag]		address public controller
JUMPI			address public controller
PUSH [tag83]		address public controller
PUSH [tag84]		address public controller
JUMP			address public controller
tag83
 
JUMPDEST		address public controller
PUSH1 0x40		address public controller
MLOAD			address public controller
DUP1			address public controller
DUP3			address public controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public controller
AND			address public controller
DUP2			address public controller
MSTORE			address public controller
PUSH1 0x20		address public controller
ADD			address public controller
SWAP2			address public controller
POP			address public controller
POP			address public controller
PUSH1 0x40		address public controller
MLOAD			address public controller
DUP1			address public controller
SWAP2			address public controller
SUB			address public controller
SWAP1			address public controller
RETURN			address public controller
tag30
 
JUMPDEST		function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
PUSH1 0x0		bool
PUSH1 0x0		uint size
PUSH1 0x0		0
DUP4			_addr
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_addr == 0
AND			_addr == 0
EQ			_addr == 0
ISZERO			if 
(
_addr == 0
)
 return false
PUSH [tag86]		if 
(
_addr == 0
)
 return false
JUMPI			if 
(
_addr == 0
)
 return false
PUSH1 0x0		false
SWAP2			return false
POP			return false
PUSH [tag85]		return false
JUMP			return false
tag86
 
JUMPDEST		if 
(
_addr == 0
)
 return false
DUP3			_addr
EXTCODESIZE			extcodesize
SWAP1			size 
= extcodesize
(
_addr
)
POP			size 
= extcodesize
(
_addr
)
PUSH1 0x0		0
DUP2			size
GT			size>0
SWAP2			return size>0
POP			return size>0
tag85
 
JUMPDEST		function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
POP			function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
SWAP2			function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
SWAP1			function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
POP			function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
JUMP	[out]		function isContract
(
address _addr
)
 constant internal returns
(
bool
)
 {
...
tag35
 
JUMPDEST		string public name
PUSH1 0x1		string public name
DUP1			string public name
SLOAD			string public name
PUSH1 0x1		string public name
DUP2			string public name
PUSH1 0x1		string public name
AND			string public name
ISZERO			string public name
PUSH2 0x100		string public name
MUL			string public name
SUB			string public name
AND			string public name
PUSH1 0x2		string public name
SWAP1			string public name
DIV			string public name
DUP1			string public name
PUSH1 0x1F		string public name
ADD			string public name
PUSH1 0x20		string public name
DUP1			string public name
SWAP2			string public name
DIV			string public name
MUL			string public name
PUSH1 0x20		string public name
ADD			string public name
PUSH1 0x40		string public name
MLOAD			string public name
SWAP1			string public name
DUP2			string public name
ADD			string public name
PUSH1 0x40		string public name
MSTORE			string public name
DUP1			string public name
SWAP3			string public name
SWAP2			string public name
SWAP1			string public name
DUP2			string public name
DUP2			string public name
MSTORE			string public name
PUSH1 0x20		string public name
ADD			string public name
DUP3			string public name
DUP1			string public name
SLOAD			string public name
PUSH1 0x1		string public name
DUP2			string public name
PUSH1 0x1		string public name
AND			string public name
ISZERO			string public name
PUSH2 0x100		string public name
MUL			string public name
SUB			string public name
AND			string public name
PUSH1 0x2		string public name
SWAP1			string public name
DIV			string public name
DUP1			string public name
ISZERO			string public name
PUSH [tag87]		string public name
JUMPI			string public name
DUP1			string public name
PUSH1 0x1F		string public name
LT			string public name
PUSH [tag88]		string public name
JUMPI			string public name
PUSH2 0x100		string public name
DUP1			string public name
DUP4			string public name
SLOAD			string public name
DIV			string public name
MUL			string public name
DUP4			string public name
MSTORE			string public name
SWAP2			string public name
PUSH1 0x20		string public name
ADD			string public name
SWAP2			string public name
PUSH [tag87]		string public name
JUMP			string public name
tag88
 
JUMPDEST		string public name
DUP3			string public name
ADD			string public name
SWAP2			string public name
SWAP1			string public name
PUSH1 0x0		string public name
MSTORE			string public name
PUSH1 0x20		string public name
PUSH1 0x0		string public name
SHA3			string public name
SWAP1			string public name
tag89
 
JUMPDEST		string public name
DUP2			string public name
SLOAD			string public name
DUP2			string public name
MSTORE			string public name
SWAP1			string public name
PUSH1 0x1		string public name
ADD			string public name
SWAP1			string public name
PUSH1 0x20		string public name
ADD			string public name
DUP1			string public name
DUP4			string public name
GT			string public name
PUSH [tag89]		string public name
JUMPI			string public name
DUP3			string public name
SWAP1			string public name
SUB			string public name
PUSH1 0x1F		string public name
AND			string public name
DUP3			string public name
ADD			string public name
SWAP2			string public name
tag87
 
JUMPDEST		string public name
POP			string public name
POP			string public name
POP			string public name
POP			string public name
POP			string public name
DUP2			string public name
JUMP	[out]		string public name
tag38
 
JUMPDEST		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x0		bool success
PUSH1 0xB		transfersEnabled
PUSH1 0x0		transfersEnabled
SWAP1			transfersEnabled
SLOAD			transfersEnabled
SWAP1			transfersEnabled
PUSH2 0x100		transfersEnabled
EXP			transfersEnabled
SWAP1			transfersEnabled
DIV			transfersEnabled
PUSH1 0xFF		transfersEnabled
AND			transfersEnabled
ISZERO			!transfersEnabled
ISZERO			if 
(
!transfersEnabled
)
 throw
PUSH [tag91]		if 
(
!transfersEnabled
)
 throw
JUMPI			if 
(
!transfersEnabled
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag91
 
JUMPDEST		if 
(
!transfersEnabled
)
 throw
PUSH1 0x0		0
DUP3			_amount
EQ			_amount!=0
ISZERO			_amount!=0
DUP1			
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
ISZERO			
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
PUSH [tag92]		
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
JUMPI			
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
POP			
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
PUSH1 0x0		0
PUSH1 0x9		allowed
PUSH1 0x0		allowed[msg.sender]
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender]
AND			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
SWAP1			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender]
SHA3			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender][_spender]
DUP6			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender][_spender]
AND			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
SWAP1			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
PUSH1 0x0		allowed[msg.sender][_spender]
SHA3			allowed[msg.sender][_spender]
SLOAD			allowed[msg.sender][_spender]
EQ			allowed[msg.sender][_spender] !=0
ISZERO			allowed[msg.sender][_spender] !=0
tag92
 
JUMPDEST		
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
ISZERO			if 
(
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
)
 throw
PUSH [tag93]		if 
(
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
)
 throw
JUMPI			if 
(
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag93
 
JUMPDEST		if 
(
(
_amount!=0
)
 && 
(
allowed[msg.sender][_spender] !=0
)
)
 throw
PUSH [tag94]		isContract
(
controller
)
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH [tag30]		isContract
JUMP	[in]		isContract
(
controller
)
tag94
 
JUMPDEST		isContract
(
controller
)
ISZERO			if 
(
isContract
(
controller
)
)
 {
...
PUSH [tag95]		if 
(
isContract
(
controller
)
)
 {
...
JUMPI			if 
(
isContract
(
controller
)
)
 {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onApprove
AND			TokenController
(
controller
)
.onApprove
PUSH4 0xDA682AEB		TokenController
(
controller
)
.onApprove
CALLER			msg.sender
DUP6			_spender
DUP6			_amount
PUSH1 0x0		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MLOAD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MSTORE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MLOAD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP5			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MUL			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP2			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MSTORE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x4		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP1			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP5			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
AND			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP2			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MSTORE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP4			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
AND			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP2			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MSTORE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP3			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP2			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MSTORE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
SWAP4			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MLOAD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP1			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP4			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
SUB			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP2			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x0		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP8			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP1			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
EXTCODESIZE			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ISZERO			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH [ErrorTag]		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
JUMPI			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x32		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
GAS			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
SUB			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
CALL			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ISZERO			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH [ErrorTag]		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
JUMPI			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MLOAD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
DUP1			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
MLOAD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
SWAP1			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ADD			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
POP			TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ISZERO			!TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
ISZERO			if 
(
!TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
)
...
PUSH [tag96]		if 
(
!TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
)
...
JUMPI			if 
(
!TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
)
...
PUSH [ErrorTag]		throw
JUMP			throw
tag96
 
JUMPDEST		if 
(
!TokenController
(
controller
)
.onApprove
(
msg.sender
 _spender
 _amount
)
)
...
tag95
 
JUMPDEST		if 
(
isContract
(
controller
)
)
 {
...
DUP2			_amount
PUSH1 0x9		allowed
PUSH1 0x0		allowed[msg.sender]
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender]
AND			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
SWAP1			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender]
SHA3			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender][_spender]
DUP6			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender][_spender]
AND			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
SWAP1			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
PUSH1 0x0		allowed[msg.sender][_spender]
SHA3			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender] = _amount
SWAP1			allowed[msg.sender][_spender] = _amount
SSTORE			allowed[msg.sender][_spender] = _amount
POP			allowed[msg.sender][_spender] = _amount
DUP3			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval
(
msg.sender
 _spender
 _amount
)
AND			Approval
(
msg.sender
 _spender
 _amount
)
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval
(
msg.sender
 _spender
 _amount
)
AND			Approval
(
msg.sender
 _spender
 _amount
)
PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925		Approval
(
msg.sender
 _spender
 _amount
)
DUP5			_amount
PUSH1 0x40		Approval
(
msg.sender
 _spender
 _amount
)
MLOAD			Approval
(
msg.sender
 _spender
 _amount
)
DUP1			Approval
(
msg.sender
 _spender
 _amount
)
DUP3			Approval
(
msg.sender
 _spender
 _amount
)
DUP2			Approval
(
msg.sender
 _spender
 _amount
)
MSTORE			Approval
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		Approval
(
msg.sender
 _spender
 _amount
)
ADD			Approval
(
msg.sender
 _spender
 _amount
)
SWAP2			Approval
(
msg.sender
 _spender
 _amount
)
POP			Approval
(
msg.sender
 _spender
 _amount
)
POP			Approval
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		Approval
(
msg.sender
 _spender
 _amount
)
MLOAD			Approval
(
msg.sender
 _spender
 _amount
)
DUP1			Approval
(
msg.sender
 _spender
 _amount
)
SWAP2			Approval
(
msg.sender
 _spender
 _amount
)
SUB			Approval
(
msg.sender
 _spender
 _amount
)
SWAP1			Approval
(
msg.sender
 _spender
 _amount
)
LOG3			Approval
(
msg.sender
 _spender
 _amount
)
PUSH1 0x1		true
SWAP1			return true
POP			return true
tag90
 
JUMPDEST		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP3			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMP	[out]		function approve
(
address _spender
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag40
 
JUMPDEST		uint public creationBlock
PUSH1 0x7		uint public creationBlock
SLOAD			uint public creationBlock
DUP2			uint public creationBlock
JUMP	[out]		uint public creationBlock
tag42
 
JUMPDEST		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
PUSH1 0x0		uint
PUSH [tag98]		totalSupplyAt
(
block.number
)
NUMBER			block.number
PUSH [tag66]		totalSupplyAt
JUMP	[in]		totalSupplyAt
(
block.number
)
tag98
 
JUMPDEST		totalSupplyAt
(
block.number
)
SWAP1			return totalSupplyAt
(
block.number
)
POP			return totalSupplyAt
(
block.number
)
tag97
 
JUMPDEST		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
SWAP1			function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
JUMP	[out]		function totalSupply
(
)
 constant returns 
(
uint
)
 {
...
tag44
 
JUMPDEST		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
PUSH1 0x0		bool success
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 {
...
PUSH [tag100]		if 
(
msg.sender != controller
)
 {
...
JUMPI			if 
(
msg.sender != controller
)
 {
...
PUSH1 0xB		transfersEnabled
PUSH1 0x0		transfersEnabled
SWAP1			transfersEnabled
SLOAD			transfersEnabled
SWAP1			transfersEnabled
PUSH2 0x100		transfersEnabled
EXP			transfersEnabled
SWAP1			transfersEnabled
DIV			transfersEnabled
PUSH1 0xFF		transfersEnabled
AND			transfersEnabled
ISZERO			!transfersEnabled
ISZERO			if 
(
!transfersEnabled
)
 throw
PUSH [tag101]		if 
(
!transfersEnabled
)
 throw
JUMPI			if 
(
!transfersEnabled
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag101
 
JUMPDEST		if 
(
!transfersEnabled
)
 throw
DUP2			_amount
PUSH1 0x9		allowed
PUSH1 0x0		allowed[_from]
DUP7			_from
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
AND			allowed[_from]
DUP2			allowed[_from]
MSTORE			allowed[_from]
PUSH1 0x20		allowed[_from]
ADD			allowed[_from]
SWAP1			allowed[_from]
DUP2			allowed[_from]
MSTORE			allowed[_from]
PUSH1 0x20		allowed[_from]
ADD			allowed[_from]
PUSH1 0x0		allowed[_from]
SHA3			allowed[_from]
PUSH1 0x0		allowed[_from][msg.sender]
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
AND			allowed[_from][msg.sender]
DUP2			allowed[_from][msg.sender]
MSTORE			allowed[_from][msg.sender]
PUSH1 0x20		allowed[_from][msg.sender]
ADD			allowed[_from][msg.sender]
SWAP1			allowed[_from][msg.sender]
DUP2			allowed[_from][msg.sender]
MSTORE			allowed[_from][msg.sender]
PUSH1 0x20		allowed[_from][msg.sender]
ADD			allowed[_from][msg.sender]
PUSH1 0x0		allowed[_from][msg.sender]
SHA3			allowed[_from][msg.sender]
SLOAD			allowed[_from][msg.sender]
LT			allowed[_from][msg.sender] < _amount
ISZERO			if 
(
allowed[_from][msg.sender] < _amount
)
 return false
PUSH [tag102]		if 
(
allowed[_from][msg.sender] < _amount
)
 return false
JUMPI			if 
(
allowed[_from][msg.sender] < _amount
)
 return false
PUSH1 0x0		false
SWAP1			return false
POP			return false
PUSH [tag99]		return false
JUMP			return false
tag102
 
JUMPDEST		if 
(
allowed[_from][msg.sender] < _amount
)
 return false
DUP2			_amount
PUSH1 0x9		allowed
PUSH1 0x0		allowed[_from]
DUP7			_from
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
AND			allowed[_from]
DUP2			allowed[_from]
MSTORE			allowed[_from]
PUSH1 0x20		allowed[_from]
ADD			allowed[_from]
SWAP1			allowed[_from]
DUP2			allowed[_from]
MSTORE			allowed[_from]
PUSH1 0x20		allowed[_from]
ADD			allowed[_from]
PUSH1 0x0		allowed[_from]
SHA3			allowed[_from]
PUSH1 0x0		allowed[_from][msg.sender]
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
AND			allowed[_from][msg.sender]
DUP2			allowed[_from][msg.sender]
MSTORE			allowed[_from][msg.sender]
PUSH1 0x20		allowed[_from][msg.sender]
ADD			allowed[_from][msg.sender]
SWAP1			allowed[_from][msg.sender]
DUP2			allowed[_from][msg.sender]
MSTORE			allowed[_from][msg.sender]
PUSH1 0x20		allowed[_from][msg.sender]
ADD			allowed[_from][msg.sender]
PUSH1 0x0		allowed[_from][msg.sender]
SHA3			allowed[_from][msg.sender]
PUSH1 0x0		allowed[_from][msg.sender]
DUP3			allowed[_from][msg.sender] -= _amount
DUP3			allowed[_from][msg.sender] -= _amount
SLOAD			allowed[_from][msg.sender] -= _amount
SUB			allowed[_from][msg.sender] -= _amount
SWAP3			allowed[_from][msg.sender] -= _amount
POP			allowed[_from][msg.sender] -= _amount
POP			allowed[_from][msg.sender] -= _amount
DUP2			allowed[_from][msg.sender] -= _amount
SWAP1			allowed[_from][msg.sender] -= _amount
SSTORE			allowed[_from][msg.sender] -= _amount
POP			allowed[_from][msg.sender] -= _amount
tag100
 
JUMPDEST		if 
(
msg.sender != controller
)
 {
...
PUSH [tag103]		doTransfer
(
_from
 _to
 _amount
)
DUP5			_from
DUP5			_to
DUP5			_amount
PUSH [tag104]		doTransfer
JUMP	[in]		doTransfer
(
_from
 _to
 _amount
)
tag103
 
JUMPDEST		doTransfer
(
_from
 _to
 _amount
)
SWAP1			return doTransfer
(
_from
 _to
 _amount
)
POP			return doTransfer
(
_from
 _to
 _amount
)
tag99
 
JUMPDEST		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP4			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
SWAP3			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
POP			function transferFrom
(
address _from
 address _to
 uint256 _amount
...
JUMP	[out]		function transferFrom
(
address _from
 address _to
 uint256 _amount
...
tag46
 
JUMPDEST		uint8 public decimals
PUSH1 0x2		uint8 public decimals
PUSH1 0x0		uint8 public decimals
SWAP1			uint8 public decimals
SLOAD			uint8 public decimals
SWAP1			uint8 public decimals
PUSH2 0x100		uint8 public decimals
EXP			uint8 public decimals
SWAP1			uint8 public decimals
DIV			uint8 public decimals
PUSH1 0xFF		uint8 public decimals
AND			uint8 public decimals
DUP2			uint8 public decimals
JUMP	[out]		uint8 public decimals
tag48
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 throw
PUSH [tag106]		if 
(
msg.sender != controller
)
 throw
JUMPI			if 
(
msg.sender != controller
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag106
 
JUMPDEST		if 
(
msg.sender != controller
)
 throw
DUP1			_newController
PUSH1 0x0		controller
PUSH1 0x0		controller
PUSH2 0x100		controller = _newController
EXP			controller = _newController
DUP2			controller = _newController
SLOAD			controller = _newController
DUP2			controller = _newController
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller = _newController
MUL			controller = _newController
NOT			controller = _newController
AND			controller = _newController
SWAP1			controller = _newController
DUP4			controller = _newController
PUSH13 0x1000000000000000000000000		controller = _newController
SWAP1			controller = _newController
DUP2			controller = _newController
MUL			controller = _newController
DIV			controller = _newController
MUL			controller = _newController
OR			controller = _newController
SWAP1			controller = _newController
SSTORE			controller = _newController
POP			controller = _newController
tag107
 
JUMPDEST		_
tag105
 
JUMPDEST		function changeController
(
address _newController
)
 onlyController {
...
POP			function changeController
(
address _newController
)
 onlyController {
...
JUMP	[out]		function changeController
(
address _newController
)
 onlyController {
...
tag50
 
JUMPDEST		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
PUSH1 0x0		uint
PUSH1 0x7		creationBlock
SLOAD			creationBlock
DUP3			_blockNumber
LT			_blockNumber < creationBlock
ISZERO			if 
(
_blockNumber < creationBlock
)
 {
...
PUSH [tag109]		if 
(
_blockNumber < creationBlock
)
 {
...
JUMPI			if 
(
_blockNumber < creationBlock
)
 {
...
PUSH1 0x0		0
SWAP1			return 0
POP			return 0
PUSH [tag108]		return 0
JUMP			return 0
PUSH [tag110]		if 
(
_blockNumber < creationBlock
)
 {
...
JUMP			if 
(
_blockNumber < creationBlock
)
 {
...
tag109
 
JUMPDEST		if 
(
_blockNumber < creationBlock
)
 {
...
PUSH1 0x0		0
PUSH1 0x8		balances
PUSH1 0x0		balances[_owner]
DUP6			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
AND			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
SWAP1			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
PUSH1 0x0		balances[_owner]
SHA3			balances[_owner]
DUP1			balances[_owner].length
SLOAD			balances[_owner].length
SWAP1			balances[_owner].length
POP			balances[_owner].length
EQ			balances[_owner].length == 0
DUP1			
(
balances[_owner].length == 0
)
...
PUSH [tag111]		
(
balances[_owner].length == 0
)
...
JUMPI			
(
balances[_owner].length == 0
)
...
POP			
(
balances[_owner].length == 0
)
...
DUP2			_blockNumber
PUSH1 0x8		balances
PUSH1 0x0		balances[_owner]
DUP6			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
AND			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
SWAP1			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
PUSH1 0x0		balances[_owner]
SHA3			balances[_owner]
PUSH1 0x0		0
DUP2			balances[_owner][0]
SLOAD			balances[_owner][0]
DUP2			balances[_owner][0]
LT			balances[_owner][0]
ISZERO			balances[_owner][0]
PUSH [ErrorTag]		balances[_owner][0]
JUMPI			balances[_owner][0]
SWAP1			balances[_owner][0]
PUSH1 0x0		balances[_owner][0]
MSTORE			balances[_owner][0]
PUSH1 0x20		balances[_owner][0]
PUSH1 0x0		balances[_owner][0]
SHA3			balances[_owner][0]
SWAP1			balances[_owner][0]
ADD			balances[_owner][0]
PUSH1 0x0		balances[_owner][0]
tag112
 
JUMPDEST		balances[_owner][0]
POP			balances[_owner][0]
PUSH1 0x0		balances[_owner][0].fromBlock
ADD			balances[_owner][0].fromBlock
PUSH1 0x0		balances[_owner][0].fromBlock
SWAP1			balances[_owner][0].fromBlock
SLOAD			balances[_owner][0].fromBlock
SWAP1			balances[_owner][0].fromBlock
PUSH2 0x100		balances[_owner][0].fromBlock
EXP			balances[_owner][0].fromBlock
SWAP1			balances[_owner][0].fromBlock
DIV			balances[_owner][0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner][0].fromBlock
AND			balances[_owner][0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner][0].fromBlock > _blockNumber
AND			balances[_owner][0].fromBlock > _blockNumber
GT			balances[_owner][0].fromBlock > _blockNumber
tag111
 
JUMPDEST		
(
balances[_owner].length == 0
)
...
ISZERO			if 
(
(
balances[_owner].length == 0
)
...
PUSH [tag113]		if 
(
(
balances[_owner].length == 0
)
...
JUMPI			if 
(
(
balances[_owner].length == 0
)
...
PUSH1 0x0		0
PUSH1 0x5		parentToken
PUSH1 0x0		parentToken
SWAP1			parentToken
SLOAD			parentToken
SWAP1			parentToken
PUSH2 0x100		parentToken
EXP			parentToken
SWAP1			parentToken
DIV			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken
AND			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address
(
parentToken
)
 != 0
AND			address
(
parentToken
)
 != 0
EQ			address
(
parentToken
)
 != 0
ISZERO			address
(
parentToken
)
 != 0
ISZERO			if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH [tag114]		if 
(
address
(
parentToken
)
 != 0
)
 {
...
JUMPI			if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH1 0x5		parentToken
PUSH1 0x0		parentToken
SWAP1			parentToken
SLOAD			parentToken
SWAP1			parentToken
PUSH2 0x100		parentToken
EXP			parentToken
SWAP1			parentToken
DIV			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken
AND			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken.balanceOfAt
AND			parentToken.balanceOfAt
PUSH4 0x4EE2CD7E		parentToken.balanceOfAt
DUP5			_owner
PUSH1 0x6		parentSnapShotBlock
SLOAD			parentSnapShotBlock
PUSH1 0x0		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x40		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MLOAD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x20		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ADD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MSTORE			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x40		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MLOAD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP4			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MUL			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP2			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MSTORE			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x4		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ADD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP1			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP4			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
AND			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP2			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MSTORE			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x20		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ADD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP3			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP2			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MSTORE			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x20		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ADD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
SWAP3			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x20		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x40		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MLOAD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP1			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP4			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
SUB			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP2			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x0		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP8			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP1			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
EXTCODESIZE			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ISZERO			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH [ErrorTag]		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
JUMPI			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x32		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
GAS			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
SUB			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
CALL			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ISZERO			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH [ErrorTag]		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
JUMPI			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x40		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MLOAD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
DUP1			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
MLOAD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
SWAP1			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH1 0x20		parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
ADD			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
SWAP1			return parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
POP			return parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH [tag108]		return parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
JUMP			return parentToken.balanceOfAt
(
_owner
 parentSnapShotBlock
)
PUSH [tag115]		if 
(
address
(
parentToken
)
 != 0
)
 {
...
JUMP			if 
(
address
(
parentToken
)
 != 0
)
 {
...
tag114
 
JUMPDEST		if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH1 0x0		0
SWAP1			return 0
POP			return 0
PUSH [tag108]		return 0
JUMP			return 0
tag115
 
JUMPDEST		if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH [tag116]		if 
(
(
balances[_owner].length == 0
)
...
JUMP			if 
(
(
balances[_owner].length == 0
)
...
tag113
 
JUMPDEST		if 
(
(
balances[_owner].length == 0
)
...
PUSH [tag117]		getValueAt
(
balances[_owner]
 _blockNumber
)
PUSH1 0x8		balances
PUSH1 0x0		balances[_owner]
DUP6			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
AND			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
SWAP1			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
PUSH1 0x0		balances[_owner]
SHA3			balances[_owner]
DUP4			_blockNumber
PUSH [tag118]		getValueAt
JUMP	[in]		getValueAt
(
balances[_owner]
 _blockNumber
)
tag117
 
JUMPDEST		getValueAt
(
balances[_owner]
 _blockNumber
)
SWAP1			return getValueAt
(
balances[_owner]
 _blockNumber
)
POP			return getValueAt
(
balances[_owner]
 _blockNumber
)
PUSH [tag108]		return getValueAt
(
balances[_owner]
 _blockNumber
)
JUMP			return getValueAt
(
balances[_owner]
 _blockNumber
)
tag116
 
JUMPDEST		if 
(
(
balances[_owner].length == 0
)
...
tag110
 
JUMPDEST		if 
(
_blockNumber < creationBlock
)
 {
...
tag108
 
JUMPDEST		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP3			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
SWAP2			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
POP			function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
JUMP	[out]		function balanceOfAt
(
address _owner
 uint _blockNumber
)
 constant
...
tag52
 
JUMPDEST		string public version = 'MMT_0.1'
PUSH1 0x4		string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SLOAD			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH2 0x100		string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
PUSH1 0x2		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MLOAD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
PUSH1 0x40		string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SWAP3			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
SLOAD			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH2 0x100		string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
PUSH1 0x2		string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
ISZERO			string public version = 'MMT_0.1'
PUSH [tag119]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
LT			string public version = 'MMT_0.1'
PUSH [tag120]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
PUSH2 0x100		string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
SLOAD			string public version = 'MMT_0.1'
DIV			string public version = 'MMT_0.1'
MUL			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
PUSH [tag119]		string public version = 'MMT_0.1'
JUMP			string public version = 'MMT_0.1'
tag120
 
JUMPDEST		string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
PUSH1 0x0		string public version = 'MMT_0.1'
SHA3			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
tag121
 
JUMPDEST		string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
SLOAD			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
MSTORE			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x1		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
PUSH1 0x20		string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
DUP1			string public version = 'MMT_0.1'
DUP4			string public version = 'MMT_0.1'
GT			string public version = 'MMT_0.1'
PUSH [tag121]		string public version = 'MMT_0.1'
JUMPI			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
SWAP1			string public version = 'MMT_0.1'
SUB			string public version = 'MMT_0.1'
PUSH1 0x1F		string public version = 'MMT_0.1'
AND			string public version = 'MMT_0.1'
DUP3			string public version = 'MMT_0.1'
ADD			string public version = 'MMT_0.1'
SWAP2			string public version = 'MMT_0.1'
tag119
 
JUMPDEST		string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
POP			string public version = 'MMT_0.1'
DUP2			string public version = 'MMT_0.1'
JUMP	[out]		string public version = 'MMT_0.1'
tag55
 
JUMPDEST		function createCloneToken
(
...
PUSH1 0x0		address
PUSH1 0x0		MiniMeToken cloneToken
NUMBER			block.number
DUP5			_snapshotBlock
GT			_snapshotBlock > block.number
ISZERO			if 
(
_snapshotBlock > block.number
)
 _snapshotBlock = block.number
PUSH [tag123]		if 
(
_snapshotBlock > block.number
)
 _snapshotBlock = block.number
JUMPI			if 
(
_snapshotBlock > block.number
)
 _snapshotBlock = block.number
NUMBER			block.number
SWAP4			_snapshotBlock = block.number
POP			_snapshotBlock = block.number
tag123
 
JUMPDEST		if 
(
_snapshotBlock > block.number
)
 _snapshotBlock = block.number
PUSH1 0xB		tokenFactory
PUSH1 0x1		tokenFactory
SWAP1			tokenFactory
SLOAD			tokenFactory
SWAP1			tokenFactory
PUSH2 0x100		tokenFactory
EXP			tokenFactory
SWAP1			tokenFactory
DIV			tokenFactory
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenFactory
AND			tokenFactory
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenFactory.createCloneToken
AND			tokenFactory.createCloneToken
PUSH4 0x5B7B72C1		tokenFactory.createCloneToken
ADDRESS			this
DUP7			_snapshotBlock
DUP11			_cloneTokenName
DUP11			_cloneDecimalUnits
DUP11			_cloneTokenSymbol
DUP10			_transfersEnabled
PUSH1 0x0		tokenFactory.createCloneToken
(
...
PUSH1 0x40		tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x40		tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
DUP8			tokenFactory.createCloneToken
(
...
PUSH29 0x100000000000000000000000000000000000000000000000000000000		tokenFactory.createCloneToken
(
...
MUL			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x4		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP8			tokenFactory.createCloneToken
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP7			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP6			tokenFactory.createCloneToken
(
...
PUSH1 0xFF		tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP5			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
DUP8			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP2			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP3			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x0		tokenFactory.createCloneToken
(
...
PUSH1 0x4		tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
DUP5			tokenFactory.createCloneToken
(
...
PUSH1 0x1F		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DIV			tokenFactory.createCloneToken
(
...
PUSH1 0x3		tokenFactory.createCloneToken
(
...
MUL			tokenFactory.createCloneToken
(
...
PUSH1 0xF		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
CALL			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x1F		tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
PUSH [tag124]		tokenFactory.createCloneToken
(
...
JUMPI			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP3			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
PUSH1 0x1		tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
PUSH2 0x100		tokenFactory.createCloneToken
(
...
EXP			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
NOT			tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP2			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
tag124
 
JUMPDEST		tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
DUP3			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
DUP6			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP2			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
DUP3			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x0		tokenFactory.createCloneToken
(
...
PUSH1 0x4		tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
DUP5			tokenFactory.createCloneToken
(
...
PUSH1 0x1F		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
DIV			tokenFactory.createCloneToken
(
...
PUSH1 0x3		tokenFactory.createCloneToken
(
...
MUL			tokenFactory.createCloneToken
(
...
PUSH1 0xF		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
CALL			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x1F		tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
PUSH [tag125]		tokenFactory.createCloneToken
(
...
JUMPI			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP3			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
PUSH1 0x1		tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
PUSH2 0x100		tokenFactory.createCloneToken
(
...
EXP			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
NOT			tokenFactory.createCloneToken
(
...
AND			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
MSTORE			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
SWAP2			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
tag125
 
JUMPDEST		tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP9			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
PUSH1 0x40		tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
DUP4			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
DUP2			tokenFactory.createCloneToken
(
...
PUSH1 0x0		tokenFactory.createCloneToken
(
...
DUP8			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
EXTCODESIZE			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
PUSH [ErrorTag]		tokenFactory.createCloneToken
(
...
JUMPI			tokenFactory.createCloneToken
(
...
PUSH1 0x32		tokenFactory.createCloneToken
(
...
GAS			tokenFactory.createCloneToken
(
...
SUB			tokenFactory.createCloneToken
(
...
CALL			tokenFactory.createCloneToken
(
...
ISZERO			tokenFactory.createCloneToken
(
...
PUSH [ErrorTag]		tokenFactory.createCloneToken
(
...
JUMPI			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
PUSH1 0x40		tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
DUP1			tokenFactory.createCloneToken
(
...
MLOAD			tokenFactory.createCloneToken
(
...
SWAP1			tokenFactory.createCloneToken
(
...
PUSH1 0x20		tokenFactory.createCloneToken
(
...
ADD			tokenFactory.createCloneToken
(
...
POP			tokenFactory.createCloneToken
(
...
SWAP1			MiniMeToken cloneToken = tokenFactory.createCloneToken
(
...
POP			MiniMeToken cloneToken = tokenFactory.createCloneToken
(
...
DUP1			cloneToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		cloneToken.changeController
AND			cloneToken.changeController
PUSH4 0x3CEBB823		cloneToken.changeController
CALLER			msg.sender
PUSH1 0x40		cloneToken.changeController
(
msg.sender
)
MLOAD			cloneToken.changeController
(
msg.sender
)
DUP3			cloneToken.changeController
(
msg.sender
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		cloneToken.changeController
(
msg.sender
)
MUL			cloneToken.changeController
(
msg.sender
)
DUP2			cloneToken.changeController
(
msg.sender
)
MSTORE			cloneToken.changeController
(
msg.sender
)
PUSH1 0x4		cloneToken.changeController
(
msg.sender
)
ADD			cloneToken.changeController
(
msg.sender
)
DUP1			cloneToken.changeController
(
msg.sender
)
DUP3			cloneToken.changeController
(
msg.sender
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		cloneToken.changeController
(
msg.sender
)
AND			cloneToken.changeController
(
msg.sender
)
DUP2			cloneToken.changeController
(
msg.sender
)
MSTORE			cloneToken.changeController
(
msg.sender
)
PUSH1 0x20		cloneToken.changeController
(
msg.sender
)
ADD			cloneToken.changeController
(
msg.sender
)
SWAP2			cloneToken.changeController
(
msg.sender
)
POP			cloneToken.changeController
(
msg.sender
)
POP			cloneToken.changeController
(
msg.sender
)
PUSH1 0x0		cloneToken.changeController
(
msg.sender
)
PUSH1 0x40		cloneToken.changeController
(
msg.sender
)
MLOAD			cloneToken.changeController
(
msg.sender
)
DUP1			cloneToken.changeController
(
msg.sender
)
DUP4			cloneToken.changeController
(
msg.sender
)
SUB			cloneToken.changeController
(
msg.sender
)
DUP2			cloneToken.changeController
(
msg.sender
)
PUSH1 0x0		cloneToken.changeController
(
msg.sender
)
DUP8			cloneToken.changeController
(
msg.sender
)
DUP1			cloneToken.changeController
(
msg.sender
)
EXTCODESIZE			cloneToken.changeController
(
msg.sender
)
ISZERO			cloneToken.changeController
(
msg.sender
)
PUSH [ErrorTag]		cloneToken.changeController
(
msg.sender
)
JUMPI			cloneToken.changeController
(
msg.sender
)
PUSH1 0x32		cloneToken.changeController
(
msg.sender
)
GAS			cloneToken.changeController
(
msg.sender
)
SUB			cloneToken.changeController
(
msg.sender
)
CALL			cloneToken.changeController
(
msg.sender
)
ISZERO			cloneToken.changeController
(
msg.sender
)
PUSH [ErrorTag]		cloneToken.changeController
(
msg.sender
)
JUMPI			cloneToken.changeController
(
msg.sender
)
POP			cloneToken.changeController
(
msg.sender
)
POP			cloneToken.changeController
(
msg.sender
)
POP			cloneToken.changeController
(
msg.sender
)
DUP1			cloneToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
AND			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
PUSH32 0x86C875B377F900B07CE03575813022F05DD10ED7640B5282CF6D3C3FC352ADE		NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP6			_snapshotBlock
PUSH1 0x40		NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
MLOAD			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP1			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP3			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP2			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
MSTORE			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
PUSH1 0x20		NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
ADD			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
SWAP2			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
POP			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
POP			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
PUSH1 0x40		NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
MLOAD			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP1			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
SWAP2			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
SUB			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
SWAP1			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
LOG2			NewCloneToken
(
address
(
cloneToken
)
 _snapshotBlock
)
DUP1			cloneToken
SWAP2			return address
(
cloneToken
)
POP			return address
(
cloneToken
)
tag122
 
JUMPDEST		function createCloneToken
(
...
POP			function createCloneToken
(
...
SWAP6			function createCloneToken
(
...
SWAP5			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
POP			function createCloneToken
(
...
JUMP	[out]		function createCloneToken
(
...
tag57
 
JUMPDEST		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
PUSH1 0x0		uint256 balance
PUSH [tag127]		balanceOfAt
(
_owner
 block.number
)
DUP3			_owner
NUMBER			block.number
PUSH [tag50]		balanceOfAt
JUMP	[in]		balanceOfAt
(
_owner
 block.number
)
tag127
 
JUMPDEST		balanceOfAt
(
_owner
 block.number
)
SWAP1			return balanceOfAt
(
_owner
 block.number
)
POP			return balanceOfAt
(
_owner
 block.number
)
tag126
 
JUMPDEST		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP2			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
SWAP1			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
POP			function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
JUMP	[out]		function balanceOf
(
address _owner
)
 constant returns 
(
uint256 balance
)
 {
...
tag59
 
JUMPDEST		MiniMeToken public parentToken
PUSH1 0x5		MiniMeToken public parentToken
PUSH1 0x0		MiniMeToken public parentToken
SWAP1			MiniMeToken public parentToken
SLOAD			MiniMeToken public parentToken
SWAP1			MiniMeToken public parentToken
PUSH2 0x100		MiniMeToken public parentToken
EXP			MiniMeToken public parentToken
SWAP1			MiniMeToken public parentToken
DIV			MiniMeToken public parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		MiniMeToken public parentToken
AND			MiniMeToken public parentToken
DUP2			MiniMeToken public parentToken
JUMP	[out]		MiniMeToken public parentToken
tag61
 
JUMPDEST		function generateTokens
(
address _owner
 uint _amount
...
PUSH1 0x0		bool
PUSH1 0x0		uint curTotalSupply
PUSH1 0x0		var previousBalanceTo
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 throw
PUSH [tag129]		if 
(
msg.sender != controller
)
 throw
JUMPI			if 
(
msg.sender != controller
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag129
 
JUMPDEST		if 
(
msg.sender != controller
)
 throw
PUSH [tag131]		getValueAt
(
totalSupplyHistory
 block.number
)
PUSH1 0xA		totalSupplyHistory
NUMBER			block.number
PUSH [tag118]		getValueAt
JUMP	[in]		getValueAt
(
totalSupplyHistory
 block.number
)
tag131
 
JUMPDEST		getValueAt
(
totalSupplyHistory
 block.number
)
SWAP2			uint curTotalSupply = getValueAt
(
totalSupplyHistory
 block.number
)
POP			uint curTotalSupply = getValueAt
(
totalSupplyHistory
 block.number
)
PUSH [tag132]		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply + _amount
)
PUSH1 0xA		totalSupplyHistory
DUP6			_amount
DUP5			curTotalSupply
ADD			curTotalSupply + _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply + _amount
)
tag132
 
JUMPDEST		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply + _amount
)
PUSH [tag134]		balanceOf
(
_owner
)
DUP6			_owner
PUSH [tag57]		balanceOf
JUMP	[in]		balanceOf
(
_owner
)
tag134
 
JUMPDEST		balanceOf
(
_owner
)
SWAP1			var previousBalanceTo = balanceOf
(
_owner
)
POP			var previousBalanceTo = balanceOf
(
_owner
)
PUSH [tag135]		updateValueAtNow
(
balances[_owner]
 previousBalanceTo + _amount
)
PUSH1 0x8		balances
PUSH1 0x0		balances[_owner]
DUP8			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
AND			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
SWAP1			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
PUSH1 0x0		balances[_owner]
SHA3			balances[_owner]
DUP6			_amount
DUP4			previousBalanceTo
ADD			previousBalanceTo + _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
balances[_owner]
 previousBalanceTo + _amount
)
tag135
 
JUMPDEST		updateValueAtNow
(
balances[_owner]
 previousBalanceTo + _amount
)
DUP5			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer
(
0
 _owner
 _amount
)
AND			Transfer
(
0
 _owner
 _amount
)
PUSH1 0x0		0
PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer
(
0
 _owner
 _amount
)
DUP7			_amount
PUSH1 0x40		Transfer
(
0
 _owner
 _amount
)
MLOAD			Transfer
(
0
 _owner
 _amount
)
DUP1			Transfer
(
0
 _owner
 _amount
)
DUP3			Transfer
(
0
 _owner
 _amount
)
DUP2			Transfer
(
0
 _owner
 _amount
)
MSTORE			Transfer
(
0
 _owner
 _amount
)
PUSH1 0x20		Transfer
(
0
 _owner
 _amount
)
ADD			Transfer
(
0
 _owner
 _amount
)
SWAP2			Transfer
(
0
 _owner
 _amount
)
POP			Transfer
(
0
 _owner
 _amount
)
POP			Transfer
(
0
 _owner
 _amount
)
PUSH1 0x40		Transfer
(
0
 _owner
 _amount
)
MLOAD			Transfer
(
0
 _owner
 _amount
)
DUP1			Transfer
(
0
 _owner
 _amount
)
SWAP2			Transfer
(
0
 _owner
 _amount
)
SUB			Transfer
(
0
 _owner
 _amount
)
SWAP1			Transfer
(
0
 _owner
 _amount
)
LOG3			Transfer
(
0
 _owner
 _amount
)
PUSH1 0x1		true
SWAP3			return true
POP			return true
tag130
 
JUMPDEST		_
tag128
 
JUMPDEST		function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
SWAP3			function generateTokens
(
address _owner
 uint _amount
...
SWAP2			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
POP			function generateTokens
(
address _owner
 uint _amount
...
JUMP	[out]		function generateTokens
(
address _owner
 uint _amount
...
tag63
 
JUMPDEST		string public symbol
PUSH1 0x3		string public symbol
DUP1			string public symbol
SLOAD			string public symbol
PUSH1 0x1		string public symbol
DUP2			string public symbol
PUSH1 0x1		string public symbol
AND			string public symbol
ISZERO			string public symbol
PUSH2 0x100		string public symbol
MUL			string public symbol
SUB			string public symbol
AND			string public symbol
PUSH1 0x2		string public symbol
SWAP1			string public symbol
DIV			string public symbol
DUP1			string public symbol
PUSH1 0x1F		string public symbol
ADD			string public symbol
PUSH1 0x20		string public symbol
DUP1			string public symbol
SWAP2			string public symbol
DIV			string public symbol
MUL			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
PUSH1 0x40		string public symbol
MLOAD			string public symbol
SWAP1			string public symbol
DUP2			string public symbol
ADD			string public symbol
PUSH1 0x40		string public symbol
MSTORE			string public symbol
DUP1			string public symbol
SWAP3			string public symbol
SWAP2			string public symbol
SWAP1			string public symbol
DUP2			string public symbol
DUP2			string public symbol
MSTORE			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
DUP3			string public symbol
DUP1			string public symbol
SLOAD			string public symbol
PUSH1 0x1		string public symbol
DUP2			string public symbol
PUSH1 0x1		string public symbol
AND			string public symbol
ISZERO			string public symbol
PUSH2 0x100		string public symbol
MUL			string public symbol
SUB			string public symbol
AND			string public symbol
PUSH1 0x2		string public symbol
SWAP1			string public symbol
DIV			string public symbol
DUP1			string public symbol
ISZERO			string public symbol
PUSH [tag136]		string public symbol
JUMPI			string public symbol
DUP1			string public symbol
PUSH1 0x1F		string public symbol
LT			string public symbol
PUSH [tag137]		string public symbol
JUMPI			string public symbol
PUSH2 0x100		string public symbol
DUP1			string public symbol
DUP4			string public symbol
SLOAD			string public symbol
DIV			string public symbol
MUL			string public symbol
DUP4			string public symbol
MSTORE			string public symbol
SWAP2			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
SWAP2			string public symbol
PUSH [tag136]		string public symbol
JUMP			string public symbol
tag137
 
JUMPDEST		string public symbol
DUP3			string public symbol
ADD			string public symbol
SWAP2			string public symbol
SWAP1			string public symbol
PUSH1 0x0		string public symbol
MSTORE			string public symbol
PUSH1 0x20		string public symbol
PUSH1 0x0		string public symbol
SHA3			string public symbol
SWAP1			string public symbol
tag138
 
JUMPDEST		string public symbol
DUP2			string public symbol
SLOAD			string public symbol
DUP2			string public symbol
MSTORE			string public symbol
SWAP1			string public symbol
PUSH1 0x1		string public symbol
ADD			string public symbol
SWAP1			string public symbol
PUSH1 0x20		string public symbol
ADD			string public symbol
DUP1			string public symbol
DUP4			string public symbol
GT			string public symbol
PUSH [tag138]		string public symbol
JUMPI			string public symbol
DUP3			string public symbol
SWAP1			string public symbol
SUB			string public symbol
PUSH1 0x1F		string public symbol
AND			string public symbol
DUP3			string public symbol
ADD			string public symbol
SWAP2			string public symbol
tag136
 
JUMPDEST		string public symbol
POP			string public symbol
POP			string public symbol
POP			string public symbol
POP			string public symbol
POP			string public symbol
DUP2			string public symbol
JUMP	[out]		string public symbol
tag66
 
JUMPDEST		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
PUSH1 0x0		uint
PUSH1 0x7		creationBlock
SLOAD			creationBlock
DUP3			_blockNumber
LT			_blockNumber < creationBlock
ISZERO			if 
(
_blockNumber < creationBlock
)
 {
...
PUSH [tag140]		if 
(
_blockNumber < creationBlock
)
 {
...
JUMPI			if 
(
_blockNumber < creationBlock
)
 {
...
PUSH1 0x0		0
SWAP1			return 0
POP			return 0
PUSH [tag139]		return 0
JUMP			return 0
PUSH [tag141]		if 
(
_blockNumber < creationBlock
)
 {
...
JUMP			if 
(
_blockNumber < creationBlock
)
 {
...
tag140
 
JUMPDEST		if 
(
_blockNumber < creationBlock
)
 {
...
PUSH1 0x0		0
PUSH1 0xA		totalSupplyHistory
DUP1			totalSupplyHistory.length
SLOAD			totalSupplyHistory.length
SWAP1			totalSupplyHistory.length
POP			totalSupplyHistory.length
EQ			totalSupplyHistory.length == 0
DUP1			
(
totalSupplyHistory.length == 0
)
...
PUSH [tag142]		
(
totalSupplyHistory.length == 0
)
...
JUMPI			
(
totalSupplyHistory.length == 0
)
...
POP			
(
totalSupplyHistory.length == 0
)
...
DUP2			_blockNumber
PUSH1 0xA		totalSupplyHistory
PUSH1 0x0		0
DUP2			totalSupplyHistory[0]
SLOAD			totalSupplyHistory[0]
DUP2			totalSupplyHistory[0]
LT			totalSupplyHistory[0]
ISZERO			totalSupplyHistory[0]
PUSH [ErrorTag]		totalSupplyHistory[0]
JUMPI			totalSupplyHistory[0]
SWAP1			totalSupplyHistory[0]
PUSH1 0x0		totalSupplyHistory[0]
MSTORE			totalSupplyHistory[0]
PUSH1 0x20		totalSupplyHistory[0]
PUSH1 0x0		totalSupplyHistory[0]
SHA3			totalSupplyHistory[0]
SWAP1			totalSupplyHistory[0]
ADD			totalSupplyHistory[0]
PUSH1 0x0		totalSupplyHistory[0]
tag143
 
JUMPDEST		totalSupplyHistory[0]
POP			totalSupplyHistory[0]
PUSH1 0x0		totalSupplyHistory[0].fromBlock
ADD			totalSupplyHistory[0].fromBlock
PUSH1 0x0		totalSupplyHistory[0].fromBlock
SWAP1			totalSupplyHistory[0].fromBlock
SLOAD			totalSupplyHistory[0].fromBlock
SWAP1			totalSupplyHistory[0].fromBlock
PUSH2 0x100		totalSupplyHistory[0].fromBlock
EXP			totalSupplyHistory[0].fromBlock
SWAP1			totalSupplyHistory[0].fromBlock
DIV			totalSupplyHistory[0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		totalSupplyHistory[0].fromBlock
AND			totalSupplyHistory[0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		totalSupplyHistory[0].fromBlock > _blockNumber
AND			totalSupplyHistory[0].fromBlock > _blockNumber
GT			totalSupplyHistory[0].fromBlock > _blockNumber
tag142
 
JUMPDEST		
(
totalSupplyHistory.length == 0
)
...
ISZERO			if 
(
(
totalSupplyHistory.length == 0
)
...
PUSH [tag144]		if 
(
(
totalSupplyHistory.length == 0
)
...
JUMPI			if 
(
(
totalSupplyHistory.length == 0
)
...
PUSH1 0x0		0
PUSH1 0x5		parentToken
PUSH1 0x0		parentToken
SWAP1			parentToken
SLOAD			parentToken
SWAP1			parentToken
PUSH2 0x100		parentToken
EXP			parentToken
SWAP1			parentToken
DIV			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken
AND			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address
(
parentToken
)
 != 0
AND			address
(
parentToken
)
 != 0
EQ			address
(
parentToken
)
 != 0
ISZERO			address
(
parentToken
)
 != 0
ISZERO			if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH [tag145]		if 
(
address
(
parentToken
)
 != 0
)
 {
...
JUMPI			if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH1 0x5		parentToken
PUSH1 0x0		parentToken
SWAP1			parentToken
SLOAD			parentToken
SWAP1			parentToken
PUSH2 0x100		parentToken
EXP			parentToken
SWAP1			parentToken
DIV			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken
AND			parentToken
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		parentToken.totalSupplyAt
AND			parentToken.totalSupplyAt
PUSH4 0x981B24D0		parentToken.totalSupplyAt
PUSH1 0x6		parentSnapShotBlock
SLOAD			parentSnapShotBlock
PUSH1 0x0		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x40		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MLOAD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x20		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ADD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MSTORE			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x40		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MLOAD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP3			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MUL			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP2			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MSTORE			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x4		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ADD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP1			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP3			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP2			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MSTORE			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x20		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ADD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
SWAP2			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x20		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x40		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MLOAD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP1			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP4			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
SUB			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP2			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x0		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP8			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP1			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
EXTCODESIZE			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ISZERO			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH [ErrorTag]		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
JUMPI			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x32		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
GAS			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
SUB			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
CALL			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ISZERO			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH [ErrorTag]		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
JUMPI			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x40		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MLOAD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
DUP1			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
MLOAD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
SWAP1			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH1 0x20		parentToken.totalSupplyAt
(
parentSnapShotBlock
)
ADD			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			parentToken.totalSupplyAt
(
parentSnapShotBlock
)
SWAP1			return parentToken.totalSupplyAt
(
parentSnapShotBlock
)
POP			return parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH [tag139]		return parentToken.totalSupplyAt
(
parentSnapShotBlock
)
JUMP			return parentToken.totalSupplyAt
(
parentSnapShotBlock
)
PUSH [tag146]		if 
(
address
(
parentToken
)
 != 0
)
 {
...
JUMP			if 
(
address
(
parentToken
)
 != 0
)
 {
...
tag145
 
JUMPDEST		if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH1 0x0		0
SWAP1			return 0
POP			return 0
PUSH [tag139]		return 0
JUMP			return 0
tag146
 
JUMPDEST		if 
(
address
(
parentToken
)
 != 0
)
 {
...
PUSH [tag147]		if 
(
(
totalSupplyHistory.length == 0
)
...
JUMP			if 
(
(
totalSupplyHistory.length == 0
)
...
tag144
 
JUMPDEST		if 
(
(
totalSupplyHistory.length == 0
)
...
PUSH [tag148]		getValueAt
(
totalSupplyHistory
 _blockNumber
)
PUSH1 0xA		totalSupplyHistory
DUP4			_blockNumber
PUSH [tag118]		getValueAt
JUMP	[in]		getValueAt
(
totalSupplyHistory
 _blockNumber
)
tag148
 
JUMPDEST		getValueAt
(
totalSupplyHistory
 _blockNumber
)
SWAP1			return getValueAt
(
totalSupplyHistory
 _blockNumber
)
POP			return getValueAt
(
totalSupplyHistory
 _blockNumber
)
PUSH [tag139]		return getValueAt
(
totalSupplyHistory
 _blockNumber
)
JUMP			return getValueAt
(
totalSupplyHistory
 _blockNumber
)
tag147
 
JUMPDEST		if 
(
(
totalSupplyHistory.length == 0
)
...
tag141
 
JUMPDEST		if 
(
_blockNumber < creationBlock
)
 {
...
tag139
 
JUMPDEST		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP2			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
SWAP1			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
POP			function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
JUMP	[out]		function totalSupplyAt
(
uint _blockNumber
)
 constant returns
(
uint
)
 {
...
tag68
 
JUMPDEST		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
PUSH1 0x0		bool success
PUSH1 0xB		transfersEnabled
PUSH1 0x0		transfersEnabled
SWAP1			transfersEnabled
SLOAD			transfersEnabled
SWAP1			transfersEnabled
PUSH2 0x100		transfersEnabled
EXP			transfersEnabled
SWAP1			transfersEnabled
DIV			transfersEnabled
PUSH1 0xFF		transfersEnabled
AND			transfersEnabled
ISZERO			!transfersEnabled
ISZERO			if 
(
!transfersEnabled
)
 throw
PUSH [tag150]		if 
(
!transfersEnabled
)
 throw
JUMPI			if 
(
!transfersEnabled
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag150
 
JUMPDEST		if 
(
!transfersEnabled
)
 throw
PUSH [tag151]		doTransfer
(
msg.sender
 _to
 _amount
)
CALLER			msg.sender
DUP5			_to
DUP5			_amount
PUSH [tag104]		doTransfer
JUMP	[in]		doTransfer
(
msg.sender
 _to
 _amount
)
tag151
 
JUMPDEST		doTransfer
(
msg.sender
 _to
 _amount
)
SWAP1			return doTransfer
(
msg.sender
 _to
 _amount
)
POP			return doTransfer
(
msg.sender
 _to
 _amount
)
tag149
 
JUMPDEST		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP3			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
SWAP2			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
POP			function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
JUMP	[out]		function transfer
(
address _to
 uint256 _amount
)
 returns 
(
bool success
)
 {
...
tag70
 
JUMPDEST		bool public transfersEnabled
PUSH1 0xB		bool public transfersEnabled
PUSH1 0x0		bool public transfersEnabled
SWAP1			bool public transfersEnabled
SLOAD			bool public transfersEnabled
SWAP1			bool public transfersEnabled
PUSH2 0x100		bool public transfersEnabled
EXP			bool public transfersEnabled
SWAP1			bool public transfersEnabled
DIV			bool public transfersEnabled
PUSH1 0xFF		bool public transfersEnabled
AND			bool public transfersEnabled
DUP2			bool public transfersEnabled
JUMP	[out]		bool public transfersEnabled
tag72
 
JUMPDEST		uint public parentSnapShotBlock
PUSH1 0x6		uint public parentSnapShotBlock
SLOAD			uint public parentSnapShotBlock
DUP2			uint public parentSnapShotBlock
JUMP	[out]		uint public parentSnapShotBlock
tag74
 
JUMPDEST		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
PUSH1 0x0		bool success
DUP3			_amount
PUSH1 0x9		allowed
PUSH1 0x0		allowed[msg.sender]
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender]
AND			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
SWAP1			allowed[msg.sender]
DUP2			allowed[msg.sender]
MSTORE			allowed[msg.sender]
PUSH1 0x20		allowed[msg.sender]
ADD			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender]
SHA3			allowed[msg.sender]
PUSH1 0x0		allowed[msg.sender][_spender]
DUP7			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender][_spender]
AND			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
SWAP1			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender]
MSTORE			allowed[msg.sender][_spender]
PUSH1 0x20		allowed[msg.sender][_spender]
ADD			allowed[msg.sender][_spender]
PUSH1 0x0		allowed[msg.sender][_spender]
SHA3			allowed[msg.sender][_spender]
DUP2			allowed[msg.sender][_spender] = _amount
SWAP1			allowed[msg.sender][_spender] = _amount
SSTORE			allowed[msg.sender][_spender] = _amount
POP			allowed[msg.sender][_spender] = _amount
DUP4			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval
(
msg.sender
 _spender
 _amount
)
AND			Approval
(
msg.sender
 _spender
 _amount
)
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval
(
msg.sender
 _spender
 _amount
)
AND			Approval
(
msg.sender
 _spender
 _amount
)
PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925		Approval
(
msg.sender
 _spender
 _amount
)
DUP6			_amount
PUSH1 0x40		Approval
(
msg.sender
 _spender
 _amount
)
MLOAD			Approval
(
msg.sender
 _spender
 _amount
)
DUP1			Approval
(
msg.sender
 _spender
 _amount
)
DUP3			Approval
(
msg.sender
 _spender
 _amount
)
DUP2			Approval
(
msg.sender
 _spender
 _amount
)
MSTORE			Approval
(
msg.sender
 _spender
 _amount
)
PUSH1 0x20		Approval
(
msg.sender
 _spender
 _amount
)
ADD			Approval
(
msg.sender
 _spender
 _amount
)
SWAP2			Approval
(
msg.sender
 _spender
 _amount
)
POP			Approval
(
msg.sender
 _spender
 _amount
)
POP			Approval
(
msg.sender
 _spender
 _amount
)
PUSH1 0x40		Approval
(
msg.sender
 _spender
 _amount
)
MLOAD			Approval
(
msg.sender
 _spender
 _amount
)
DUP1			Approval
(
msg.sender
 _spender
 _amount
)
SWAP2			Approval
(
msg.sender
 _spender
 _amount
)
SUB			Approval
(
msg.sender
 _spender
 _amount
)
SWAP1			Approval
(
msg.sender
 _spender
 _amount
)
LOG3			Approval
(
msg.sender
 _spender
 _amount
)
DUP4			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_spender.call
AND			_spender.call
PUSH1 0x40		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
MLOAD			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
DUP1			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
DUP1			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH32 0x72656365697665417070726F76616C28616464726573732C75696E743235362C		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
DUP2			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
MSTORE			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH1 0x20		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
ADD			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH32 0x616464726573732C627974657329000000000000000000000000000000000000		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
DUP2			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
MSTORE			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH1 0x20		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
ADD			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
POP			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH1 0x2E		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
ADD			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
SWAP1			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
POP			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH1 0x40		sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
MLOAD			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
DUP1			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
SWAP2			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
SUB			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
SWAP1			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
SHA3			sha3
(
"receiveApproval
(
address
uint256
address
bytes
)
"
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		_spender.call
(
...
SWAP1			_spender.call
(
...
DIV			_spender.call
(
...
CALLER			msg.sender
DUP6			_amount
ADDRESS			this
DUP7			_extraData
PUSH1 0x40		_spender.call
(
...
MLOAD			_spender.call
(
...
DUP6			_spender.call
(
...
PUSH29 0x100000000000000000000000000000000000000000000000000000000		_spender.call
(
...
MUL			_spender.call
(
...
DUP2			_spender.call
(
...
MSTORE			_spender.call
(
...
PUSH1 0x4		_spender.call
(
...
ADD			_spender.call
(
...
DUP1			_spender.call
(
...
DUP6			_spender.call
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_spender.call
(
...
AND			_spender.call
(
...
DUP2			_spender.call
(
...
MSTORE			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
ADD			_spender.call
(
...
DUP5			_spender.call
(
...
DUP2			_spender.call
(
...
MSTORE			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
ADD			_spender.call
(
...
DUP4			_spender.call
(
...
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_spender.call
(
...
AND			_spender.call
(
...
DUP2			_spender.call
(
...
MSTORE			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
ADD			_spender.call
(
...
DUP3			_spender.call
(
...
DUP1			_spender.call
(
...
MLOAD			_spender.call
(
...
SWAP1			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
ADD			_spender.call
(
...
SWAP1			_spender.call
(
...
DUP1			_spender.call
(
...
DUP4			_spender.call
(
...
DUP4			_spender.call
(
...
DUP3			_spender.call
(
...
SWAP1			_spender.call
(
...
PUSH1 0x0		_spender.call
(
...
PUSH1 0x4		_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
DUP5			_spender.call
(
...
PUSH1 0x1F		_spender.call
(
...
ADD			_spender.call
(
...
DIV			_spender.call
(
...
PUSH1 0x3		_spender.call
(
...
MUL			_spender.call
(
...
PUSH1 0xF		_spender.call
(
...
ADD			_spender.call
(
...
CALL			_spender.call
(
...
POP			_spender.call
(
...
SWAP1			_spender.call
(
...
POP			_spender.call
(
...
SWAP1			_spender.call
(
...
DUP2			_spender.call
(
...
ADD			_spender.call
(
...
SWAP1			_spender.call
(
...
PUSH1 0x1F		_spender.call
(
...
AND			_spender.call
(
...
DUP1			_spender.call
(
...
ISZERO			_spender.call
(
...
PUSH [tag153]		_spender.call
(
...
JUMPI			_spender.call
(
...
DUP1			_spender.call
(
...
DUP3			_spender.call
(
...
SUB			_spender.call
(
...
DUP1			_spender.call
(
...
MLOAD			_spender.call
(
...
PUSH1 0x1		_spender.call
(
...
DUP4			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
SUB			_spender.call
(
...
PUSH2 0x100		_spender.call
(
...
EXP			_spender.call
(
...
SUB			_spender.call
(
...
NOT			_spender.call
(
...
AND			_spender.call
(
...
DUP2			_spender.call
(
...
MSTORE			_spender.call
(
...
PUSH1 0x20		_spender.call
(
...
ADD			_spender.call
(
...
SWAP2			_spender.call
(
...
POP			_spender.call
(
...
tag153
 
JUMPDEST		_spender.call
(
...
POP			_spender.call
(
...
SWAP5			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
PUSH1 0x0		_spender.call
(
...
PUSH1 0x40		_spender.call
(
...
MLOAD			_spender.call
(
...
DUP1			_spender.call
(
...
DUP4			_spender.call
(
...
SUB			_spender.call
(
...
DUP2			_spender.call
(
...
PUSH1 0x0		_spender.call
(
...
DUP8			_spender.call
(
...
PUSH2 0x61DA		_spender.call
(
...
GAS			_spender.call
(
...
SUB			_spender.call
(
...
CALL			_spender.call
(
...
SWAP3			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
POP			_spender.call
(
...
ISZERO			!_spender.call
(
...
ISZERO			if
(
!_spender.call
(
...
PUSH [tag154]		if
(
!_spender.call
(
...
JUMPI			if
(
!_spender.call
(
...
PUSH [ErrorTag]		throw
JUMP			throw
tag154
 
JUMPDEST		if
(
!_spender.call
(
...
PUSH1 0x1		true
SWAP1			return true
POP			return true
tag152
 
JUMPDEST		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP4			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
SWAP3			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
POP			function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
JUMP	[out]		function approveAndCall
(
address _spender
 uint256 _amount
 bytes _extraData
...
tag76
 
JUMPDEST		function destroyTokens
(
address _owner
 uint _amount
...
PUSH1 0x0		bool
PUSH1 0x0		uint curTotalSupply
PUSH1 0x0		var previousBalanceFrom
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 throw
PUSH [tag156]		if 
(
msg.sender != controller
)
 throw
JUMPI			if 
(
msg.sender != controller
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag156
 
JUMPDEST		if 
(
msg.sender != controller
)
 throw
PUSH [tag158]		getValueAt
(
totalSupplyHistory
 block.number
)
PUSH1 0xA		totalSupplyHistory
NUMBER			block.number
PUSH [tag118]		getValueAt
JUMP	[in]		getValueAt
(
totalSupplyHistory
 block.number
)
tag158
 
JUMPDEST		getValueAt
(
totalSupplyHistory
 block.number
)
SWAP2			uint curTotalSupply = getValueAt
(
totalSupplyHistory
 block.number
)
POP			uint curTotalSupply = getValueAt
(
totalSupplyHistory
 block.number
)
DUP4			_amount
DUP3			curTotalSupply
LT			curTotalSupply < _amount
ISZERO			if 
(
curTotalSupply < _amount
)
 throw
PUSH [tag159]		if 
(
curTotalSupply < _amount
)
 throw
JUMPI			if 
(
curTotalSupply < _amount
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag159
 
JUMPDEST		if 
(
curTotalSupply < _amount
)
 throw
PUSH [tag160]		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply - _amount
)
PUSH1 0xA		totalSupplyHistory
DUP6			_amount
DUP5			curTotalSupply
SUB			curTotalSupply - _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply - _amount
)
tag160
 
JUMPDEST		updateValueAtNow
(
totalSupplyHistory
 curTotalSupply - _amount
)
PUSH [tag161]		balanceOf
(
_owner
)
DUP6			_owner
PUSH [tag57]		balanceOf
JUMP	[in]		balanceOf
(
_owner
)
tag161
 
JUMPDEST		balanceOf
(
_owner
)
SWAP1			var previousBalanceFrom = balanceOf
(
_owner
)
POP			var previousBalanceFrom = balanceOf
(
_owner
)
DUP4			_amount
DUP2			previousBalanceFrom
LT			previousBalanceFrom < _amount
ISZERO			if 
(
previousBalanceFrom < _amount
)
 throw
PUSH [tag162]		if 
(
previousBalanceFrom < _amount
)
 throw
JUMPI			if 
(
previousBalanceFrom < _amount
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag162
 
JUMPDEST		if 
(
previousBalanceFrom < _amount
)
 throw
PUSH [tag163]		updateValueAtNow
(
balances[_owner]
 previousBalanceFrom - _amount
)
PUSH1 0x8		balances
PUSH1 0x0		balances[_owner]
DUP8			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
AND			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
SWAP1			balances[_owner]
DUP2			balances[_owner]
MSTORE			balances[_owner]
PUSH1 0x20		balances[_owner]
ADD			balances[_owner]
PUSH1 0x0		balances[_owner]
SHA3			balances[_owner]
DUP6			_amount
DUP4			previousBalanceFrom
SUB			previousBalanceFrom - _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
balances[_owner]
 previousBalanceFrom - _amount
)
tag163
 
JUMPDEST		updateValueAtNow
(
balances[_owner]
 previousBalanceFrom - _amount
)
PUSH1 0x0		0
DUP6			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer
(
_owner
 0
 _amount
)
AND			Transfer
(
_owner
 0
 _amount
)
PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer
(
_owner
 0
 _amount
)
DUP7			_amount
PUSH1 0x40		Transfer
(
_owner
 0
 _amount
)
MLOAD			Transfer
(
_owner
 0
 _amount
)
DUP1			Transfer
(
_owner
 0
 _amount
)
DUP3			Transfer
(
_owner
 0
 _amount
)
DUP2			Transfer
(
_owner
 0
 _amount
)
MSTORE			Transfer
(
_owner
 0
 _amount
)
PUSH1 0x20		Transfer
(
_owner
 0
 _amount
)
ADD			Transfer
(
_owner
 0
 _amount
)
SWAP2			Transfer
(
_owner
 0
 _amount
)
POP			Transfer
(
_owner
 0
 _amount
)
POP			Transfer
(
_owner
 0
 _amount
)
PUSH1 0x40		Transfer
(
_owner
 0
 _amount
)
MLOAD			Transfer
(
_owner
 0
 _amount
)
DUP1			Transfer
(
_owner
 0
 _amount
)
SWAP2			Transfer
(
_owner
 0
 _amount
)
SUB			Transfer
(
_owner
 0
 _amount
)
SWAP1			Transfer
(
_owner
 0
 _amount
)
LOG3			Transfer
(
_owner
 0
 _amount
)
PUSH1 0x1		true
SWAP3			return true
POP			return true
tag157
 
JUMPDEST		_
tag155
 
JUMPDEST		function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
SWAP3			function destroyTokens
(
address _owner
 uint _amount
...
SWAP2			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
POP			function destroyTokens
(
address _owner
 uint _amount
...
JUMP	[out]		function destroyTokens
(
address _owner
 uint _amount
...
tag78
 
JUMPDEST		function allowance
(
address _owner
 address _spender
...
PUSH1 0x0		uint256 remaining
PUSH1 0x9		allowed
PUSH1 0x0		allowed[_owner]
DUP5			_owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner]
AND			allowed[_owner]
DUP2			allowed[_owner]
MSTORE			allowed[_owner]
PUSH1 0x20		allowed[_owner]
ADD			allowed[_owner]
SWAP1			allowed[_owner]
DUP2			allowed[_owner]
MSTORE			allowed[_owner]
PUSH1 0x20		allowed[_owner]
ADD			allowed[_owner]
PUSH1 0x0		allowed[_owner]
SHA3			allowed[_owner]
PUSH1 0x0		allowed[_owner][_spender]
DUP4			_spender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner][_spender]
AND			allowed[_owner][_spender]
DUP2			allowed[_owner][_spender]
MSTORE			allowed[_owner][_spender]
PUSH1 0x20		allowed[_owner][_spender]
ADD			allowed[_owner][_spender]
SWAP1			allowed[_owner][_spender]
DUP2			allowed[_owner][_spender]
MSTORE			allowed[_owner][_spender]
PUSH1 0x20		allowed[_owner][_spender]
ADD			allowed[_owner][_spender]
PUSH1 0x0		allowed[_owner][_spender]
SHA3			allowed[_owner][_spender]
SLOAD			allowed[_owner][_spender]
SWAP1			return allowed[_owner][_spender]
POP			return allowed[_owner][_spender]
tag164
 
JUMPDEST		function allowance
(
address _owner
 address _spender
...
SWAP3			function allowance
(
address _owner
 address _spender
...
SWAP2			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
POP			function allowance
(
address _owner
 address _spender
...
JUMP	[out]		function allowance
(
address _owner
 address _spender
...
tag80
 
JUMPDEST		MiniMeTokenFactory public tokenFactory
PUSH1 0xB		MiniMeTokenFactory public tokenFactory
PUSH1 0x1		MiniMeTokenFactory public tokenFactory
SWAP1			MiniMeTokenFactory public tokenFactory
SLOAD			MiniMeTokenFactory public tokenFactory
SWAP1			MiniMeTokenFactory public tokenFactory
PUSH2 0x100		MiniMeTokenFactory public tokenFactory
EXP			MiniMeTokenFactory public tokenFactory
SWAP1			MiniMeTokenFactory public tokenFactory
DIV			MiniMeTokenFactory public tokenFactory
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		MiniMeTokenFactory public tokenFactory
AND			MiniMeTokenFactory public tokenFactory
DUP2			MiniMeTokenFactory public tokenFactory
JUMP	[out]		MiniMeTokenFactory public tokenFactory
tag82
 
JUMPDEST		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != controller
AND			msg.sender != controller
EQ			msg.sender != controller
ISZERO			msg.sender != controller
ISZERO			if 
(
msg.sender != controller
)
 throw
PUSH [tag166]		if 
(
msg.sender != controller
)
 throw
JUMPI			if 
(
msg.sender != controller
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag166
 
JUMPDEST		if 
(
msg.sender != controller
)
 throw
DUP1			_transfersEnabled
PUSH1 0xB		transfersEnabled
PUSH1 0x0		transfersEnabled
PUSH2 0x100		transfersEnabled = _transfersEnabled
EXP			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
SLOAD			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
PUSH1 0xFF		transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
NOT			transfersEnabled = _transfersEnabled
AND			transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
DUP4			transfersEnabled = _transfersEnabled
PUSH32 0x100000000000000000000000000000000000000000000000000000000000000		transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
DUP2			transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
DIV			transfersEnabled = _transfersEnabled
MUL			transfersEnabled = _transfersEnabled
OR			transfersEnabled = _transfersEnabled
SWAP1			transfersEnabled = _transfersEnabled
SSTORE			transfersEnabled = _transfersEnabled
POP			transfersEnabled = _transfersEnabled
tag167
 
JUMPDEST		_
tag165
 
JUMPDEST		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
POP			function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
JUMP	[out]		function enableTransfers
(
bool _transfersEnabled
)
 onlyController {
...
tag84
 
JUMPDEST		address public controller
PUSH1 0x0		address public controller
PUSH1 0x0		address public controller
SWAP1			address public controller
SLOAD			address public controller
SWAP1			address public controller
PUSH2 0x100		address public controller
EXP			address public controller
SWAP1			address public controller
DIV			address public controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public controller
AND			address public controller
DUP2			address public controller
JUMP	[out]		address public controller
tag104
 
JUMPDEST		function doTransfer
(
address _from
 address _to
 uint _amount
...
PUSH1 0x0		bool
PUSH1 0x0		var previousBalanceFrom
PUSH1 0x0		var previousBalanceTo
PUSH1 0x0		0
DUP5			_amount
EQ			_amount == 0
ISZERO			if 
(
_amount == 0
)
 {
...
PUSH [tag169]		if 
(
_amount == 0
)
 {
...
JUMPI			if 
(
_amount == 0
)
 {
...
PUSH1 0x1		true
SWAP3			return true
POP			return true
PUSH [tag168]		return true
JUMP			return true
tag169
 
JUMPDEST		if 
(
_amount == 0
)
 {
...
PUSH1 0x0		0
DUP6			_to
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_to == 0
AND			_to == 0
EQ			_to == 0
DUP1			
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
PUSH [tag170]		
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
JUMPI			
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
POP			
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
ADDRESS			this
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_to == address
(
this
)
AND			_to == address
(
this
)
DUP6			_to
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_to == address
(
this
)
AND			_to == address
(
this
)
EQ			_to == address
(
this
)
tag170
 
JUMPDEST		
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
ISZERO			if 
(
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
)
 throw
PUSH [tag171]		if 
(
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
)
 throw
JUMPI			if 
(
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag171
 
JUMPDEST		if 
(
(
_to == 0
)
 || 
(
_to == address
(
this
)
)
)
 throw
PUSH [tag172]		balanceOfAt
(
_from
 block.number
)
DUP7			_from
NUMBER			block.number
PUSH [tag50]		balanceOfAt
JUMP	[in]		balanceOfAt
(
_from
 block.number
)
tag172
 
JUMPDEST		balanceOfAt
(
_from
 block.number
)
SWAP2			var previousBalanceFrom = balanceOfAt
(
_from
 block.number
)
POP			var previousBalanceFrom = balanceOfAt
(
_from
 block.number
)
DUP4			_amount
DUP3			previousBalanceFrom
LT			previousBalanceFrom < _amount
ISZERO			if 
(
previousBalanceFrom < _amount
)
 {
...
PUSH [tag173]		if 
(
previousBalanceFrom < _amount
)
 {
...
JUMPI			if 
(
previousBalanceFrom < _amount
)
 {
...
PUSH1 0x0		false
SWAP3			return false
POP			return false
PUSH [tag168]		return false
JUMP			return false
tag173
 
JUMPDEST		if 
(
previousBalanceFrom < _amount
)
 {
...
PUSH [tag174]		isContract
(
controller
)
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH [tag30]		isContract
JUMP	[in]		isContract
(
controller
)
tag174
 
JUMPDEST		isContract
(
controller
)
ISZERO			if 
(
isContract
(
controller
)
)
 {
...
PUSH [tag175]		if 
(
isContract
(
controller
)
)
 {
...
JUMPI			if 
(
isContract
(
controller
)
)
 {
...
PUSH1 0x0		controller
PUSH1 0x0		controller
SWAP1			controller
SLOAD			controller
SWAP1			controller
PUSH2 0x100		controller
EXP			controller
SWAP1			controller
DIV			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		controller
AND			controller
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onTransfer
AND			TokenController
(
controller
)
.onTransfer
PUSH4 0x4A393149		TokenController
(
controller
)
.onTransfer
DUP8			_from
DUP8			_to
DUP8			_amount
PUSH1 0x0		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MLOAD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MSTORE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MLOAD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP5			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH29 0x100000000000000000000000000000000000000000000000000000000		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MUL			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP2			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MSTORE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x4		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP1			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP5			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
AND			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP2			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MSTORE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP4			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
AND			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP2			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MSTORE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP3			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP2			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MSTORE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
SWAP4			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MLOAD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP1			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP4			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
SUB			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP2			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x0		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP8			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP1			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
EXTCODESIZE			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ISZERO			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH [ErrorTag]		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
JUMPI			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x32		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
GAS			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
SUB			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
CALL			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ISZERO			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH [ErrorTag]		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
JUMPI			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x40		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MLOAD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
DUP1			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
MLOAD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
SWAP1			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
PUSH1 0x20		TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ADD			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
POP			TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ISZERO			!TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
ISZERO			if 
(
!TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
)
...
PUSH [tag176]		if 
(
!TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
)
...
JUMPI			if 
(
!TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
)
...
PUSH [ErrorTag]		throw
JUMP			throw
tag176
 
JUMPDEST		if 
(
!TokenController
(
controller
)
.onTransfer
(
_from
 _to
 _amount
)
)
...
tag175
 
JUMPDEST		if 
(
isContract
(
controller
)
)
 {
...
PUSH [tag177]		updateValueAtNow
(
balances[_from]
 previousBalanceFrom - _amount
)
PUSH1 0x8		balances
PUSH1 0x0		balances[_from]
DUP9			_from
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_from]
AND			balances[_from]
DUP2			balances[_from]
MSTORE			balances[_from]
PUSH1 0x20		balances[_from]
ADD			balances[_from]
SWAP1			balances[_from]
DUP2			balances[_from]
MSTORE			balances[_from]
PUSH1 0x20		balances[_from]
ADD			balances[_from]
PUSH1 0x0		balances[_from]
SHA3			balances[_from]
DUP6			_amount
DUP5			previousBalanceFrom
SUB			previousBalanceFrom - _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
balances[_from]
 previousBalanceFrom - _amount
)
tag177
 
JUMPDEST		updateValueAtNow
(
balances[_from]
 previousBalanceFrom - _amount
)
PUSH [tag178]		balanceOfAt
(
_to
 block.number
)
DUP6			_to
NUMBER			block.number
PUSH [tag50]		balanceOfAt
JUMP	[in]		balanceOfAt
(
_to
 block.number
)
tag178
 
JUMPDEST		balanceOfAt
(
_to
 block.number
)
SWAP1			var previousBalanceTo = balanceOfAt
(
_to
 block.number
)
POP			var previousBalanceTo = balanceOfAt
(
_to
 block.number
)
PUSH [tag179]		updateValueAtNow
(
balances[_to]
 previousBalanceTo + _amount
)
PUSH1 0x8		balances
PUSH1 0x0		balances[_to]
DUP8			_to
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_to]
AND			balances[_to]
DUP2			balances[_to]
MSTORE			balances[_to]
PUSH1 0x20		balances[_to]
ADD			balances[_to]
SWAP1			balances[_to]
DUP2			balances[_to]
MSTORE			balances[_to]
PUSH1 0x20		balances[_to]
ADD			balances[_to]
PUSH1 0x0		balances[_to]
SHA3			balances[_to]
DUP6			_amount
DUP4			previousBalanceTo
ADD			previousBalanceTo + _amount
PUSH [tag133]		updateValueAtNow
JUMP	[in]		updateValueAtNow
(
balances[_to]
 previousBalanceTo + _amount
)
tag179
 
JUMPDEST		updateValueAtNow
(
balances[_to]
 previousBalanceTo + _amount
)
DUP5			_to
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer
(
_from
 _to
 _amount
)
AND			Transfer
(
_from
 _to
 _amount
)
DUP7			_from
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer
(
_from
 _to
 _amount
)
AND			Transfer
(
_from
 _to
 _amount
)
PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer
(
_from
 _to
 _amount
)
DUP7			_amount
PUSH1 0x40		Transfer
(
_from
 _to
 _amount
)
MLOAD			Transfer
(
_from
 _to
 _amount
)
DUP1			Transfer
(
_from
 _to
 _amount
)
DUP3			Transfer
(
_from
 _to
 _amount
)
DUP2			Transfer
(
_from
 _to
 _amount
)
MSTORE			Transfer
(
_from
 _to
 _amount
)
PUSH1 0x20		Transfer
(
_from
 _to
 _amount
)
ADD			Transfer
(
_from
 _to
 _amount
)
SWAP2			Transfer
(
_from
 _to
 _amount
)
POP			Transfer
(
_from
 _to
 _amount
)
POP			Transfer
(
_from
 _to
 _amount
)
PUSH1 0x40		Transfer
(
_from
 _to
 _amount
)
MLOAD			Transfer
(
_from
 _to
 _amount
)
DUP1			Transfer
(
_from
 _to
 _amount
)
SWAP2			Transfer
(
_from
 _to
 _amount
)
SUB			Transfer
(
_from
 _to
 _amount
)
SWAP1			Transfer
(
_from
 _to
 _amount
)
LOG3			Transfer
(
_from
 _to
 _amount
)
PUSH1 0x1		true
SWAP3			return true
POP			return true
tag168
 
JUMPDEST		function doTransfer
(
address _from
 address _to
 uint _amount
...
POP			function doTransfer
(
address _from
 address _to
 uint _amount
...
POP			function doTransfer
(
address _from
 address _to
 uint _amount
...
SWAP4			function doTransfer
(
address _from
 address _to
 uint _amount
...
SWAP3			function doTransfer
(
address _from
 address _to
 uint _amount
...
POP			function doTransfer
(
address _from
 address _to
 uint _amount
...
POP			function doTransfer
(
address _from
 address _to
 uint _amount
...
POP			function doTransfer
(
address _from
 address _to
 uint _amount
...
JUMP	[out]		function doTransfer
(
address _from
 address _to
 uint _amount
...
tag118
 
JUMPDEST		function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
PUSH1 0x0		uint
PUSH1 0x0		uint min
PUSH1 0x0		uint max
PUSH1 0x0		uint mid
PUSH1 0x0		0
DUP7			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
EQ			checkpoints.length == 0
ISZERO			if 
(
checkpoints.length == 0
)
 return 0
PUSH [tag181]		if 
(
checkpoints.length == 0
)
 return 0
JUMPI			if 
(
checkpoints.length == 0
)
 return 0
PUSH1 0x0		0
SWAP4			return 0
POP			return 0
PUSH [tag180]		return 0
JUMP			return 0
tag181
 
JUMPDEST		if 
(
checkpoints.length == 0
)
 return 0
DUP6			checkpoints
PUSH1 0x1		1
DUP8			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
SUB			checkpoints.length-1
DUP2			checkpoints[checkpoints.length-1]
SLOAD			checkpoints[checkpoints.length-1]
DUP2			checkpoints[checkpoints.length-1]
LT			checkpoints[checkpoints.length-1]
ISZERO			checkpoints[checkpoints.length-1]
PUSH [ErrorTag]		checkpoints[checkpoints.length-1]
JUMPI			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
MSTORE			checkpoints[checkpoints.length-1]
PUSH1 0x20		checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
SHA3			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
ADD			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
tag182
 
JUMPDEST		checkpoints[checkpoints.length-1]
POP			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1].fromBlock
ADD			checkpoints[checkpoints.length-1].fromBlock
PUSH1 0x0		checkpoints[checkpoints.length-1].fromBlock
SWAP1			checkpoints[checkpoints.length-1].fromBlock
SLOAD			checkpoints[checkpoints.length-1].fromBlock
SWAP1			checkpoints[checkpoints.length-1].fromBlock
PUSH2 0x100		checkpoints[checkpoints.length-1].fromBlock
EXP			checkpoints[checkpoints.length-1].fromBlock
SWAP1			checkpoints[checkpoints.length-1].fromBlock
DIV			checkpoints[checkpoints.length-1].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[checkpoints.length-1].fromBlock
AND			checkpoints[checkpoints.length-1].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_block >= checkpoints[checkpoints.length-1].fromBlock
AND			_block >= checkpoints[checkpoints.length-1].fromBlock
DUP6			_block
LT			_block >= checkpoints[checkpoints.length-1].fromBlock
ISZERO			_block >= checkpoints[checkpoints.length-1].fromBlock
ISZERO			if 
(
_block >= checkpoints[checkpoints.length-1].fromBlock
)
...
PUSH [tag183]		if 
(
_block >= checkpoints[checkpoints.length-1].fromBlock
)
...
JUMPI			if 
(
_block >= checkpoints[checkpoints.length-1].fromBlock
)
...
DUP6			checkpoints
PUSH1 0x1		1
DUP8			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
SUB			checkpoints.length-1
DUP2			checkpoints[checkpoints.length-1]
SLOAD			checkpoints[checkpoints.length-1]
DUP2			checkpoints[checkpoints.length-1]
LT			checkpoints[checkpoints.length-1]
ISZERO			checkpoints[checkpoints.length-1]
PUSH [ErrorTag]		checkpoints[checkpoints.length-1]
JUMPI			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
MSTORE			checkpoints[checkpoints.length-1]
PUSH1 0x20		checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
SHA3			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
ADD			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
tag184
 
JUMPDEST		checkpoints[checkpoints.length-1]
POP			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1].value
ADD			checkpoints[checkpoints.length-1].value
PUSH1 0x10		checkpoints[checkpoints.length-1].value
SWAP1			checkpoints[checkpoints.length-1].value
SLOAD			checkpoints[checkpoints.length-1].value
SWAP1			checkpoints[checkpoints.length-1].value
PUSH2 0x100		checkpoints[checkpoints.length-1].value
EXP			checkpoints[checkpoints.length-1].value
SWAP1			checkpoints[checkpoints.length-1].value
DIV			checkpoints[checkpoints.length-1].value
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[checkpoints.length-1].value
AND			checkpoints[checkpoints.length-1].value
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		return checkpoints[checkpoints.length-1].value
AND			return checkpoints[checkpoints.length-1].value
SWAP4			return checkpoints[checkpoints.length-1].value
POP			return checkpoints[checkpoints.length-1].value
PUSH [tag180]		return checkpoints[checkpoints.length-1].value
JUMP			return checkpoints[checkpoints.length-1].value
tag183
 
JUMPDEST		if 
(
_block >= checkpoints[checkpoints.length-1].fromBlock
)
...
DUP6			checkpoints
PUSH1 0x0		0
DUP2			checkpoints[0]
SLOAD			checkpoints[0]
DUP2			checkpoints[0]
LT			checkpoints[0]
ISZERO			checkpoints[0]
PUSH [ErrorTag]		checkpoints[0]
JUMPI			checkpoints[0]
SWAP1			checkpoints[0]
PUSH1 0x0		checkpoints[0]
MSTORE			checkpoints[0]
PUSH1 0x20		checkpoints[0]
PUSH1 0x0		checkpoints[0]
SHA3			checkpoints[0]
SWAP1			checkpoints[0]
ADD			checkpoints[0]
PUSH1 0x0		checkpoints[0]
tag185
 
JUMPDEST		checkpoints[0]
POP			checkpoints[0]
PUSH1 0x0		checkpoints[0].fromBlock
ADD			checkpoints[0].fromBlock
PUSH1 0x0		checkpoints[0].fromBlock
SWAP1			checkpoints[0].fromBlock
SLOAD			checkpoints[0].fromBlock
SWAP1			checkpoints[0].fromBlock
PUSH2 0x100		checkpoints[0].fromBlock
EXP			checkpoints[0].fromBlock
SWAP1			checkpoints[0].fromBlock
DIV			checkpoints[0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[0].fromBlock
AND			checkpoints[0].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_block < checkpoints[0].fromBlock
AND			_block < checkpoints[0].fromBlock
DUP6			_block
LT			_block < checkpoints[0].fromBlock
ISZERO			if 
(
_block < checkpoints[0].fromBlock
)
 return 0
PUSH [tag186]		if 
(
_block < checkpoints[0].fromBlock
)
 return 0
JUMPI			if 
(
_block < checkpoints[0].fromBlock
)
 return 0
PUSH1 0x0		0
SWAP4			return 0
POP			return 0
PUSH [tag180]		return 0
JUMP			return 0
tag186
 
JUMPDEST		if 
(
_block < checkpoints[0].fromBlock
)
 return 0
PUSH1 0x0		0
SWAP3			uint min = 0
POP			uint min = 0
PUSH1 0x1		1
DUP7			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
SUB			checkpoints.length-1
SWAP2			uint max = checkpoints.length-1
POP			uint max = checkpoints.length-1
tag187
 
JUMPDEST		while 
(
max > min
)
 {
...
DUP3			min
DUP3			max
GT			max > min
ISZERO			while 
(
max > min
)
 {
...
PUSH [tag188]		while 
(
max > min
)
 {
...
JUMPI			while 
(
max > min
)
 {
...
PUSH1 0x2		2
PUSH1 0x1		1
DUP5			min
DUP5			max
ADD			max + min
ADD			max + min + 1
DUP2			
(
max + min + 1
)
/ 2
ISZERO			
(
max + min + 1
)
/ 2
PUSH [ErrorTag]		
(
max + min + 1
)
/ 2
JUMPI			
(
max + min + 1
)
/ 2
DIV			
(
max + min + 1
)
/ 2
SWAP1			uint mid = 
(
max + min + 1
)
/ 2
POP			uint mid = 
(
max + min + 1
)
/ 2
DUP5			_block
DUP7			checkpoints
DUP3			mid
DUP2			checkpoints[mid]
SLOAD			checkpoints[mid]
DUP2			checkpoints[mid]
LT			checkpoints[mid]
ISZERO			checkpoints[mid]
PUSH [ErrorTag]		checkpoints[mid]
JUMPI			checkpoints[mid]
SWAP1			checkpoints[mid]
PUSH1 0x0		checkpoints[mid]
MSTORE			checkpoints[mid]
PUSH1 0x20		checkpoints[mid]
PUSH1 0x0		checkpoints[mid]
SHA3			checkpoints[mid]
SWAP1			checkpoints[mid]
ADD			checkpoints[mid]
PUSH1 0x0		checkpoints[mid]
tag189
 
JUMPDEST		checkpoints[mid]
POP			checkpoints[mid]
PUSH1 0x0		checkpoints[mid].fromBlock
ADD			checkpoints[mid].fromBlock
PUSH1 0x0		checkpoints[mid].fromBlock
SWAP1			checkpoints[mid].fromBlock
SLOAD			checkpoints[mid].fromBlock
SWAP1			checkpoints[mid].fromBlock
PUSH2 0x100		checkpoints[mid].fromBlock
EXP			checkpoints[mid].fromBlock
SWAP1			checkpoints[mid].fromBlock
DIV			checkpoints[mid].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[mid].fromBlock
AND			checkpoints[mid].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[mid].fromBlock<=_block
AND			checkpoints[mid].fromBlock<=_block
GT			checkpoints[mid].fromBlock<=_block
ISZERO			checkpoints[mid].fromBlock<=_block
ISZERO			if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
PUSH [tag190]		if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
JUMPI			if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
DUP1			mid
SWAP3			min = mid
POP			min = mid
PUSH [tag191]		if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
JUMP			if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
tag190
 
JUMPDEST		if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
PUSH1 0x1		1
DUP2			mid
SUB			mid-1
SWAP2			max = mid-1
POP			max = mid-1
tag191
 
JUMPDEST		if 
(
checkpoints[mid].fromBlock<=_block
)
 {
...
PUSH [tag187]		while 
(
max > min
)
 {
...
JUMP			while 
(
max > min
)
 {
...
tag188
 
JUMPDEST		while 
(
max > min
)
 {
...
DUP6			checkpoints
DUP4			min
DUP2			checkpoints[min]
SLOAD			checkpoints[min]
DUP2			checkpoints[min]
LT			checkpoints[min]
ISZERO			checkpoints[min]
PUSH [ErrorTag]		checkpoints[min]
JUMPI			checkpoints[min]
SWAP1			checkpoints[min]
PUSH1 0x0		checkpoints[min]
MSTORE			checkpoints[min]
PUSH1 0x20		checkpoints[min]
PUSH1 0x0		checkpoints[min]
SHA3			checkpoints[min]
SWAP1			checkpoints[min]
ADD			checkpoints[min]
PUSH1 0x0		checkpoints[min]
tag192
 
JUMPDEST		checkpoints[min]
POP			checkpoints[min]
PUSH1 0x0		checkpoints[min].value
ADD			checkpoints[min].value
PUSH1 0x10		checkpoints[min].value
SWAP1			checkpoints[min].value
SLOAD			checkpoints[min].value
SWAP1			checkpoints[min].value
PUSH2 0x100		checkpoints[min].value
EXP			checkpoints[min].value
SWAP1			checkpoints[min].value
DIV			checkpoints[min].value
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[min].value
AND			checkpoints[min].value
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		return checkpoints[min].value
AND			return checkpoints[min].value
SWAP4			return checkpoints[min].value
POP			return checkpoints[min].value
tag180
 
JUMPDEST		function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
POP			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
POP			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
POP			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
SWAP3			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
SWAP2			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
POP			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
POP			function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
JUMP	[out]		function getValueAt
(
Checkpoint[] storage checkpoints
 uint _block
...
tag133
 
JUMPDEST		function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
PUSH1 0x0		Checkpoint newCheckPoint
PUSH1 0x0		Checkpoint oldCheckPoint
PUSH1 0x0		0
DUP5			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
EQ			checkpoints.length == 0
DUP1			
(
checkpoints.length == 0
)
...
PUSH [tag194]		
(
checkpoints.length == 0
)
...
JUMPI			
(
checkpoints.length == 0
)
...
POP			
(
checkpoints.length == 0
)
...
NUMBER			block.number
DUP5			checkpoints
PUSH1 0x1		1
DUP7			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
SUB			checkpoints.length -1
DUP2			checkpoints[checkpoints.length -1]
SLOAD			checkpoints[checkpoints.length -1]
DUP2			checkpoints[checkpoints.length -1]
LT			checkpoints[checkpoints.length -1]
ISZERO			checkpoints[checkpoints.length -1]
PUSH [ErrorTag]		checkpoints[checkpoints.length -1]
JUMPI			checkpoints[checkpoints.length -1]
SWAP1			checkpoints[checkpoints.length -1]
PUSH1 0x0		checkpoints[checkpoints.length -1]
MSTORE			checkpoints[checkpoints.length -1]
PUSH1 0x20		checkpoints[checkpoints.length -1]
PUSH1 0x0		checkpoints[checkpoints.length -1]
SHA3			checkpoints[checkpoints.length -1]
SWAP1			checkpoints[checkpoints.length -1]
ADD			checkpoints[checkpoints.length -1]
PUSH1 0x0		checkpoints[checkpoints.length -1]
tag195
 
JUMPDEST		checkpoints[checkpoints.length -1]
POP			checkpoints[checkpoints.length -1]
PUSH1 0x0		checkpoints[checkpoints.length -1].fromBlock
ADD			checkpoints[checkpoints.length -1].fromBlock
PUSH1 0x0		checkpoints[checkpoints.length -1].fromBlock
SWAP1			checkpoints[checkpoints.length -1].fromBlock
SLOAD			checkpoints[checkpoints.length -1].fromBlock
SWAP1			checkpoints[checkpoints.length -1].fromBlock
PUSH2 0x100		checkpoints[checkpoints.length -1].fromBlock
EXP			checkpoints[checkpoints.length -1].fromBlock
SWAP1			checkpoints[checkpoints.length -1].fromBlock
DIV			checkpoints[checkpoints.length -1].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[checkpoints.length -1].fromBlock
AND			checkpoints[checkpoints.length -1].fromBlock
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints[checkpoints.length -1].fromBlock < block.number
AND			checkpoints[checkpoints.length -1].fromBlock < block.number
LT			checkpoints[checkpoints.length -1].fromBlock < block.number
tag194
 
JUMPDEST		
(
checkpoints.length == 0
)
...
ISZERO			if 
(
(
checkpoints.length == 0
)
...
PUSH [tag196]		if 
(
(
checkpoints.length == 0
)
...
JUMPI			if 
(
(
checkpoints.length == 0
)
...
DUP4			checkpoints
DUP5			checkpoints
DUP1			checkpoints.length++
SLOAD			checkpoints.length++
DUP1			checkpoints.length++
SWAP2			checkpoints.length++
SWAP1			checkpoints.length++
PUSH1 0x1		checkpoints.length++
ADD			checkpoints.length++
DUP2			checkpoints.length++
SLOAD			checkpoints.length++
DUP2			checkpoints.length++
DUP4			checkpoints.length++
SSTORE			checkpoints.length++
DUP2			checkpoints.length++
DUP2			checkpoints.length++
ISZERO			checkpoints.length++
GT			checkpoints.length++
PUSH [tag197]		checkpoints.length++
JUMPI			checkpoints.length++
DUP2			checkpoints.length++
DUP4			checkpoints.length++
PUSH1 0x0		checkpoints.length++
MSTORE			checkpoints.length++
PUSH1 0x20		checkpoints.length++
PUSH1 0x0		checkpoints.length++
SHA3			checkpoints.length++
SWAP2			checkpoints.length++
DUP3			checkpoints.length++
ADD			checkpoints.length++
SWAP2			checkpoints.length++
ADD			checkpoints.length++
PUSH [tag198]		checkpoints.length++
SWAP2			checkpoints.length++
SWAP1			checkpoints.length++
tag199
 
JUMPDEST		checkpoints.length++
DUP1			checkpoints.length++
DUP3			checkpoints.length++
GT			checkpoints.length++
ISZERO			checkpoints.length++
PUSH [tag200]		checkpoints.length++
JUMPI			checkpoints.length++
PUSH1 0x0		checkpoints.length++
PUSH1 0x0		checkpoints.length++
DUP3			checkpoints.length++
ADD			checkpoints.length++
PUSH1 0x0		checkpoints.length++
PUSH2 0x100		checkpoints.length++
EXP			checkpoints.length++
DUP2			checkpoints.length++
SLOAD			checkpoints.length++
SWAP1			checkpoints.length++
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints.length++
MUL			checkpoints.length++
NOT			checkpoints.length++
AND			checkpoints.length++
SWAP1			checkpoints.length++
SSTORE			checkpoints.length++
PUSH1 0x0		checkpoints.length++
DUP3			checkpoints.length++
ADD			checkpoints.length++
PUSH1 0x10		checkpoints.length++
PUSH2 0x100		checkpoints.length++
EXP			checkpoints.length++
DUP2			checkpoints.length++
SLOAD			checkpoints.length++
SWAP1			checkpoints.length++
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		checkpoints.length++
MUL			checkpoints.length++
NOT			checkpoints.length++
AND			checkpoints.length++
SWAP1			checkpoints.length++
SSTORE			checkpoints.length++
POP			checkpoints.length++
PUSH1 0x1		checkpoints.length++
ADD			checkpoints.length++
PUSH [tag199]		checkpoints.length++
JUMP			checkpoints.length++
tag200
 
JUMPDEST		checkpoints.length++
POP			checkpoints.length++
SWAP1			checkpoints.length++
JUMP			checkpoints.length++
tag198
 
JUMPDEST		checkpoints.length++
tag197
 
JUMPDEST		checkpoints.length++
POP			checkpoints.length++
POP			checkpoints.length++
POP			checkpoints.length++
DUP2			checkpoints[ checkpoints.length++ ]
SLOAD			checkpoints[ checkpoints.length++ ]
DUP2			checkpoints[ checkpoints.length++ ]
LT			checkpoints[ checkpoints.length++ ]
ISZERO			checkpoints[ checkpoints.length++ ]
PUSH [ErrorTag]		checkpoints[ checkpoints.length++ ]
JUMPI			checkpoints[ checkpoints.length++ ]
SWAP1			checkpoints[ checkpoints.length++ ]
PUSH1 0x0		checkpoints[ checkpoints.length++ ]
MSTORE			checkpoints[ checkpoints.length++ ]
PUSH1 0x20		checkpoints[ checkpoints.length++ ]
PUSH1 0x0		checkpoints[ checkpoints.length++ ]
SHA3			checkpoints[ checkpoints.length++ ]
SWAP1			checkpoints[ checkpoints.length++ ]
ADD			checkpoints[ checkpoints.length++ ]
PUSH1 0x0		checkpoints[ checkpoints.length++ ]
tag201
 
JUMPDEST		checkpoints[ checkpoints.length++ ]
POP			checkpoints[ checkpoints.length++ ]
SWAP2			Checkpoint newCheckPoint = checkpoints[ checkpoints.length++ ]
POP			Checkpoint newCheckPoint = checkpoints[ checkpoints.length++ ]
NUMBER			block.number
DUP3			newCheckPoint
PUSH1 0x0		newCheckPoint.fromBlock
ADD			newCheckPoint.fromBlock
PUSH1 0x0		newCheckPoint.fromBlock
PUSH2 0x100		newCheckPoint.fromBlock =uint128
(
block.number
)
EXP			newCheckPoint.fromBlock =uint128
(
block.number
)
DUP2			newCheckPoint.fromBlock =uint128
(
block.number
)
SLOAD			newCheckPoint.fromBlock =uint128
(
block.number
)
DUP2			newCheckPoint.fromBlock =uint128
(
block.number
)
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		newCheckPoint.fromBlock =uint128
(
block.number
)
MUL			newCheckPoint.fromBlock =uint128
(
block.number
)
NOT			newCheckPoint.fromBlock =uint128
(
block.number
)
AND			newCheckPoint.fromBlock =uint128
(
block.number
)
SWAP1			newCheckPoint.fromBlock =uint128
(
block.number
)
DUP4			newCheckPoint.fromBlock =uint128
(
block.number
)
PUSH17 0x100000000000000000000000000000000		newCheckPoint.fromBlock =uint128
(
block.number
)
SWAP1			newCheckPoint.fromBlock =uint128
(
block.number
)
DUP2			newCheckPoint.fromBlock =uint128
(
block.number
)
MUL			newCheckPoint.fromBlock =uint128
(
block.number
)
DIV			newCheckPoint.fromBlock =uint128
(
block.number
)
MUL			newCheckPoint.fromBlock =uint128
(
block.number
)
OR			newCheckPoint.fromBlock =uint128
(
block.number
)
SWAP1			newCheckPoint.fromBlock =uint128
(
block.number
)
SSTORE			newCheckPoint.fromBlock =uint128
(
block.number
)
POP			newCheckPoint.fromBlock =uint128
(
block.number
)
DUP3			_value
DUP3			newCheckPoint
PUSH1 0x0		newCheckPoint.value
ADD			newCheckPoint.value
PUSH1 0x10		newCheckPoint.value
PUSH2 0x100		newCheckPoint.value = uint128
(
_value
)
EXP			newCheckPoint.value = uint128
(
_value
)
DUP2			newCheckPoint.value = uint128
(
_value
)
SLOAD			newCheckPoint.value = uint128
(
_value
)
DUP2			newCheckPoint.value = uint128
(
_value
)
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		newCheckPoint.value = uint128
(
_value
)
MUL			newCheckPoint.value = uint128
(
_value
)
NOT			newCheckPoint.value = uint128
(
_value
)
AND			newCheckPoint.value = uint128
(
_value
)
SWAP1			newCheckPoint.value = uint128
(
_value
)
DUP4			newCheckPoint.value = uint128
(
_value
)
PUSH17 0x100000000000000000000000000000000		newCheckPoint.value = uint128
(
_value
)
SWAP1			newCheckPoint.value = uint128
(
_value
)
DUP2			newCheckPoint.value = uint128
(
_value
)
MUL			newCheckPoint.value = uint128
(
_value
)
DIV			newCheckPoint.value = uint128
(
_value
)
MUL			newCheckPoint.value = uint128
(
_value
)
OR			newCheckPoint.value = uint128
(
_value
)
SWAP1			newCheckPoint.value = uint128
(
_value
)
SSTORE			newCheckPoint.value = uint128
(
_value
)
POP			newCheckPoint.value = uint128
(
_value
)
PUSH [tag202]		if 
(
(
checkpoints.length == 0
)
...
JUMP			if 
(
(
checkpoints.length == 0
)
...
tag196
 
JUMPDEST		if 
(
(
checkpoints.length == 0
)
...
DUP4			checkpoints
PUSH1 0x1		1
DUP6			checkpoints
DUP1			checkpoints.length
SLOAD			checkpoints.length
SWAP1			checkpoints.length
POP			checkpoints.length
SUB			checkpoints.length-1
DUP2			checkpoints[checkpoints.length-1]
SLOAD			checkpoints[checkpoints.length-1]
DUP2			checkpoints[checkpoints.length-1]
LT			checkpoints[checkpoints.length-1]
ISZERO			checkpoints[checkpoints.length-1]
PUSH [ErrorTag]		checkpoints[checkpoints.length-1]
JUMPI			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
MSTORE			checkpoints[checkpoints.length-1]
PUSH1 0x20		checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
SHA3			checkpoints[checkpoints.length-1]
SWAP1			checkpoints[checkpoints.length-1]
ADD			checkpoints[checkpoints.length-1]
PUSH1 0x0		checkpoints[checkpoints.length-1]
tag203
 
JUMPDEST		checkpoints[checkpoints.length-1]
POP			checkpoints[checkpoints.length-1]
SWAP1			Checkpoint oldCheckPoint = checkpoints[checkpoints.length-1]
POP			Checkpoint oldCheckPoint = checkpoints[checkpoints.length-1]
DUP3			_value
DUP2			oldCheckPoint
PUSH1 0x0		oldCheckPoint.value
ADD			oldCheckPoint.value
PUSH1 0x10		oldCheckPoint.value
PUSH2 0x100		oldCheckPoint.value = uint128
(
_value
)
EXP			oldCheckPoint.value = uint128
(
_value
)
DUP2			oldCheckPoint.value = uint128
(
_value
)
SLOAD			oldCheckPoint.value = uint128
(
_value
)
DUP2			oldCheckPoint.value = uint128
(
_value
)
PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		oldCheckPoint.value = uint128
(
_value
)
MUL			oldCheckPoint.value = uint128
(
_value
)
NOT			oldCheckPoint.value = uint128
(
_value
)
AND			oldCheckPoint.value = uint128
(
_value
)
SWAP1			oldCheckPoint.value = uint128
(
_value
)
DUP4			oldCheckPoint.value = uint128
(
_value
)
PUSH17 0x100000000000000000000000000000000		oldCheckPoint.value = uint128
(
_value
)
SWAP1			oldCheckPoint.value = uint128
(
_value
)
DUP2			oldCheckPoint.value = uint128
(
_value
)
MUL			oldCheckPoint.value = uint128
(
_value
)
DIV			oldCheckPoint.value = uint128
(
_value
)
MUL			oldCheckPoint.value = uint128
(
_value
)
OR			oldCheckPoint.value = uint128
(
_value
)
SWAP1			oldCheckPoint.value = uint128
(
_value
)
SSTORE			oldCheckPoint.value = uint128
(
_value
)
POP			oldCheckPoint.value = uint128
(
_value
)
tag202
 
JUMPDEST		if 
(
(
checkpoints.length == 0
)
...
tag193
 
JUMPDEST		function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
POP			function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
POP			function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
POP			function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
POP			function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
JUMP	[out]		function updateValueAtNow
(
Checkpoint[] storage checkpoints
 uint _value
...
.code
PUSH1 0x60		contract Owned {
...
PUSH1 0x40		contract Owned {
...
MSTORE			contract Owned {
...
CALLVALUE			function Owned
(
)
 { owner = msg.sender;}
PUSH [ErrorTag]		function Owned
(
)
 { owner = msg.sender;}
JUMPI			function Owned
(
)
 { owner = msg.sender;}
tag1
 
JUMPDEST		function Owned
(
)
 { owner = msg.sender;}
CALLER			msg.sender
PUSH1 0x0		owner
PUSH1 0x0		owner
PUSH2 0x100		owner = msg.sender
EXP			owner = msg.sender
DUP2			owner = msg.sender
SLOAD			owner = msg.sender
DUP2			owner = msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = msg.sender
MUL			owner = msg.sender
NOT			owner = msg.sender
AND			owner = msg.sender
SWAP1			owner = msg.sender
DUP4			owner = msg.sender
PUSH13 0x1000000000000000000000000		owner = msg.sender
SWAP1			owner = msg.sender
DUP2			owner = msg.sender
MUL			owner = msg.sender
DIV			owner = msg.sender
MUL			owner = msg.sender
OR			owner = msg.sender
SWAP1			owner = msg.sender
SSTORE			owner = msg.sender
POP			owner = msg.sender
tag2
 
JUMPDEST		function Owned
(
)
 { owner = msg.sender;}
tag3
 
JUMPDEST		contract Owned {
...
PUSH #[$0]		contract Owned {
...
DUP1			contract Owned {
...
PUSH [$0]		contract Owned {
...
PUSH1 0x0		contract Owned {
...
CODECOPY			contract Owned {
...
PUSH1 0x0		contract Owned {
...
RETURN			contract Owned {
...
.data
0
 
.code
PUSH1 0x60		contract Owned {
...
PUSH1 0x40		contract Owned {
...
MSTORE			contract Owned {
...
PUSH1 0x0		contract Owned {
...
CALLDATALOAD			contract Owned {
...
PUSH29 0x100000000000000000000000000000000000000000000000000000000		contract Owned {
...
SWAP1			contract Owned {
...
DIV			contract Owned {
...
DUP1			contract Owned {
...
PUSH4 0x8DA5CB5B		contract Owned {
...
EQ			contract Owned {
...
PUSH [tag2]		contract Owned {
...
JUMPI			contract Owned {
...
DUP1			contract Owned {
...
PUSH4 0xA6F9DAE1		contract Owned {
...
EQ			contract Owned {
...
PUSH [tag3]		contract Owned {
...
JUMPI			contract Owned {
...
tag1
 
JUMPDEST		contract Owned {
...
PUSH [ErrorTag]		contract Owned {
...
JUMP			contract Owned {
...
tag2
 
JUMPDEST		address public owner
CALLVALUE			address public owner
PUSH [ErrorTag]		address public owner
JUMPI			address public owner
PUSH [tag4]		address public owner
PUSH [tag5]		address public owner
JUMP			address public owner
tag4
 
JUMPDEST		address public owner
PUSH1 0x40		address public owner
MLOAD			address public owner
DUP1			address public owner
DUP3			address public owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
AND			address public owner
DUP2			address public owner
MSTORE			address public owner
PUSH1 0x20		address public owner
ADD			address public owner
SWAP2			address public owner
POP			address public owner
POP			address public owner
PUSH1 0x40		address public owner
MLOAD			address public owner
DUP1			address public owner
SWAP2			address public owner
SUB			address public owner
SWAP1			address public owner
RETURN			address public owner
tag3
 
JUMPDEST		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
CALLVALUE			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH [ErrorTag]		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
JUMPI			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH [tag6]		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH1 0x4		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
DUP1			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
DUP1			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
CALLDATALOAD			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
SWAP1			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH1 0x20		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
ADD			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
SWAP1			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
SWAP2			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
SWAP1			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
POP			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
POP			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH [tag7]		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
JUMP			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
tag6
 
JUMPDEST		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
STOP			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
tag5
 
JUMPDEST		address public owner
PUSH1 0x0		address public owner
PUSH1 0x0		address public owner
SWAP1			address public owner
SLOAD			address public owner
SWAP1			address public owner
PUSH2 0x100		address public owner
EXP			address public owner
SWAP1			address public owner
DIV			address public owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
AND			address public owner
DUP2			address public owner
JUMP	[out]		address public owner
tag7
 
JUMPDEST		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
PUSH1 0x0		owner
PUSH1 0x0		owner
SWAP1			owner
SLOAD			owner
SWAP1			owner
PUSH2 0x100		owner
EXP			owner
SWAP1			owner
DIV			owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
AND			owner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
AND			msg.sender != owner
CALLER			msg.sender
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
AND			msg.sender != owner
EQ			msg.sender != owner
ISZERO			msg.sender != owner
ISZERO			if 
(
msg.sender != owner
)
 throw
PUSH [tag9]		if 
(
msg.sender != owner
)
 throw
JUMPI			if 
(
msg.sender != owner
)
 throw
PUSH [ErrorTag]		throw
JUMP			throw
tag9
 
JUMPDEST		if 
(
msg.sender != owner
)
 throw
DUP1			_newOwner
PUSH1 0x0		owner
PUSH1 0x0		owner
PUSH2 0x100		owner = _newOwner
EXP			owner = _newOwner
DUP2			owner = _newOwner
SLOAD			owner = _newOwner
DUP2			owner = _newOwner
PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _newOwner
MUL			owner = _newOwner
NOT			owner = _newOwner
AND			owner = _newOwner
SWAP1			owner = _newOwner
DUP4			owner = _newOwner
PUSH13 0x1000000000000000000000000		owner = _newOwner
SWAP1			owner = _newOwner
DUP2			owner = _newOwner
MUL			owner = _newOwner
DIV			owner = _newOwner
MUL			owner = _newOwner
OR			owner = _newOwner
SWAP1			owner = _newOwner
SSTORE			owner = _newOwner
POP			owner = _newOwner
tag10
 
JUMPDEST		_
tag8
 
JUMPDEST		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
POP			function changeOwner
(
address _newOwner
)
 onlyOwner {
...
JUMP	[out]		function changeOwner
(
address _newOwner
)
 onlyOwner {
...
Contract not fully implemented
