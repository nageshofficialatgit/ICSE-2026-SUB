
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 iszero
(
callvalue
)
)
invalid
tag
_1
tag
_2
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xa5843f08
eq
tag
_2
jumpi
tag
_1
invalid
tag
_2
jumpi
(
tag
_3
 iszero
(
callvalue
)
)
invalid
tag
_3
tag
_4
0x4
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_5
)
tag
_4
stop
tag
_5
dup1
0x0
0x0
dup5
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
sha3
0x0
dup3
dup3
sload
sub
swap3
pop
pop
dup2
swap1
sstore
pop
tag
_6
pop
pop
jump	}
