
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xd5f24708
eq
tag
_2
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_3
jumpi
0x0
dup1
revert
tag
_3
pop
tag
_4
jump
(
tag
_5
)
tag
_4
stop
tag
_5
0x32
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0xc7e284b8
mload
(
0x40
)
dup2
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
0x20
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup8
dup1
extcodesize
iszero
dup1
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
pop
gas
call
iszero
dup1
iszero
tag
_8
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_8
pop
pop
pop
pop
mload
(
0x40
)
returndatasize
0x20
dup2
lt
iszero
tag
_9
jumpi
0x0
dup1
revert
tag
_9
dup2
add
swap1
dup1
dup1
mload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
gt
iszero
tag
_10
jumpi
0x0
dup1
revert
tag
_10
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0x18a25e8
mload
(
0x40
)
dup2
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
0x20
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup8
dup1
extcodesize
iszero
dup1
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
pop
gas
call
iszero
dup1
iszero
tag
_12
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_12
pop
pop
pop
pop
mload
(
0x40
)
returndatasize
0x20
dup2
lt
iszero
tag
_13
jumpi
0x0
dup1
revert
tag
_13
dup2
add
swap1
dup1
dup1
mload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup8
gas
call
swap3
pop
pop
pop
pop
jump	
}
