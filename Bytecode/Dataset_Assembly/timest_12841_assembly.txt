
mstore
(
0x40
 0x80
)
0x1
0x0
sstore
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x119f32dd
eq
tag
_2
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_3
jumpi
0x0
dup1
revert
tag
_3
pop
tag
_4
jump
(
tag
_5
)
tag
_4
stop
tag
_5
0x0
dup1
timestamp
swap2
pop
0x1
sload
(
0x0
)
eq
iszero
tag
_7
jumpi
jump
(
tag
_8
)
tag
_7
0x278d00
dup3
sub
swap1
pop
dup2
dup2
lt
iszero
iszero
tag
_9
jumpi
invalid
tag
_9
dup1
sload
(
0x0
)
lt
iszero
tag
_10
jumpi
0x1
0x0
dup2
swap1
sstore
pop
tag
_10
tag
_8
pop
pop
jump	
}
