
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x00
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x00
codecopy
0x00
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x04
)
)
shr
(
0xe0
 calldataload
(
0x00
)
)
dup1
0xb46300ec
eq
tag
_2
jumpi
tag
_1
0x00
dup1
revert
tag
_2
tag
_3
tag
_4
jump	tag
_3
stop
tag
_4
0xe804e829a6d7d7092a48ede30869ec84d8a7bb9c
0xffffffffffffffffffffffffffffffffffffffff
and
0x08fc
callvalue
swap1
dup2
iszero
mul
swap1
mload
(
0x40
)
0x00
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
iszero
dup1
iszero
tag
_7
jumpi
returndatasize
0x00
dup1
returndatacopy
revert
(
0x00
 returndatasize
)
tag
_7
pop
jump	
}
