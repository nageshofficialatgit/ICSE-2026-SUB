
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 iszero
(
callvalue
)
)
invalid
tag
_1
tag
_2
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x70a08231
eq
tag
_2
jumpi
dup1
0xa9059cbb
eq
tag
_3
jumpi
tag
_1
invalid
tag
_2
jumpi
(
tag
_4
 iszero
(
callvalue
)
)
invalid
tag
_4
tag
_5
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_6
)
tag
_5
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
jumpi
(
tag
_7
 iszero
(
callvalue
)
)
invalid
tag
_7
tag
_8
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_9
)
tag
_8
stop
tag
_6
mstore
(
0x20
 0x0
)
dup1
0x0
mstore
sha3
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_9
dup1
0x0
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
sha3
sload
lt
iszero
iszero
iszero
tag
_11
jumpi
revert
(
0x0
 0x0
)
tag
_11
dup1
0x0
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
sha3
0x0
dup3
dup3
sload
sub
swap3
pop
pop
dup2
swap1
sstore
pop
dup1
0x0
0x0
dup5
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
sha3
0x0
dup3
dup3
sload
add
swap3
pop
pop
dup2
swap1
sstore
pop
tag
_10
pop
pop
jump	}
