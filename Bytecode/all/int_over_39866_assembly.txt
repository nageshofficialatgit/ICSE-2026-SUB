
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x270bfc07
eq
tag
_2
jumpi
dup1
0x27e235e3
eq
tag
_3
jumpi
dup1
0x369e8c1d
eq
tag
_4
jumpi
dup1
0x492cc769
eq
tag
_5
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_6
jumpi
0x0
dup1
revert
tag
_6
pop
tag
_7
jump
(
tag
_8
)
tag
_7
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_9
jumpi
0x0
dup1
revert
tag
_9
pop
tag
_10
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_11
)
tag
_10
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_12
jumpi
0x0
dup1
revert
tag
_12
pop
tag
_13
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_14
)
tag
_13
mload
(
0x40
)
dup1
dup1
0x20
add
dup3
dup2
sub
dup3
mstore
dup4
dup2
dup2
mload
dup2
mstore
0x20
add
swap2
pop
dup1
mload
swap1
0x20
add
swap1
dup1
dup4
dup4
0x0
tag
_15
dup4
dup2
lt
iszero
tag
_16
jumpi
dup1
dup3
add
mload
dup2
dup5
add
mstore
0x20
dup2
add
swap1
pop
jump
(
tag
_15
)
tag
_16
pop
pop
pop
pop
swap1
pop
swap1
dup2
add
swap1
0x1f
and
dup1
iszero
tag
_18
jumpi
dup1
dup3
sub
dup1
mload
0x1
dup4
0x20
sub
0x100
exp
sub
not
and
dup2
mstore
0x20
add
swap2
pop
tag
_18
pop
swap3
pop
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
tag
_19
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
dup3
add
dup1
calldataload
swap1
0x20
add
swap1
dup1
dup1
0x1f
add
0x20
dup1
swap2
div
mul
0x20
add
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
swap4
swap3
swap2
swap1
dup2
dup2
mstore
0x20
add
dup4
dup4
dup1
dup3
dup5
calldatacopy
dup3
add
swap2
pop
pop
pop
pop
pop
pop
swap2
swap3
swap2
swap3
swap1
pop
pop
pop
jump
(
tag
_20
)
tag
_19
stop
tag
_8
0x2
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_11
mstore
(
0x20
 0x1
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_14
mstore
(
0x20
 0x0
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
dup1
0x1f
add
0x20
dup1
swap2
div
mul
0x20
add
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
swap3
swap2
swap1
dup2
dup2
mstore
0x20
add
dup3
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
dup1
iszero
tag
_21
jumpi
dup1
0x1f
lt
tag
_22
jumpi
0x100
dup1
dup4
sload
div
mul
dup4
mstore
swap2
0x20
add
swap2
jump
(
tag
_21
)
tag
_22
dup3
add
swap2
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
tag
_23
dup2
sload
dup2
mstore
swap1
0x1
add
swap1
0x20
add
dup1
dup4
gt
tag
_23
jumpi
dup3
swap1
sub
0x1f
and
dup3
add
swap2
tag
_21
pop
pop
pop
pop
pop
dup2
jump	
tag
_20
0x2
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
callvalue
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup8
gas
call
swap3
pop
pop
pop
iszero
iszero
tag
_25
jumpi
0x0
dup1
revert
tag
_25
callvalue
0x1
0x0
0x2
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup3
dup3
sload
sub
swap3
pop
pop
dup2
swap1
sstore
pop
pop
jump	
}
