
mstore
(
0x40
 0x80
)
0x509cb8cb2f8ba04ae81eec394175707edd37e109
0x0
dup1
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
0x5c035bb4cb7dacbfee076a5e61aa39a10da2e956
0x1
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x35898c89
eq
tag
_2
jumpi
dup1
0x3ccfd60b
eq
tag
_3
jumpi
dup1
0x9811c7c1
eq
tag
_4
jumpi
tag
_1
0x0
dup1
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_7
jumpi
0x0
dup1
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
callvalue
0x927c0
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
pop
tag
_7
stop
tag
_2
callvalue
dup1
iszero
tag
_8
jumpi
0x0
dup1
revert
tag
_8
pop
tag
_9
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_10
)
tag
_9
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
pop
tag
_12
jump
(
tag
_13
)
tag
_12
stop
tag
_4
callvalue
dup1
iszero
tag
_14
jumpi
0x0
dup1
revert
tag
_14
pop
tag
_15
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_16
)
tag
_15
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_10
mstore
(
0x20
 0x1
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_13
0x1
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_18
jumpi
0x0
dup1
revert
tag
_18
0x1
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0x8fc
address
0xffffffffffffffffffffffffffffffffffffffff
and
balance
swap1
dup2
iszero
mul
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
iszero
dup1
iszero
tag
_19
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_19
pop
jump	
tag
_16
mstore
(
0x20
 0x0
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
}
dataSize
(
sub_0
)
dataOffset
(
sub_0
)
0xb
dup3
dup3
dup3
codecopy
dup1
mload
0x0
byte
0x73
eq
0x0
dup2
eq
tag
_2
jumpi
jump
(
tag
_1
)
tag
_2
invalid
tag
_1
pop
address
0x0
mstore
0x73
dup2
mstore8
dup3
dup2
return
stop
sub_0
assembly
{
eq
(
address
 deployTimeAddress
(
)
)
mstore
(
0x40
 0x80
)
0x0
dup1
revert
}
mstore
(
0x40
 0x80
)
caller
0x0
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
tag
_3
mul
(
0x100000000
 tag
_4
)
0x100000000
swap1
div
jump	tag
_3
pop
tag
_5
mul
(
0x100000000
 tag
_4
)
0x100000000
swap1
div
jump	tag
_5
pop
tag
_6
mul
(
0x100000000
 tag
_4
)
0x100000000
swap1
div
jump	tag
_6
pop
tag
_7
mul
(
0x100000000
 tag
_4
)
0x100000000
swap1
div
jump	tag
_7
pop
0x1
0x0
dup2
sload
dup2
lt
iszero
iszero
tag
_8
jumpi
invalid
tag
_8
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0x2
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
0x1
dup1
dup2
sload
dup2
lt
iszero
iszero
tag
_10
jumpi
invalid
tag
_10
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0x2
0x0
0x1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
0x1
0x2
dup2
sload
dup2
lt
iszero
iszero
tag
_12
jumpi
invalid
tag
_12
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0x2
0x0
0x2
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
0x1
0x3
dup2
sload
dup2
lt
iszero
iszero
tag
_14
jumpi
invalid
tag
_14
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0x2
0x0
0x3
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
jump
(
tag
_16
)
tag
_4
0x0
dup1
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_18
jumpi
0x0
dup1
revert
tag
_18
tag
_19
jump	tag
_19
mload
(
0x40
)
dup1
swap2
sub
swap1
0x0
create
dup1
iszero
dup1
iszero
tag
_21
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_21
pop
swap1
pop
0x1
dup2
swap1
dup1
0x1
dup2
sload
add
dup1
dup3
sstore
dup1
swap2
pop
pop
swap1
0x1
dup3
sub
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap1
swap2
swap3
swap1
swap2
swap1
swap2
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
pop
dup1
swap2
pop
pop
swap1
jump	
tag
_20
mload
(
0x40
)
dataSize
(
sub_1
)
dup1
dataOffset
(
sub_1
)
dup4
codecopy
add
swap1
jump	tag
_16
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xa46e3e9
eq
tag
_2
jumpi
dup1
0x2daeb49a
eq
tag
_3
jumpi
dup1
0x3ccfd60b
eq
tag
_4
jumpi
dup1
0x4962b964
eq
tag
_5
jumpi
dup1
0x54dfbca8
eq
tag
_6
jumpi
dup1
0x6f2641e1
eq
tag
_7
jumpi
dup1
0x8da5cb5b
eq
tag
_8
jumpi
dup1
0x8dd7d6d1
eq
tag
_9
jumpi
tag
_1
stop
tag
_2
callvalue
dup1
iszero
tag
_12
jumpi
0x0
dup1
revert
tag
_12
pop
tag
_13
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_14
)
tag
_13
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
tag
_15
jump
(
tag
_16
)
tag
_15
stop
tag
_4
callvalue
dup1
iszero
tag
_17
jumpi
0x0
dup1
revert
tag
_17
pop
tag
_18
jump
(
tag
_19
)
tag
_18
stop
tag
_5
callvalue
dup1
iszero
tag
_20
jumpi
0x0
dup1
revert
tag
_20
pop
tag
_21
jump
(
tag
_22
)
tag
_21
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_6
callvalue
dup1
iszero
tag
_23
jumpi
0x0
dup1
revert
tag
_23
pop
tag
_24
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_25
)
tag
_24
stop
tag
_7
callvalue
dup1
iszero
tag
_26
jumpi
0x0
dup1
revert
tag
_26
pop
tag
_27
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_28
)
tag
_27
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_8
callvalue
dup1
iszero
tag
_29
jumpi
0x0
dup1
revert
tag
_29
pop
tag
_30
jump
(
tag
_31
)
tag
_30
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_9
callvalue
dup1
iszero
tag
_32
jumpi
0x0
dup1
revert
tag
_32
pop
tag
_33
jump
(
tag
_34
)
tag
_33
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_14
0x1
dup2
dup2
sload
dup2
lt
iszero
iszero
tag
_35
jumpi
invalid
tag
_35
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap2
pop
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_16
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_38
jumpi
0x0
dup1
revert
tag
_38
tag
_39
callvalue
0x4
tag
_40
jump	tag
_39
0x4
dup2
swap1
sstore
pop
0x2
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
sload
(
0x4
)
0xc3500
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
pop
0x2
0x0
0x1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
sload
(
0x4
)
0xc3500
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
pop
0x2
0x0
0x2
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
sload
(
0x4
)
0xc3500
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
pop
0x2
0x0
0x3
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
sload
(
0x4
)
0xc3500
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
pop
jump	
tag
_19
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_42
jumpi
0x0
dup1
revert
tag
_42
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0x8fc
address
0xffffffffffffffffffffffffffffffffffffffff
and
balance
swap1
dup2
iszero
mul
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
iszero
dup1
iszero
tag
_43
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_43
pop
jump	
tag
_22
0x0
0x1
dup1
sload
swap1
pop
swap1
pop
swap1
jump	
tag
_25
0x0
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
iszero
tag
_46
jumpi
0x0
dup1
revert
tag
_46
dup1
0x2
0x0
dup5
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
pop
pop
jump	
tag
_28
mstore
(
0x20
 0x2
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_31
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_34
0x0
dup1
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_48
jumpi
0x0
dup1
revert
tag
_48
tag
_49
jump	tag
_49
mload
(
0x40
)
dup1
swap2
sub
swap1
0x0
create
dup1
iszero
dup1
iszero
tag
_51
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_51
pop
swap1
pop
0x1
dup2
swap1
dup1
0x1
dup2
sload
add
dup1
dup3
sstore
dup1
swap2
pop
pop
swap1
0x1
dup3
sub
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap1
swap2
swap3
swap1
swap2
swap1
swap2
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
pop
dup1
swap2
pop
pop
swap1
jump	
tag
_40
0x0
dup2
dup4
dup2
iszero
iszero
tag
_54
jumpi
invalid
tag
_54
div
swap1
pop
swap3
swap2
pop
pop
jump	
tag
_50
mload
(
0x40
)
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
dup4
codecopy
add
swap1
jump	stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
0x509cb8cb2f8ba04ae81eec394175707edd37e109
0x0
dup1
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
0x5c035bb4cb7dacbfee076a5e61aa39a10da2e956
0x1
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x35898c89
eq
tag
_2
jumpi
dup1
0x3ccfd60b
eq
tag
_3
jumpi
dup1
0x9811c7c1
eq
tag
_4
jumpi
tag
_1
0x0
dup1
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_7
jumpi
0x0
dup1
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
callvalue
0x927c0
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
pop
tag
_7
stop
tag
_2
callvalue
dup1
iszero
tag
_8
jumpi
0x0
dup1
revert
tag
_8
pop
tag
_9
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_10
)
tag
_9
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
pop
tag
_12
jump
(
tag
_13
)
tag
_12
stop
tag
_4
callvalue
dup1
iszero
tag
_14
jumpi
0x0
dup1
revert
tag
_14
pop
tag
_15
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_16
)
tag
_15
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_10
mstore
(
0x20
 0x1
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_13
0x1
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_18
jumpi
0x0
dup1
revert
tag
_18
0x1
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0x8fc
address
0xffffffffffffffffffffffffffffffffffffffff
and
balance
swap1
dup2
iszero
mul
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
iszero
dup1
iszero
tag
_19
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_19
pop
jump	
tag
_16
mstore
(
0x20
 0x0
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
}
}
}
sub_1
assembly
{
mstore
(
0x40
 0x80
)
0x509cb8cb2f8ba04ae81eec394175707edd37e109
0x0
dup1
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
0x5c035bb4cb7dacbfee076a5e61aa39a10da2e956
0x1
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x35898c89
eq
tag
_2
jumpi
dup1
0x3ccfd60b
eq
tag
_3
jumpi
dup1
0x9811c7c1
eq
tag
_4
jumpi
tag
_1
0x0
dup1
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_7
jumpi
0x0
dup1
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
callvalue
0x927c0
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
pop
tag
_7
stop
tag
_2
callvalue
dup1
iszero
tag
_8
jumpi
0x0
dup1
revert
tag
_8
pop
tag
_9
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_10
)
tag
_9
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
pop
tag
_12
jump
(
tag
_13
)
tag
_12
stop
tag
_4
callvalue
dup1
iszero
tag
_14
jumpi
0x0
dup1
revert
tag
_14
pop
tag
_15
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_16
)
tag
_15
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_10
mstore
(
0x20
 0x1
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_13
0x1
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_18
jumpi
0x0
dup1
revert
tag
_18
0x1
0x0
dup1
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0x8fc
address
0xffffffffffffffffffffffffffffffffffffffff
and
balance
swap1
dup2
iszero
mul
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
iszero
dup1
iszero
tag
_19
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_19
pop
jump	
tag
_16
mstore
(
0x20
 0x0
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
}
}
