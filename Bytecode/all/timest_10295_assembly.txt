
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xb39e1c6c
eq
tag
_2
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_3
jumpi
0x0
dup1
revert
tag
_3
pop
tag
_4
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_5
)
tag
_4
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
0x0
dup1
0x0
dup1
0x0
dup1
0x0
dup8
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
swap4
pop
dup4
0x2
add
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x1
add
swap3
pop
0x1
dup4
0x0
add
0x2
add
sload
dup5
0x0
add
0x1
add
sload
dup2
iszero
iszero
tag
_7
jumpi
invalid
tag
_7
div
timestamp
sub
add
swap2
pop
dup3
0x0
add
0x0
add
sload
dup4
0x3
add
sload
mul
dup3
sub
swap1
pop
dup1
swap5
pop
pop
pop
pop
pop
swap2
swap1
pop
jump	
}
