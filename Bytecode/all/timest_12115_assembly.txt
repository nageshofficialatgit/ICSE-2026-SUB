
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xbb6224df
eq
tag
_2
jumpi
tag
_1
0x0
dup1
revert
tag
_2
tag
_3
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_4
)
tag
_3
stop
tag
_4
dup1
0xffffffff
and
timestamp
lt
iszero
iszero
tag
_6
jumpi
mload
(
0x40
)
0x8c379a000000000000000000000000000000000000000000000000000000000
dup2
mstore
0x4
add
dup1
dup1
0x20
add
dup3
dup2
sub
dup3
mstore
0x15
dup2
mstore
0x20
add
dup1
0x5369676e61747572652068617320657870697265640000000000000000000000
dup2
mstore
pop
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
revert
tag
_6
pop
jump	
}
