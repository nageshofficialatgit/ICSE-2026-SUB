
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x36b77107
eq
tag
_2
jumpi
dup1
0xbbd4e8c9
eq
tag
_3
jumpi
dup1
0xd0e30db0
eq
tag
_4
jumpi
dup1
0xd18a5563
eq
tag
_5
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_6
jumpi
0x0
dup1
revert
tag
_6
pop
tag
_7
jump
(
tag
_8
)
tag
_7
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_9
jumpi
0x0
dup1
revert
tag
_9
pop
tag
_10
jump
(
tag
_11
)
tag
_10
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
tag
_12
jump
(
tag
_13
)
tag
_12
stop
tag
_5
callvalue
dup1
iszero
tag
_14
jumpi
0x0
dup1
revert
tag
_14
pop
tag
_15
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_16
)
tag
_15
mload
(
0x40
)
dup1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
dup3
dup2
mstore
0x20
add
swap3
pop
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_8
sload
(
0x0
)
dup2
jump	
tag
_11
sload
(
0x1
)
dup2
jump	
tag
_13
0x0
callvalue
gt
iszero
iszero
tag
_18
jumpi
0x0
dup1
revert
tag
_18
timestamp
0x0
dup2
swap1
sstore
pop
0x40
dup1
mload
swap1
dup2
add
0x40
mstore
dup1
caller
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
callvalue
dup2
mstore
pop
0x2
0x0
sload
(
0x1
)
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup3
add
mload
dup2
0x0
add
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
0x20
dup3
add
mload
dup2
0x1
add
sstore
swap1
pop
pop
jump	
tag
_16
mstore
(
0x20
 0x2
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
dup1
0x0
add
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
dup1
0x1
add
sload
swap1
pop
dup3
jump	
}
