
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x2e48f65d
eq
tag
_2
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_3
jumpi
0x0
dup1
revert
tag
_3
pop
tag
_4
jump
(
tag
_5
)
tag
_4
stop
tag
_5
0x0
dup1
0x0
dup1
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
swap3
pop
dup3
0x1
add
sload
timestamp
sub
swap2
pop
0x112480
swap1
pop
0x0
dup2
gt
iszero
tag
_7
jumpi
dup2
dup2
mul
swap1
pop
tag
_7
pop
pop
pop
jump	
}
