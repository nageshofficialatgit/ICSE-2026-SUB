
mstore
(
0x40
 0x60
)
mload
(
0x40
)
0x20
dup1
bytecodeSize
dup4
codecopy
dup2
add
0x40
mstore
dup1
dup1
mload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
0xde0b6b3a7640000
callvalue
eq
iszero
iszero
tag
_3
jumpi
0x0
dup1
revert
tag
_3
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x70a08231
eq
tag
_2
jumpi
dup1
0xb2fa1c9e
eq
tag
_3
jumpi
dup1
0xd96a094a
eq
tag
_4
jumpi
dup1
0xe4849b32
eq
tag
_5
jumpi
tag
_1
0x0
dup1
revert
tag
_2
jumpi
(
tag
_6
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_6
tag
_7
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_8
)
tag
_7
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
jumpi
(
tag
_9
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_9
tag
_10
jump
(
tag
_11
)
tag
_10
mload
(
0x40
)
dup1
dup3
iszero
iszero
iszero
iszero
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
tag
_12
0x4
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_13
)
tag
_12
stop
tag
_5
jumpi
(
tag
_14
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_14
tag
_15
0x4
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_16
)
tag
_15
stop
tag
_8
mstore
(
0x20
 0x0
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_11
0x0
0xde0b6b3a7640000
address
0xffffffffffffffffffffffffffffffffffffffff
and
balance
lt
swap1
pop
swap1
jump	
tag
_13
0xde0b6b3a7640000
dup2
mul
callvalue
eq
iszero
iszero
tag
_19
jumpi
0x0
dup1
revert
tag
_19
dup1
0x0
dup1
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup3
dup3
sload
add
swap3
pop
pop
dup2
swap1
sstore
pop
pop
jump	
tag
_16
dup1
0x0
dup1
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
lt
iszero
iszero
iszero
tag
_21
jumpi
0x0
dup1
revert
tag
_21
dup1
0x0
dup1
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup3
dup3
sload
sub
swap3
pop
pop
dup2
swap1
sstore
pop
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x8fc
0xde0b6b3a7640000
dup4
mul
swap1
dup2
iszero
mul
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
iszero
iszero
tag
_22
jumpi
0x0
dup1
revert
tag
_22
pop
jump	
}
