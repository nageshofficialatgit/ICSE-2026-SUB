
mstore
(
0x40
 0x80
)
0x3c26700
0x0
sstore
0x8
0x1
sstore
0x0
0x2
sstore
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x38dacaab
eq
tag
_2
jumpi
dup1
0x7ae2aa34
eq
tag
_3
jumpi
dup1
0x7b777517
eq
tag
_4
jumpi
dup1
0xb2163482
eq
tag
_5
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_6
jumpi
0x0
dup1
revert
tag
_6
pop
tag
_7
jump
(
tag
_8
)
tag
_7
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_9
jumpi
0x0
dup1
revert
tag
_9
pop
tag
_10
jump
(
tag
_11
)
tag
_10
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_12
jumpi
0x0
dup1
revert
tag
_12
pop
tag
_13
jump
(
tag
_14
)
tag
_13
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
callvalue
dup1
iszero
tag
_15
jumpi
0x0
dup1
revert
tag
_15
pop
tag
_16
jump
(
tag
_17
)
tag
_16
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_8
sload
(
0x0
)
dup2
jump	
tag
_11
0x0
dup1
0x0
sload
(
0x1
)
sload
(
0x0
)
dup2
iszero
iszero
tag
_19
jumpi
invalid
tag
_19
div
swap2
pop
dup2
sload
(
0x2
)
timestamp
sub
dup2
iszero
iszero
tag
_20
jumpi
invalid
tag
_20
div
swap1
pop
sload
(
0x1
)
dup2
gt
iszero
tag
_21
jumpi
sload
(
0x1
)
swap1
pop
tag
_21
dup1
swap3
pop
pop
pop
swap1
jump	
tag
_14
sload
(
0x1
)
dup2
jump	
tag
_17
sload
(
0x2
)
dup2
jump	
}
