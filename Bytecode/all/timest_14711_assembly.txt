
mstore
(
0x40
 0x80
)
0xa8c00
0x3
sstore
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x479f8d33
eq
tag
_2
jumpi
dup1
0x4fd7718b
eq
tag
_3
jumpi
dup1
0x64009184
eq
tag
_4
jumpi
dup1
0x78e97925
eq
tag
_5
jumpi
dup1
0xf5af6de6
eq
tag
_6
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
pop
tag
_8
jump
(
tag
_9
)
tag
_8
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_10
jumpi
0x0
dup1
revert
tag
_10
pop
tag
_11
jump
(
tag
_12
)
tag
_11
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_13
jumpi
0x0
dup1
revert
tag
_13
pop
tag
_14
jump
(
tag
_15
)
tag
_14
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
callvalue
dup1
iszero
tag
_16
jumpi
0x0
dup1
revert
tag
_16
pop
tag
_17
jump
(
tag
_18
)
tag
_17
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_6
callvalue
dup1
iszero
tag
_19
jumpi
0x0
dup1
revert
tag
_19
pop
tag
_20
jump
(
tag
_21
)
tag
_20
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_9
0x2a30
dup2
jump	
tag
_12
sload
(
0x3
)
dup2
jump	
tag
_15
sload
(
0x1
)
dup2
jump	
tag
_18
sload
(
0x0
)
dup2
jump	
tag
_21
sload
(
0x2
)
dup2
jump	
}
