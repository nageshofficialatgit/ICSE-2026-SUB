
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x23b872dd
eq
tag
_2
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_3
jumpi
0x0
dup1
revert
tag
_3
pop
tag
_4
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_5
)
tag
_4
mload
(
0x40
)
dup1
dup3
iszero
iszero
iszero
iszero
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
0x0
dup1
timestamp
swap1
pop
0x1
0x0
dup7
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x40
dup1
mload
swap1
dup2
add
0x40
mstore
dup1
0x0
dup1
dup10
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
dup2
mstore
0x20
add
dup4
0xffffffffffffffff
and
dup2
mstore
pop
swap1
dup1
0x1
dup2
sload
add
dup1
dup3
sstore
dup1
swap2
pop
pop
swap1
0x1
dup3
sub
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
0x2
mul
add
0x0
swap1
swap2
swap3
swap1
swap2
swap1
swap2
pop
0x0
dup3
add
mload
dup2
0x0
add
sstore
0x20
dup3
add
mload
dup2
0x1
add
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffff
and
mul
or
swap1
sstore
pop
pop
pop
pop
0x1
0x0
dup6
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x40
dup1
mload
swap1
dup2
add
0x40
mstore
dup1
dup6
dup2
mstore
0x20
add
dup4
0xffffffffffffffff
and
dup2
mstore
pop
swap1
dup1
0x1
dup2
sload
add
dup1
dup3
sstore
dup1
swap2
pop
pop
swap1
0x1
dup3
sub
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
0x2
mul
add
0x0
swap1
swap2
swap3
swap1
swap2
swap1
swap2
pop
0x0
dup3
add
mload
dup2
0x0
add
sstore
0x20
dup3
add
mload
dup2
0x1
add
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffff
and
mul
or
swap1
sstore
pop
pop
pop
pop
0x1
swap2
pop
pop
swap4
swap3
pop
pop
pop
jump	
}
