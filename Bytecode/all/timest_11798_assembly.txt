
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x88279320
eq
tag
_2
jumpi
dup1
0x8da5cb5b
eq
tag
_3
jumpi
dup1
0xac0840db
eq
tag
_4
jumpi
dup1
0xe27e3fd3
eq
tag
_5
jumpi
dup1
0xf71d96cb
eq
tag
_6
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
pop
tag
_8
jump
(
tag
_9
)
tag
_8
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_10
jumpi
0x0
dup1
revert
tag
_10
pop
tag
_11
jump
(
tag
_12
)
tag
_11
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_13
jumpi
0x0
dup1
revert
tag
_13
pop
tag
_14
jump
(
tag
_15
)
tag
_14
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
callvalue
dup1
iszero
tag
_16
jumpi
0x0
dup1
revert
tag
_16
pop
tag
_17
jump
(
tag
_18
)
tag
_17
stop
tag
_6
callvalue
dup1
iszero
tag
_19
jumpi
0x0
dup1
revert
tag
_19
pop
tag
_20
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_21
)
tag
_20
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_9
sload
(
0x1
)
dup2
jump	
tag
_12
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_15
sload
(
0x2
)
dup2
jump	
tag
_18
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
caller
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_23
jumpi
0x0
dup1
revert
tag
_23
timestamp
0x2
dup2
swap1
sstore
pop
0x3
dup1
sload
swap1
pop
address
0xffffffffffffffffffffffffffffffffffffffff
and
balance
dup2
iszero
iszero
tag
_25
jumpi
invalid
tag
_25
div
0x1
dup2
swap1
sstore
pop
jump	
tag
_21
0x3
dup2
dup2
sload
dup2
lt
iszero
iszero
tag
_26
jumpi
invalid
tag
_26
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap2
pop
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
}
