
mstore
(
0x40
 0x80
)
0x2a300
0x2
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffff
and
mul
or
swap1
sstore
pop
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xcbf54c8
eq
tag
_2
jumpi
dup1
0x609e4427
eq
tag
_3
jumpi
dup1
0xf0f2805f
eq
tag
_4
jumpi
dup1
0xf16332db
eq
tag
_5
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_6
jumpi
0x0
dup1
revert
tag
_6
pop
tag
_7
jump
(
tag
_8
)
tag
_7
mload
(
0x40
)
dup1
dup3
0xffffffffffffffff
and
0xffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_9
jumpi
0x0
dup1
revert
tag
_9
pop
tag
_10
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_11
)
tag
_10
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_12
jumpi
0x0
dup1
revert
tag
_12
pop
tag
_13
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_14
)
tag
_13
mload
(
0x40
)
dup1
dup3
iszero
iszero
iszero
iszero
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
callvalue
dup1
iszero
tag
_15
jumpi
0x0
dup1
revert
tag
_15
pop
tag
_16
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_17
)
tag
_16
mload
(
0x40
)
dup1
dup5
0xffffffffffffffff
and
0xffffffffffffffff
and
dup2
mstore
0x20
add
dup4
0xffffffffffffffff
and
0xffffffffffffffff
and
dup2
mstore
0x20
add
dup3
0xffffffffffffffff
and
0xffffffffffffffff
and
dup2
mstore
0x20
add
swap4
pop
pop
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_8
0x2
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffff
and
dup2
jump	
tag
_11
mstore
(
0x20
 0x1
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
tag
_14
0x0
dup1
0x0
dup1
0x1
0x0
dup7
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
swap3
pop
0x0
dup4
gt
iszero
tag
_19
jumpi
0x0
dup4
dup2
sload
dup2
lt
iszero
iszero
tag
_20
jumpi
invalid
tag
_20
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
swap2
pop
timestamp
swap1
pop
dup1
0xffffffffffffffff
and
0x2
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffff
and
dup4
0x0
add
0x8
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffff
and
add
0xffffffffffffffff
and
gt
dup1
iszero
tag
_22
jumpi
pop
0x0
dup3
0x0
add
0x10
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffff
and
0xffffffffffffffff
and
eq
tag
_22
iszero
tag
_23
jumpi
0x1
swap4
pop
jump
(
tag
_18
)
tag
_23
tag
_19
0x0
swap4
pop
tag
_18
pop
pop
pop
swap2
swap1
pop
jump	
tag
_17
0x0
dup2
dup2
sload
dup2
lt
iszero
iszero
tag
_24
jumpi
invalid
tag
_24
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
add
0x0
swap2
pop
swap1
pop
dup1
0x0
add
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffff
and
swap1
dup1
0x0
add
0x8
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffff
and
swap1
dup1
0x0
add
0x10
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffff
and
swap1
pop
dup4
jump	
}
