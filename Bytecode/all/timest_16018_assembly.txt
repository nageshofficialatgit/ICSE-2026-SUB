
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xa5d1c0c0
eq
tag
_2
jumpi
tag
_1
0x5a497a00
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffff
and
0xffffffffffffffff
and
gt
iszero
tag
_5
jumpi
timestamp
0x12c
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffff
and
sub
0xffffffffffffffff
and
gt
iszero
iszero
tag
_6
jumpi
0x0
dup1
revert
tag
_6
tag
_5
stop
tag
_2
callvalue
dup1
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
pop
tag
_8
jump
(
tag
_9
)
tag
_8
mload
(
0x40
)
dup1
dup3
0xffffffffffffffff
and
0xffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_9
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffff
and
dup2
jump	
}
