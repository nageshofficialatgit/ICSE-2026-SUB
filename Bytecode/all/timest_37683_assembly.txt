
mstore
(
0x40
 0x80
)
0x0
0x2
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xff
mul
not
and
swap1
dup4
iszero
iszero
mul
or
swap1
sstore
pop
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x27dc297e
eq
tag
_2
jumpi
dup1
0x7b294495
eq
tag
_3
jumpi
dup1
0x838c29b6
eq
tag
_4
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_5
jumpi
0x0
dup1
revert
tag
_5
pop
tag
_6
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
not
(
0x0
)
and
swap1
0x20
add
swap1
swap3
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
dup3
add
dup1
calldataload
swap1
0x20
add
swap1
dup1
dup1
0x1f
add
0x20
dup1
swap2
div
mul
0x20
add
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
swap4
swap3
swap2
swap1
dup2
dup2
mstore
0x20
add
dup4
dup4
dup1
dup3
dup5
calldatacopy
dup3
add
swap2
pop
pop
pop
pop
pop
pop
swap2
swap3
swap2
swap3
swap1
pop
pop
pop
jump
(
tag
_7
)
tag
_6
stop
tag
_3
callvalue
dup1
iszero
tag
_8
jumpi
0x0
dup1
revert
tag
_8
pop
tag
_9
jump
(
tag
_10
)
tag
_9
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
pop
tag
_12
jump
(
tag
_13
)
tag
_12
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_7
0x0
dup2
mload
eq
iszero
tag
_15
jumpi
sload
(
0x0
)
sload
(
0x1
)
timestamp
sub
lt
iszero
0x2
0x0
0x100
exp
dup2
sload
dup2
0xff
mul
not
and
swap1
dup4
iszero
iszero
mul
or
swap1
sstore
pop
tag
_15
0x2
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xff
and
iszero
tag
_16
jumpi
0x8658e1bb941ad8e5f183167e2aec249ae69d637722fd0a14461f27e4bba19a66
0x1
mload
(
0x40
)
dup1
dup3
iszero
iszero
iszero
iszero
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
log1
tag
_16
pop
pop
jump	
tag
_10
sload
(
0x1
)
dup2
jump	
tag
_13
sload
(
0x0
)
dup2
jump	
}
