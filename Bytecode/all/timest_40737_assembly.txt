
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x1b6d3934
eq
tag
_2
jumpi
dup1
0x32df0560
eq
tag
_3
jumpi
dup1
0x77098290
eq
tag
_4
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_5
jumpi
0x0
dup1
revert
tag
_5
pop
tag
_6
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_7
)
tag
_6
mload
(
0x40
)
dup1
dup3
iszero
iszero
iszero
iszero
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_8
jumpi
0x0
dup1
revert
tag
_8
pop
tag
_9
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_10
)
tag
_9
mload
(
0x40
)
dup1
dup3
not
(
0x0
)
and
not
(
0x0
)
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
pop
tag
_12
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_13
)
tag
_12
mload
(
0x40
)
dup1
dup3
not
(
0x0
)
and
not
(
0x0
)
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_7
0x0
dup1
0x0
dup1
0x0
dup1
0x0
dup1
0x0
dup12
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
0x1
swap1
div
swap6
pop
0x0
swap5
pop
tag
_15
0x0
dup6
eq
dup1
tag
_18
jumpi
pop
0x0
dup6
dup8
swap1
0x2
exp
swap1
div
gt
tag
_18
iszero
tag
_16
jumpi
0x0
0x1
dup7
dup9
swap1
0x2
exp
swap1
div
and
gt
swap4
pop
dup4
iszero
tag
_19
jumpi
0x1
0x0
dup7
0xff
and
0xff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup11
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
0x1
swap1
div
swap3
pop
0xffffffffffffffff
dup4
and
swap2
pop
dup2
0x0
lt
dup1
iszero
tag
_20
jumpi
pop
timestamp
dup3
gt
iszero
tag
_20
iszero
tag
_21
jumpi
0x40
dup4
swap1
0x2
exp
swap1
div
swap1
pop
0x1
swap7
pop
jump
(
tag
_14
)
tag
_21
tag
_19
dup5
dup1
0x1
add
swap6
pop
pop
jump
(
tag
_15
)
tag
_16
0x0
swap7
pop
tag
_14
pop
pop
pop
pop
pop
pop
swap4
swap3
pop
pop
pop
jump	
tag
_10
mstore
(
0x20
 0x1
)
dup2
0x0
mstore
mstore
(
0x20
 keccak256
(
0x0
 0x40
)
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap2
pop
pop
sload
dup2
jump	
tag
_13
mstore
(
0x20
 0x0
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
}
