
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
0x0
dup1
0x0
dup1
0x45
callvalue
lt
iszero
iszero
tag
_4
jumpi
timestamp
swap4
pop
coinbase
0xffffffffffffffffffffffffffffffffffffffff
and
swap3
pop
dup3
dup5
add
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
keccak256
0x1
swap1
div
swap2
pop
0x0
dup1
dup4
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
pop
dup1
0xffffffffffffffffffffffffffffffffffffffff
and
0x8fc
0x45
swap1
dup2
iszero
mul
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
iszero
dup1
iszero
tag
_5
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_5
pop
tag
_4
pop
pop
pop
pop
stop
}
