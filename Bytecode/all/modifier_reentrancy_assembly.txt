
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x4d5f327c
eq
tag
_2
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_3
jumpi
0x0
dup1
revert
tag
_3
pop
tag
_4
jump
(
tag
_5
)
tag
_4
mload
(
0x40
)
dup1
dup3
not
(
0x0
)
and
not
(
0x0
)
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
0x0
add
(
0x20
 mload
(
0x40
)
)
dup1
dup1
0x4e7520546f6b656e000000000000000000000000000000000000000000000000
dup2
mstore
pop
0x8
add
swap1
pop
mload
(
0x40
)
0x20
dup2
dup4
sub
sub
dup2
mstore
swap1
0x40
mstore
mload
(
0x40
)
dup1
dup3
dup1
mload
swap1
0x20
add
swap1
dup1
dup4
dup4
tag
_7
0x20
dup4
lt
iszero
iszero
tag
_8
jumpi
dup1
mload
dup3
mstore
0x20
dup3
add
swap2
pop
0x20
dup2
add
swap1
pop
0x20
dup4
sub
swap3
pop
jump
(
tag
_7
)
tag
_8
0x1
dup4
0x20
sub
0x100
exp
sub
dup1
not
dup3
mload
and
dup2
dup5
mload
and
dup1
dup3
or
dup6
mstore
pop
pop
pop
pop
pop
pop
swap1
pop
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
keccak256
swap1
pop
swap1
jump	
}
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xca5d0880
eq
tag
_2
jumpi
dup1
0xeedc966a
eq
tag
_3
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_4
jumpi
0x0
dup1
revert
tag
_4
pop
tag
_5
jump
(
tag
_6
)
tag
_5
stop
tag
_3
callvalue
dup1
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
pop
tag
_8
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_9
)
tag
_8
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_6
0x0
dup1
0x0
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
sload
eq
iszero
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x4d5f327c
mload
(
0x40
)
dup2
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
0x20
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup8
dup1
extcodesize
iszero
dup1
iszero
tag
_13
jumpi
0x0
dup1
revert
tag
_13
pop
gas
call
iszero
dup1
iszero
tag
_14
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_14
pop
pop
pop
pop
mload
(
0x40
)
returndatasize
0x20
dup2
lt
iszero
tag
_15
jumpi
0x0
dup1
revert
tag
_15
dup2
add
swap1
dup1
dup1
mload
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
not
(
0x0
)
and
add
(
0x20
 mload
(
0x40
)
)
dup1
dup1
0x4e7520546f6b656e000000000000000000000000000000000000000000000000
dup2
mstore
pop
0x8
add
swap1
pop
mload
(
0x40
)
0x20
dup2
dup4
sub
sub
dup2
mstore
swap1
0x40
mstore
mload
(
0x40
)
dup1
dup3
dup1
mload
swap1
0x20
add
swap1
dup1
dup4
dup4
tag
_16
0x20
dup4
lt
iszero
iszero
tag
_17
jumpi
dup1
mload
dup3
mstore
0x20
dup3
add
swap2
pop
0x20
dup2
add
swap1
pop
0x20
dup4
sub
swap3
pop
jump
(
tag
_16
)
tag
_17
0x1
dup4
0x20
sub
0x100
exp
sub
dup1
not
dup3
mload
and
dup2
dup5
mload
and
dup1
dup3
or
dup6
mstore
pop
pop
pop
pop
pop
pop
swap1
pop
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
keccak256
not
(
0x0
)
and
eq
iszero
iszero
tag
_19
jumpi
0x0
dup1
revert
tag
_19
0x14
0x0
dup1
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup3
dup3
sload
add
swap3
pop
pop
dup2
swap1
sstore
pop
jump	
tag
_9
mstore
(
0x20
 0x0
)
dup1
0x0
mstore
keccak256
(
0x0
 0x40
)
0x0
swap2
pop
swap1
pop
sload
dup2
jump	
}
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x4d5f327c
eq
tag
_2
jumpi
dup1
0xf55332ab
eq
tag
_3
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_4
jumpi
0x0
dup1
revert
tag
_4
pop
tag
_5
jump
(
tag
_6
)
tag
_5
mload
(
0x40
)
dup1
dup3
not
(
0x0
)
and
not
(
0x0
)
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
pop
tag
_8
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_9
)
tag
_8
stop
tag
_6
0x0
dup1
0x0
swap1
sload
swap1
0x100
exp
swap1
div
0xff
and
iszero
iszero
tag
_11
jumpi
0x1
0x0
dup1
0x100
exp
dup2
sload
dup2
0xff
mul
not
and
swap1
dup4
iszero
iszero
mul
or
swap1
sstore
pop
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0xca5d0880
mload
(
0x40
)
dup2
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup8
dup1
extcodesize
iszero
dup1
iszero
tag
_12
jumpi
0x0
dup1
revert
tag
_12
pop
gas
call
iszero
dup1
iszero
tag
_13
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_13
pop
pop
pop
pop
tag
_11
add
(
0x20
 mload
(
0x40
)
)
dup1
dup1
0x4e7520546f6b656e000000000000000000000000000000000000000000000000
dup2
mstore
pop
0x8
add
swap1
pop
mload
(
0x40
)
0x20
dup2
dup4
sub
sub
dup2
mstore
swap1
0x40
mstore
mload
(
0x40
)
dup1
dup3
dup1
mload
swap1
0x20
add
swap1
dup1
dup4
dup4
tag
_14
0x20
dup4
lt
iszero
iszero
tag
_15
jumpi
dup1
mload
dup3
mstore
0x20
dup3
add
swap2
pop
0x20
dup2
add
swap1
pop
0x20
dup4
sub
swap3
pop
jump
(
tag
_14
)
tag
_15
0x1
dup4
0x20
sub
0x100
exp
sub
dup1
not
dup3
mload
and
dup2
dup5
mload
and
dup1
dup3
or
dup6
mstore
pop
pop
pop
pop
pop
pop
swap1
pop
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
keccak256
swap1
pop
swap1
jump	
tag
_9
dup1
0xffffffffffffffffffffffffffffffffffffffff
and
0xca5d0880
mload
(
0x40
)
dup2
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup8
dup1
extcodesize
iszero
dup1
iszero
tag
_18
jumpi
0x0
dup1
revert
tag
_18
pop
gas
call
iszero
dup1
iszero
tag
_19
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_19
pop
pop
pop
pop
pop
jump	
}
