
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x5c19a95c
eq
tag
_2
jumpi
dup1
0x8da5cb5b
eq
tag
_3
jumpi
tag
_1
0x0
dup1
revert
tag
_2
tag
_4
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap3
swap2
swap1
pop
pop
pop
jump
(
tag
_5
)
tag
_4
stop
tag
_3
callvalue
dup1
iszero
tag
_6
jumpi
0x0
dup1
revert
tag
_6
pop
tag
_7
jump
(
tag
_8
)
tag
_7
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_5
caller
0xffffffffffffffffffffffffffffffffffffffff
and
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
eq
iszero
iszero
tag
_10
jumpi
0x0
dup1
revert
tag
_10
dup1
0xffffffffffffffffffffffffffffffffffffffff
and
0x0
calldatasize
mload
(
0x40
)
dup1
dup4
dup4
dup1
dup3
dup5
calldatacopy
dup3
add
swap2
pop
pop
swap3
pop
pop
pop
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
gas
delegatecall
swap2
pop
pop
iszero
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
pop
jump	
tag
_8
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
}
