
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_1
caller
0x0
dup1
0x100
exp
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x60
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x2570e31e
eq
tag
_2
jumpi
dup1
0x49df728c
eq
tag
_3
jumpi
dup1
0x7362377b
eq
tag
_4
jumpi
tag
_1
0x0
dup1
revert
tag
_2
jumpi
(
tag
_5
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_5
tag
_6
0x4
dup1
dup1
calldataload
swap1
0x20
add
swap1
swap2
swap1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_7
)
tag
_6
stop
tag
_3
jumpi
(
tag
_8
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_8
tag
_9
0x4
dup1
dup1
calldataload
0xffffffffffffffffffffffffffffffffffffffff
and
swap1
0x20
add
swap1
swap2
swap1
pop
pop
jump
(
tag
_10
)
tag
_9
stop
tag
_4
jumpi
(
tag
_11
 iszero
(
callvalue
)
)
0x0
dup1
revert
tag
_11
tag
_12
jump
(
tag
_13
)
tag
_12
stop
tag
_7
0x0
dup1
swap1
pop
tag
_15
dup3
dup2
lt
iszero
tag
_16
jumpi
dup2
0xffffffffffffffffffffffffffffffffffffffff
and
0x0
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup8
sub
(
gas
 0x8796
)
call
swap3
pop
pop
pop
pop
dup1
dup1
0x1
add
swap2
pop
pop
jump
(
tag
_15
)
tag
_16
pop
pop
pop
jump	
tag
_10
0x0
dup2
swap1
pop
dup1
0xffffffffffffffffffffffffffffffffffffffff
and
0xa9059cbb
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
0x70a08231
address
mstore
(
add
(
0x20
 mload
(
0x40
)
)
 0x0
)
mload
(
0x40
)
dup3
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
0x20
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup8
dup1
extcodesize
iszero
iszero
tag
_19
jumpi
0x0
dup1
revert
tag
_19
sub
(
gas
 0x2c6
)
call
iszero
iszero
tag
_20
jumpi
0x0
dup1
revert
tag
_20
pop
pop
pop
mload
(
0x40
)
dup1
mload
swap1
pop
mstore
(
add
(
0x20
 mload
(
0x40
)
)
 0x0
)
mload
(
0x40
)
dup4
0xffffffff
and
0x100000000000000000000000000000000000000000000000000000000
mul
dup2
mstore
0x4
add
dup1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
dup3
dup2
mstore
0x20
add
swap3
pop
pop
pop
0x20
mload
(
0x40
)
dup1
dup4
sub
dup2
0x0
dup8
dup1
extcodesize
iszero
iszero
tag
_21
jumpi
0x0
dup1
revert
tag
_21
sub
(
gas
 0x2c6
)
call
iszero
iszero
tag
_22
jumpi
0x0
dup1
revert
tag
_22
pop
pop
pop
mload
(
0x40
)
dup1
mload
swap1
pop
pop
pop
pop
jump	
tag
_13
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0x8fc
address
0xffffffffffffffffffffffffffffffffffffffff
and
balance
swap1
dup2
iszero
mul
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
iszero
iszero
tag
_24
jumpi
0x0
dup1
revert
tag
_24
jump	
}
