
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x5fed2091
eq
tag
_2
jumpi
dup1
0x8da5cb5b
eq
tag
_3
jumpi
dup1
0xa035b1fe
eq
tag
_4
jumpi
tag
_1
0x0
dup1
revert
tag
_2
tag
_5
0x4
dup1
calldatasize
sub
dup2
add
swap1
dup1
dup1
calldataload
not
(
0x0
)
and
swap1
0x20
add
swap1
swap3
swap2
swap1
dup1
calldataload
swap1
0x20
add
swap1
dup3
add
dup1
calldataload
swap1
0x20
add
swap1
dup1
dup1
0x1f
add
0x20
dup1
swap2
div
mul
0x20
add
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
swap4
swap3
swap2
swap1
dup2
dup2
mstore
0x20
add
dup4
dup4
dup1
dup3
dup5
calldatacopy
dup3
add
swap2
pop
pop
pop
pop
pop
pop
swap2
swap3
swap2
swap3
swap1
dup1
calldataload
swap1
0x20
add
swap1
dup3
add
dup1
calldataload
swap1
0x20
add
swap1
dup1
dup1
0x1f
add
0x20
dup1
swap2
div
mul
0x20
add
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
swap4
swap3
swap2
swap1
dup2
dup2
mstore
0x20
add
dup4
dup4
dup1
dup3
dup5
calldatacopy
dup3
add
swap2
pop
pop
pop
pop
pop
pop
swap2
swap3
swap2
swap3
swap1
pop
pop
pop
jump
(
tag
_6
)
tag
_5
stop
tag
_3
callvalue
dup1
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
pop
tag
_8
jump
(
tag
_9
)
tag
_8
mload
(
0x40
)
dup1
dup3
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_4
callvalue
dup1
iszero
tag
_10
jumpi
0x0
dup1
revert
tag
_10
pop
tag
_11
jump
(
tag
_12
)
tag
_11
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_6
sload
(
0x2
)
callvalue
lt
iszero
iszero
iszero
tag
_14
jumpi
0x0
dup1
revert
tag
_14
0xa0
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
caller
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
mstore
0x20
add
number
dup2
mstore
0x20
add
timestamp
dup2
mstore
0x20
add
dup4
dup2
mstore
0x20
add
dup3
dup2
mstore
pop
0x1
0x0
dup6
not
(
0x0
)
and
not
(
0x0
)
and
dup2
mstore
0x20
add
swap1
dup2
mstore
0x20
add
0x0
keccak256
0x0
dup3
add
mload
dup2
0x0
add
exp
(
0x100
 0x0
)
dup2
sload
dup2
0xffffffffffffffffffffffffffffffffffffffff
mul
not
and
swap1
dup4
0xffffffffffffffffffffffffffffffffffffffff
and
mul
or
swap1
sstore
pop
0x20
dup3
add
mload
dup2
0x1
add
sstore
0x40
dup3
add
mload
dup2
0x2
add
sstore
0x60
dup3
add
mload
dup2
0x3
add
swap1
dup1
mload
swap1
0x20
add
swap1
tag
_15
swap3
swap2
swap1
jump	tag
_15
pop
0x80
dup3
add
mload
dup2
0x4
add
swap1
dup1
mload
swap1
0x20
add
swap1
tag
_17
swap3
swap2
swap1
jump	tag
_17
pop
swap1
pop
pop
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
0xffffffffffffffffffffffffffffffffffffffff
and
0x8fc
sload
(
0x2
)
swap1
dup2
iszero
mul
swap1
mload
(
0x40
)
0x0
mload
(
0x40
)
dup1
dup4
sub
dup2
dup6
dup9
dup9
call
swap4
pop
pop
pop
pop
iszero
dup1
iszero
tag
_18
jumpi
returndatasize
0x0
dup1
returndatacopy
returndatasize
0x0
revert
tag
_18
pop
pop
pop
pop
jump	
tag
_9
0x0
dup1
swap1
sload
swap1
0x100
exp
swap1
div
0xffffffffffffffffffffffffffffffffffffffff
and
dup2
jump	
tag
_12
sload
(
0x2
)
dup2
jump	
tag
_16
dup3
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
0x1f
add
0x20
swap1
div
dup2
add
swap3
dup3
0x1f
lt
tag
_20
jumpi
dup1
mload
not
(
0xff
)
and
dup4
dup1
add
or
dup6
sstore
jump
(
tag
_19
)
tag
_20
dup3
dup1
add
0x1
add
dup6
sstore
dup3
iszero
tag
_19
jumpi
swap2
dup3
add
tag
_21
dup3
dup2
gt
iszero
tag
_22
jumpi
dup3
mload
dup3
sstore
swap2
0x20
add
swap2
swap1
0x1
add
swap1
jump
(
tag
_21
)
tag
_22
tag
_19
pop
swap1
pop
tag
_23
swap2
swap1
jump	tag
_23
pop
swap1
jump	tag
_24
tag
_25
swap2
swap1
tag
_26
dup1
dup3
gt
iszero
tag
_27
jumpi
0x0
dup2
0x0
swap1
sstore
pop
0x1
add
jump
(
tag
_26
)
tag
_27
pop
swap1
jump
tag
_25
swap1
jump	
}
