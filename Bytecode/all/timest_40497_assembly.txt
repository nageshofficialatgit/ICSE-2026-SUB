
mstore
(
0x40
 0x80
)
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0x2930cf24
eq
tag
_2
jumpi
dup1
0xed18f0a7
eq
tag
_3
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_4
jumpi
0x0
dup1
revert
tag
_4
pop
tag
_5
jump
(
tag
_6
)
tag
_5
mload
(
0x40
)
dup1
dup1
0x20
add
dup5
dup2
mstore
0x20
add
dup4
dup2
mstore
0x20
add
dup3
dup2
sub
dup3
mstore
dup6
dup2
dup2
mload
dup2
mstore
0x20
add
swap2
pop
dup1
mload
swap1
0x20
add
swap1
dup1
dup4
dup4
0x0
tag
_7
dup4
dup2
lt
iszero
tag
_8
jumpi
dup1
dup3
add
mload
dup2
dup5
add
mstore
0x20
dup2
add
swap1
pop
jump
(
tag
_7
)
tag
_8
pop
pop
pop
pop
swap1
pop
swap1
dup2
add
swap1
0x1f
and
dup1
iszero
tag
_10
jumpi
dup1
dup3
sub
dup1
mload
0x1
dup4
0x20
sub
0x100
exp
sub
not
and
dup2
mstore
0x20
add
swap2
pop
tag
_10
pop
swap5
pop
pop
pop
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_3
callvalue
dup1
iszero
tag
_11
jumpi
0x0
dup1
revert
tag
_11
pop
tag
_12
jump
(
tag
_13
)
tag
_12
mload
(
0x40
)
dup1
dup1
0x20
add
dup5
dup2
mstore
0x20
add
dup4
dup2
mstore
0x20
add
dup3
dup2
sub
dup3
mstore
dup6
dup2
dup2
mload
dup2
mstore
0x20
add
swap2
pop
dup1
mload
swap1
0x20
add
swap1
dup1
dup4
dup4
0x0
tag
_14
dup4
dup2
lt
iszero
tag
_15
jumpi
dup1
dup3
add
mload
dup2
dup5
add
mstore
0x20
dup2
add
swap1
pop
jump
(
tag
_14
)
tag
_15
pop
pop
pop
pop
swap1
pop
swap1
dup2
add
swap1
0x1f
and
dup1
iszero
tag
_17
jumpi
dup1
dup3
sub
dup1
mload
0x1
dup4
0x20
sub
0x100
exp
sub
not
and
dup2
mstore
0x20
add
swap2
pop
tag
_17
pop
swap5
pop
pop
pop
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_6
0x0
dup1
0x0
add
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
dup1
0x1f
add
0x20
dup1
swap2
div
mul
0x20
add
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
swap3
swap2
swap1
dup2
dup2
mstore
0x20
add
dup3
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
dup1
iszero
tag
_18
jumpi
dup1
0x1f
lt
tag
_19
jumpi
0x100
dup1
dup4
sload
div
mul
dup4
mstore
swap2
0x20
add
swap2
jump
(
tag
_18
)
tag
_19
dup3
add
swap2
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
tag
_20
dup2
sload
dup2
mstore
swap1
0x1
add
swap1
0x20
add
dup1
dup4
gt
tag
_20
jumpi
dup3
swap1
sub
0x1f
and
dup3
add
swap2
tag
_18
pop
pop
pop
pop
pop
swap1
dup1
0x1
add
sload
swap1
dup1
0x3
add
sload
swap1
pop
dup4
jump	
tag
_13
0x4
dup1
0x0
add
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
dup1
0x1f
add
0x20
dup1
swap2
div
mul
0x20
add
mload
(
0x40
)
swap1
dup2
add
0x40
mstore
dup1
swap3
swap2
swap1
dup2
dup2
mstore
0x20
add
dup3
dup1
sload
0x1
dup2
0x1
and
iszero
0x100
mul
sub
and
0x2
swap1
div
dup1
iszero
tag
_21
jumpi
dup1
0x1f
lt
tag
_22
jumpi
0x100
dup1
dup4
sload
div
mul
dup4
mstore
swap2
0x20
add
swap2
jump
(
tag
_21
)
tag
_22
dup3
add
swap2
swap1
0x0
mstore
keccak256
(
0x0
 0x20
)
swap1
tag
_23
dup2
sload
dup2
mstore
swap1
0x1
add
swap1
0x20
add
dup1
dup4
gt
tag
_23
jumpi
dup3
swap1
sub
0x1f
and
dup3
add
swap2
tag
_21
pop
pop
pop
pop
pop
swap1
dup1
0x1
add
sload
swap1
dup1
0x3
add
sload
swap1
pop
dup4
jump	
}
