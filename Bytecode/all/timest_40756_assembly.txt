
mstore
(
0x40
 0x80
)
0xa
0x0
sstore
callvalue
dup1
iszero
tag
_1
jumpi
0x0
dup1
revert
tag
_1
pop
dataSize
(
sub_0
)
dup1
dataOffset
(
sub_0
)
0x0
codecopy
0x0
return
stop
sub_0
assembly
{
mstore
(
0x40
 0x80
)
jumpi
(
tag
_1
 lt
(
calldatasize
 0x4
)
)
calldataload
(
0x0
)
0x100000000000000000000000000000000000000000000000000000000
swap1
div
0xffffffff
and
dup1
0xbbccaf1
eq
tag
_2
jumpi
dup1
0x88577893
eq
tag
_3
jumpi
tag
_1
0x0
dup1
revert
tag
_2
callvalue
dup1
iszero
tag
_4
jumpi
0x0
dup1
revert
tag
_4
pop
tag
_5
jump
(
tag
_6
)
tag
_5
stop
tag
_3
callvalue
dup1
iszero
tag
_7
jumpi
0x0
dup1
revert
tag
_7
pop
tag
_8
jump
(
tag
_9
)
tag
_8
mload
(
0x40
)
dup1
dup3
dup2
mstore
0x20
add
swap2
pop
pop
mload
(
0x40
)
dup1
swap2
sub
swap1
return
tag
_6
0x0
0xa
swap1
pop
0x0
dup2
0xffffffffffffffff
and
eq
dup1
tag
_11
jumpi
pop
sload
(
0x0
)
dup2
0xffffffffffffffff
and
add
timestamp
lt
iszero
tag
_11
iszero
iszero
tag
_12
jumpi
0x0
dup1
revert
tag
_12
pop
jump	
tag
_9
sload
(
0x0
)
dup2
jump	
}
