Contract: OnChainGM
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: feeRecipient = 0x7500A83DF2aF99B2755c47B6B321a8217d876a85

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: GM_FEE = 29000000000000

Edges:
  0 -> 1
  1 -> 2

Function: onChainGM
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.value != GM_FEE

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert(string)(Incorrect ETH fee)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: ! (block.timestamp >= lastGMTimestamp[msg.sender] + TIME_LIMIT || lastGMTimestamp[msg.sender] == 0)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: revert(string)(Wait 24 hours)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: lastGMTimestamp[msg.sender] = block.timestamp

  ID: 8
  Type: NodeType.VARIABLE
  Expression: 

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: (success,None) = feeRecipient.call{value: msg.value}()

  ID: 10
  Type: NodeType.IF
  Expression: ! success

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: revert(string)(Fee transfer failed)

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: OnChainGMEvent(msg.sender)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  10 -> 12
  11 -> 12
  12 -> 13

Function: timeUntilNextGM
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: lastGMTimestamp[user] == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: 0

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: timePassed = block.timestamp - lastGMTimestamp[user]

  ID: 5
  Type: NodeType.IF
  Expression: timePassed >= TIME_LIMIT

  ID: 6
  Type: NodeType.RETURN
  Expression: 0

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.RETURN
  Expression: TIME_LIMIT - timePassed

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  7 -> 8

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TIME_LIMIT = 86400

Edges:


