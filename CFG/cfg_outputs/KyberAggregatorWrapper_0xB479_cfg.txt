Contract: MainnetAuthAddresses
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: AuthHelper
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: AdminVault
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: admin = ADMIN_ADDR

Edges:
  0 -> 1
  1 -> 2

Function: changeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: admin != msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert SenderNotAdmin()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: owner = _owner

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4

Function: changeAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: admin != msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert SenderNotAdmin()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: admin = _admin

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: IERC20
==================================================


Contract: Address
==================================================

Function: isContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470

  ID: 3
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: codehash = extcodehash(uint256)(account)

  ID: 5
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 6
  Type: NodeType.RETURN
  Expression: (codehash != accountHash && codehash != 0x0)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: sendValue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: balance = address(this).balance

  ID: 2
  Type: NodeType.IF
  Expression: balance < amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: revert InsufficientBalance(uint256,uint256)(balance,amount)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: (success,None) = recipient.call{value: amount}()

  ID: 7
  Type: NodeType.IF
  Expression: ! (success)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: revert SendingValueFail()()

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  8 -> 9

Function: functionCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _functionCallWithValue(target,data,0,errorMessage)

Edges:
  0 -> 1

Function: functionCallWithValue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: balance = address(this).balance

  ID: 2
  Type: NodeType.IF
  Expression: balance < value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: revert InsufficientBalanceForCall(uint256,uint256)(balance,value)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.RETURN
  Expression: _functionCallWithValue(target,data,value,errorMessage)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  3 -> 4
  4 -> 5

Function: _functionCallWithValue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! (isContract(target))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert NonContractCall()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: (success,returndata) = target.call{value: weiValue}(data)

  ID: 7
  Type: NodeType.IF
  Expression: success

  ID: 8
  Type: NodeType.RETURN
  Expression: returndata

  ID: 9
  Type: NodeType.IF
  Expression: returndata.length > 0

  ID: 10
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 11
  Type: NodeType.VARIABLE
  Expression: 

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)

  ID: 14
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: revert(string)(errorMessage)

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 17
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  9 -> 10
  9 -> 15
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 16
  15 -> 16
  16 -> 17


Contract: SafeERC20
==================================================

Function: safeTransfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

Edges:
  0 -> 1

Function: safeTransferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

Edges:
  0 -> 1

Function: safeApprove
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: approvalCall = abi.encodeWithSelector(token.approve.selector,spender,value)

  ID: 2
  Type: NodeType.IF
  Expression: ! _callOptionalReturnBool(token,approvalCall)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,0))

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _callOptionalReturn(token,approvalCall)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 5
  3 -> 4
  4 -> 5

Function: _callOptionalReturn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: returndata = address(token).functionCall(data,SafeERC20: low-level call failed)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(returndata.length == 0 || abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)

Edges:
  0 -> 1
  1 -> 2

Function: _callOptionalReturnBool
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: (success,returndata) = address(token).call(data)

  ID: 4
  Type: NodeType.RETURN
  Expression: success && (returndata.length == 0 || abi.decode(returndata,(bool))) && address(token).code.length > 0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: AdminAuth
==================================================

Function: withdrawStuckFunds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _token == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: address(_receiver).transfer(_amount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: IERC20(_token).safeTransfer(_receiver,_amount)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  1 -> 3
  2 -> 4
  3 -> 4
  5 -> 1

Function: kill
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: selfdestruct(address)(address(msg.sender))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 2
  2 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: adminVault = AdminVault(ADMIN_VAULT_ADDR)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5


Contract: DFSRegistry
==================================================

Function: withdrawStuckFunds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _token == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: address(_receiver).transfer(_amount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: IERC20(_token).safeTransfer(_receiver,_amount)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  1 -> 3
  2 -> 4
  3 -> 4
  5 -> 1

Function: kill
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: selfdestruct(address)(address(msg.sender))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 2
  2 -> 1

Function: getAddr
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: entries[_id].contractAddr

Edges:
  0 -> 1

Function: isRegistered
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: entries[_id].exists

Edges:
  0 -> 1

Function: addNewContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: entries[_id].exists

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert EntryAlreadyExistsError(bytes4)(_id)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: entries[_id] = Entry({contractAddr:_contractAddr,waitPeriod:_waitPeriod,changeStartTime:0,inContractChange:false,inWaitPeriodChange:false,exists:true})

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: AddNewContract(msg.sender,_id,_contractAddr,_waitPeriod)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 6
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: revertToPreviousAddress
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! (entries[_id].exists)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert EntryNonExistentError(bytes4)(_id)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: previousAddresses[_id] == address(0)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: revert EmptyPrevAddrError(bytes4)(_id)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.VARIABLE
  Expression: currentAddr = entries[_id].contractAddr

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: entries[_id].contractAddr = previousAddresses[_id]

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: RevertToPreviousAddress(msg.sender,_id,currentAddr,previousAddresses[_id])

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 10
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  10 -> 1

Function: startContractChange
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! entries[_id].exists

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert EntryNonExistentError(bytes4)(_id)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: entries[_id].inWaitPeriodChange

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: revert AlreadyInWaitPeriodChangeError(bytes4)(_id)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: entries[_id].changeStartTime = block.timestamp

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: entries[_id].inContractChange = true

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: pendingAddresses[_id] = _newContractAddr

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: StartContractChange(msg.sender,_id,entries[_id].contractAddr,_newContractAddr)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 11
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  11 -> 1

Function: approveContractChange
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! entries[_id].exists

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert EntryNonExistentError(bytes4)(_id)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: ! entries[_id].inContractChange

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: revert EntryNotInChangeError(bytes4)(_id)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: block.timestamp < (entries[_id].changeStartTime + entries[_id].waitPeriod)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: revert ChangeNotReadyError(uint256,uint256)(block.timestamp,(entries[_id].changeStartTime + entries[_id].waitPeriod))

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.VARIABLE
  Expression: oldContractAddr = entries[_id].contractAddr

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: entries[_id].contractAddr = pendingAddresses[_id]

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: entries[_id].inContractChange = false

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: entries[_id].changeStartTime = 0

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: pendingAddresses[_id] = address(0)

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: previousAddresses[_id] = oldContractAddr

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: ApproveContractChange(msg.sender,_id,oldContractAddr,entries[_id].contractAddr)

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 17
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  17 -> 1

Function: cancelContractChange
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! entries[_id].exists

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert EntryNonExistentError(bytes4)(_id)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: ! entries[_id].inContractChange

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: revert EntryNotInChangeError(bytes4)(_id)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.VARIABLE
  Expression: oldContractAddr = pendingAddresses[_id]

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: pendingAddresses[_id] = address(0)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: entries[_id].inContractChange = false

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: entries[_id].changeStartTime = 0

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: CancelContractChange(msg.sender,_id,oldContractAddr,entries[_id].contractAddr)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 12
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  12 -> 1

Function: startWaitPeriodChange
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! entries[_id].exists

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert EntryNonExistentError(bytes4)(_id)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: entries[_id].inContractChange

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: revert AlreadyInContractChangeError(bytes4)(_id)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: pendingWaitTimes[_id] = _newWaitPeriod

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: entries[_id].changeStartTime = block.timestamp

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: entries[_id].inWaitPeriodChange = true

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: StartWaitPeriodChange(msg.sender,_id,_newWaitPeriod)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 11
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  11 -> 1

Function: approveWaitPeriodChange
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! entries[_id].exists

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert EntryNonExistentError(bytes4)(_id)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: ! entries[_id].inWaitPeriodChange

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: revert EntryNotInChangeError(bytes4)(_id)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: block.timestamp < (entries[_id].changeStartTime + entries[_id].waitPeriod)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: revert ChangeNotReadyError(uint256,uint256)(block.timestamp,(entries[_id].changeStartTime + entries[_id].waitPeriod))

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.VARIABLE
  Expression: oldWaitTime = entries[_id].waitPeriod

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: entries[_id].waitPeriod = pendingWaitTimes[_id]

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: entries[_id].inWaitPeriodChange = false

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: entries[_id].changeStartTime = 0

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: pendingWaitTimes[_id] = 0

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: ApproveWaitPeriodChange(msg.sender,_id,oldWaitTime,entries[_id].waitPeriod)

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 16
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  16 -> 1

Function: cancelWaitPeriodChange
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! entries[_id].exists

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert EntryNonExistentError(bytes4)(_id)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: ! entries[_id].inWaitPeriodChange

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: revert EntryNotInChangeError(bytes4)(_id)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.VARIABLE
  Expression: oldWaitPeriod = pendingWaitTimes[_id]

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: pendingWaitTimes[_id] = 0

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: entries[_id].inWaitPeriodChange = false

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: entries[_id].changeStartTime = 0

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: CancelWaitPeriodChange(msg.sender,_id,oldWaitPeriod,entries[_id].waitPeriod)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 12
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  12 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: adminVault = AdminVault(ADMIN_VAULT_ADDR)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5


Contract: MainnetCoreAddresses
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: REGISTRY_ADDR = 0x287778F121F134C66212FB16c9b53eC991D32f5b

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDR = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDR = 0x7407974DDBF539e552F1d051e44573090912CC3D

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DEFISAVER_LOGGER = 0xcE7a977Cac4a481bc84AC06b2Da0df614e621cf3

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SUB_STORAGE_ADDR = 0x1612fc28Ee0AB882eC99842Cde0Fc77ff0691e90

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BUNDLE_STORAGE_ADDR = 0x223c6aDE533851Df03219f6E3D8B763Bd47f84cf

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: STRATEGY_STORAGE_ADDR = 0xF52551F95ec4A2B4299DcC42fbbc576718Dbf933

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: RECIPE_EXECUTOR_ADDR = 0x5029336642814bC51a42bA80BF83a6322110035D

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BYTES_TRANSIENT_STORAGE = 0xB3FE6f712c8B8c64CD2780ce714A36e7640DDf0f

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8


Contract: CoreHelper
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: REGISTRY_ADDR = 0x287778F121F134C66212FB16c9b53eC991D32f5b

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDR = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDR = 0x7407974DDBF539e552F1d051e44573090912CC3D

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DEFISAVER_LOGGER = 0xcE7a977Cac4a481bc84AC06b2Da0df614e621cf3

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SUB_STORAGE_ADDR = 0x1612fc28Ee0AB882eC99842Cde0Fc77ff0691e90

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BUNDLE_STORAGE_ADDR = 0x223c6aDE533851Df03219f6E3D8B763Bd47f84cf

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: STRATEGY_STORAGE_ADDR = 0xF52551F95ec4A2B4299DcC42fbbc576718Dbf933

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: RECIPE_EXECUTOR_ADDR = 0x5029336642814bC51a42bA80BF83a6322110035D

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BYTES_TRANSIENT_STORAGE = 0xB3FE6f712c8B8c64CD2780ce714A36e7640DDf0f

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8


Contract: IWETH
==================================================


Contract: TokenUtils
==================================================

Function: approveToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _tokenAddr == ETH_ADDR

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: IERC20(_tokenAddr).allowance(address(this),_to) < _amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: IERC20(_tokenAddr).safeApprove(_to,_amount)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6

Function: pullTokensIfNeeded
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _amount == type()(uint256).max

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _amount = getBalance(_token,_from)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: _from != address(0) && _from != address(this) && _token != ETH_ADDR && _amount != 0

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: IERC20(_token).safeTransferFrom(_from,address(this),_amount)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.RETURN
  Expression: _amount

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7

Function: withdrawTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _amount == type()(uint256).max

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _amount = getBalance(_token,address(this))

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: _to != address(0) && _to != address(this) && _amount != 0

  ID: 5
  Type: NodeType.IF
  Expression: _token != ETH_ADDR

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: IERC20(_token).safeTransfer(_to,_amount)

  ID: 7
  Type: NodeType.VARIABLE
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: (success,None) = _to.call{value: _amount}()

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,Eth send fail)

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.RETURN
  Expression: _amount

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 11
  5 -> 6
  5 -> 7
  6 -> 10
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12

Function: depositWeth
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: IWETH(WETH_ADDR).deposit{value: _amount}()

Edges:
  0 -> 1

Function: withdrawWeth
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: IWETH(WETH_ADDR).withdraw(_amount)

Edges:
  0 -> 1

Function: getBalance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _tokenAddr == ETH_ADDR

  ID: 2
  Type: NodeType.RETURN
  Expression: _acc.balance

  ID: 3
  Type: NodeType.RETURN
  Expression: IERC20(_tokenAddr).balanceOf(_acc)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3

Function: getTokenDecimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _token == ETH_ADDR

  ID: 2
  Type: NodeType.RETURN
  Expression: 18

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: IERC20(_token).decimals()

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: WETH_ADDR = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ETH_ADDR = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

Edges:
  0 -> 1


Contract: DFSExchangeHelper
==================================================

Function: sendLeftover
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: TokenUtils.ETH_ADDR.withdrawTokens(_to,type()(uint256).max)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _srcAddr.withdrawTokens(_to,type()(uint256).max)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _destAddr.withdrawTokens(_to,type()(uint256).max)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: sliceUint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: bs.length < start + 32

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert OutOfRangeSlicingError()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: 

  ID: 5
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: x = mload(uint256)(bs + 0x20 + start)

  ID: 7
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 8
  Type: NodeType.RETURN
  Expression: x

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: writeUint256
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _b.length < _index + 32

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert InvalidOffchainData()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: input = bytes32(_input)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _index += 32

  ID: 6
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: mstore(uint256,uint256)(_b + _index,input)

  ID: 8
  Type: NodeType.ENDASSEMBLY
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8


Contract: IKyberScaleHelper
==================================================


Contract: DFSExchangeData
==================================================


Contract: IOffchainWrapper
==================================================


Contract: KyberAggregatorWrapper
==================================================

Function: withdrawStuckFunds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _token == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: address(_receiver).transfer(_amount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: IERC20(_token).safeTransfer(_receiver,_amount)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  1 -> 3
  2 -> 4
  3 -> 4
  5 -> 1

Function: kill
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: selfdestruct(address)(address(msg.sender))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 2
  2 -> 1

Function: sendLeftover
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: TokenUtils.ETH_ADDR.withdrawTokens(_to,type()(uint256).max)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _srcAddr.withdrawTokens(_to,type()(uint256).max)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _destAddr.withdrawTokens(_to,type()(uint256).max)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: sliceUint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: bs.length < start + 32

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert OutOfRangeSlicingError()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: 

  ID: 5
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: x = mload(uint256)(bs + 0x20 + start)

  ID: 7
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 8
  Type: NodeType.RETURN
  Expression: x

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: writeUint256
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _b.length < _index + 32

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert InvalidOffchainData()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: input = bytes32(_input)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _index += 32

  ID: 6
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: mstore(uint256,uint256)(_b + _index,input)

  ID: 8
  Type: NodeType.ENDASSEMBLY
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: takeOrder
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: scalingHelperAddr = registry.getAddr(SCALING_HELPER_ID)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.VARIABLE
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: (isScalingSuccess,scaledCalldata) = IKyberScaleHelper(scalingHelperAddr).getScaledInputData(_exData.offchainData.callData,_exData.srcAmount)

  ID: 5
  Type: NodeType.IF
  Expression: ! isScalingSuccess

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: sendLeftover(_exData.srcAddr,_exData.destAddr,address(msg.sender))

  ID: 7
  Type: NodeType.RETURN
  Expression: (false,0)

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.VARIABLE
  Expression: tokensBefore = _exData.destAddr.getBalance(address(this))

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: IERC20(_exData.srcAddr).safeApprove(_exData.offchainData.allowanceTarget,_exData.srcAmount)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: (success,None) = _exData.offchainData.exchangeAddr.call(scaledCalldata)

  ID: 12
  Type: NodeType.VARIABLE
  Expression: tokensSwapped = 0

  ID: 13
  Type: NodeType.IF
  Expression: success

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: tokensSwapped = _exData.destAddr.getBalance(address(this)) - tokensBefore

  ID: 15
  Type: NodeType.IF
  Expression: tokensSwapped == 0

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: revert ZeroTokensSwapped()()

  ID: 17
  Type: NodeType.ENDIF
  Expression: 

  ID: 18
  Type: NodeType.ENDIF
  Expression: 

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: sendLeftover(_exData.srcAddr,_exData.destAddr,address(msg.sender))

  ID: 20
  Type: NodeType.RETURN
  Expression: (success,tokensSwapped)

  ID: 21
  Type: NodeType.RETURN
  Expression: (success)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 8
  6 -> 7
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  13 -> 18
  14 -> 15
  15 -> 16
  15 -> 17
  16 -> 17
  17 -> 18
  18 -> 19
  19 -> 20

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: adminVault = AdminVault(ADMIN_VAULT_ADDR)

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: REGISTRY_ADDR = 0x287778F121F134C66212FB16c9b53eC991D32f5b

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDR = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDR = 0x7407974DDBF539e552F1d051e44573090912CC3D

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DEFISAVER_LOGGER = 0xcE7a977Cac4a481bc84AC06b2Da0df614e621cf3

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SUB_STORAGE_ADDR = 0x1612fc28Ee0AB882eC99842Cde0Fc77ff0691e90

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BUNDLE_STORAGE_ADDR = 0x223c6aDE533851Df03219f6E3D8B763Bd47f84cf

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: STRATEGY_STORAGE_ADDR = 0xF52551F95ec4A2B4299DcC42fbbc576718Dbf933

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: RECIPE_EXECUTOR_ADDR = 0x5029336642814bC51a42bA80BF83a6322110035D

  ID: 14
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BYTES_TRANSIENT_STORAGE = 0xB3FE6f712c8B8c64CD2780ce714A36e7640DDf0f

  ID: 15
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SCALING_HELPER_ID = bytes4(keccak256(bytes)(KyberInputScalingHelper))

  ID: 16
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: registry = DFSRegistry(REGISTRY_ADDR)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16


