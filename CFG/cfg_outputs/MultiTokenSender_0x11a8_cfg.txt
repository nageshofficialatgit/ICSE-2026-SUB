Contract: IERC20
==================================================


Contract: MultiTokenSender
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: ETHReceived(msg.sender,msg.value)

Edges:
  0 -> 1

Function: sendMultipleTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(tokens.length == amounts.length,Array lengths mismatch)

  ID: 2
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 3
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 5
  Type: NodeType.IFLOOP
  Expression: i < tokens.length

  ID: 6
  Type: NodeType.IF
  Expression: tokens[i] == address(0)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(address(this).balance >= amounts[i],Not enough ETH)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: address(recipient).transfer(amounts[i])

  ID: 9
  Type: NodeType.VARIABLE
  Expression: token = IERC20(tokens[i])

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(token.allowance(msg.sender,address(this)) >= amounts[i],Not enough allowance)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(token.transferFrom(msg.sender,recipient,amounts[i]),ERC20 transfer failed)

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: TokensTransferred(msg.sender,recipient,tokens[i],amounts[i])

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: i ++

Edges:
  0 -> 1
  1 -> 4
  2 -> 5
  4 -> 2
  5 -> 6
  5 -> 3
  6 -> 7
  6 -> 9
  7 -> 8
  8 -> 12
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 5

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: token == address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(address(this).balance >= amount,Not enough ETH)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: address(owner).transfer(amount)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: tokenContract = IERC20(token)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(tokenContract.balanceOf(address(this)) >= amount,Not enough token balance)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(tokenContract.transfer(owner,amount),ERC20 transfer failed)

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Withdrawn(owner,token,amount)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 9
  1 -> 2
  1 -> 4
  2 -> 3
  3 -> 7
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  9 -> 1


