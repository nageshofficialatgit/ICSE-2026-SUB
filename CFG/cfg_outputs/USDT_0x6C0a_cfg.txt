Contract: USDT
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply = 1_000_000_000 * 10 ** 6

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[owner] = totalSupply

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: name = Tether USD

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: symbol = USDT

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: decimals = 6

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: deprecated

  ID: 2
  Type: NodeType.RETURN
  Expression: UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender,_to,_value)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: fee = (_value * basisPointsRate) / 10000

  ID: 5
  Type: NodeType.IF
  Expression: fee > maximumFee

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: fee = maximumFee

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.VARIABLE
  Expression: sendAmount = _value - fee

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= _value

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: balances[_to] += sendAmount

  ID: 11
  Type: NodeType.IF
  Expression: fee > 0

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: balances[owner] += fee

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,owner,fee)

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,sendAmount)

  ID: 16
  Type: NodeType.RETURN
  Expression: true

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: whenNotPaused()

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: notBlacklisted(msg.sender)

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: notBlacklisted(_to)

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: notExchange(msg.sender)

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: notExchange(_to)

Edges:
  0 -> 17
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  11 -> 14
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  17 -> 18
  18 -> 19
  19 -> 20
  20 -> 21
  21 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: deprecated

  ID: 2
  Type: NodeType.RETURN
  Expression: UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender,_from,_to,_value)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: _allowance = allowed[_from][msg.sender]

  ID: 5
  Type: NodeType.VARIABLE
  Expression: fee = (_value * basisPointsRate) / 10000

  ID: 6
  Type: NodeType.IF
  Expression: fee > maximumFee

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: fee = maximumFee

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.VARIABLE
  Expression: sendAmount = _value - fee

  ID: 10
  Type: NodeType.IF
  Expression: _allowance < MAX_UINT

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: allowed[_from][msg.sender] = _allowance - _value

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: balances[_from] -= _value

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: balances[_to] += sendAmount

  ID: 15
  Type: NodeType.IF
  Expression: fee > 0

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: balances[owner] += fee

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,owner,fee)

  ID: 18
  Type: NodeType.ENDIF
  Expression: 

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_to,sendAmount)

  ID: 20
  Type: NodeType.RETURN
  Expression: true

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: whenNotPaused()

  ID: 22
  Type: NodeType.EXPRESSION
  Expression: notBlacklisted(_from)

  ID: 23
  Type: NodeType.EXPRESSION
  Expression: notBlacklisted(_to)

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: notExchange(_from)

  ID: 25
  Type: NodeType.EXPRESSION
  Expression: notExchange(_to)

Edges:
  0 -> 21
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  6 -> 8
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  10 -> 12
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  15 -> 18
  16 -> 17
  17 -> 18
  18 -> 19
  19 -> 20
  21 -> 22
  22 -> 23
  23 -> 24
  24 -> 25
  25 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: deprecated

  ID: 2
  Type: NodeType.RETURN
  Expression: UpgradedStandardToken(upgradedAddress).balanceOf(_owner)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: balances[_owner]

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_value == 0 || allowed[msg.sender][_spender] == 0,Reset allowance to 0 first)

  ID: 2
  Type: NodeType.IF
  Expression: deprecated

  ID: 3
  Type: NodeType.RETURN
  Expression: UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender,_spender,_value)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: allowed[msg.sender][_spender] = _value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,_spender,_value)

  ID: 7
  Type: NodeType.RETURN
  Expression: true

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: whenNotPaused()

Edges:
  0 -> 8
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  8 -> 1

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: deprecated

  ID: 2
  Type: NodeType.RETURN
  Expression: UpgradedStandardToken(upgradedAddress).allowance(_owner,_spender)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: allowed[_owner][_spender]

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4

Function: deprecate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: deprecated = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: upgradedAddress = _upgradedAddress

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Deprecate(_upgradedAddress)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: issue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[owner] += amount

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply += amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Issue(amount)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: redeem
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balances[owner] >= amount,Insufficient funds)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[owner] -= amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: totalSupply -= amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Redeem(amount)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: setParams
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newBasisPoints < 20,Too high)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newMaxFee < 50 * 10 ** decimals,Too high)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: basisPointsRate = newBasisPoints

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: maximumFee = newMaxFee

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Params(basisPointsRate,maximumFee)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: addBlackList
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: isBlackListed[_user] = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: AddedBlackList(_user)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: removeBlackList
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: isBlackListed[_user] = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: RemovedBlackList(_user)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: destroyBlackFunds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(isBlackListed[_user],Not blacklisted)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: amount = balances[_user]

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[_user] = 0

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: totalSupply -= amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: DestroyedBlackFunds(_user,amount)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: getBlackListStatus
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: isBlackListed[_user]

Edges:
  0 -> 1

Function: getOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1

Function: pause
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: paused = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Pause()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: unpause
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: paused = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Unpause()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: addExchange
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: knownExchanges[_exchange] = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: removeExchange
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: knownExchanges[_exchange] = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: basisPointsRate = 0

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: maximumFee = 0

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_UINT = type()(uint256).max

Edges:


Contract: UpgradedStandardToken
==================================================


