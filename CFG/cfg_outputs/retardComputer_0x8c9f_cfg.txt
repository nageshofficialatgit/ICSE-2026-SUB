Contract: IERC20
==================================================


Contract: IUniswapV2Router02
==================================================


Contract: retardComputer
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: overlord = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: bribeWallet = _bribeWallet

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: magicInternetPipe = _magicInternetPipe

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: bagOfCoins[msg.sender] = totalSupply

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: isTaxDodger[msg.sender] = true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: isTaxDodger[_bribeWallet] = true

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),msg.sender,totalSupply)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: bagOfCoins[account]

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _degenTransfer(msg.sender,recipient,amount)

  ID: 2
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: IOweYou[msg.sender][spender] = amount

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,amount)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: IOweYou[owner][spender]

Edges:
  0 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(IOweYou[sender][msg.sender] >= amount,Allowance exceeded.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: IOweYou[sender][msg.sender] -= amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _degenTransfer(sender,recipient,amount)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: _degenTransfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(rugPullAllowed || sender == overlord,Trading disabled.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(bagOfCoins[sender] >= amount,Not enough degen funds.)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: taxAmount = 0

  ID: 4
  Type: NodeType.IF
  Expression: ! isTaxDodger[sender] && ! isTaxDodger[recipient] && (sender == memePool || recipient == memePool)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: taxAmount = (amount * TOTAL_TAX) / 100

  ID: 6
  Type: NodeType.VARIABLE
  Expression: taxInDisk = (taxAmount * TAX_DISK) / 100

  ID: 7
  Type: NodeType.VARIABLE
  Expression: taxInETH = taxAmount - taxInDisk

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: bagOfCoins[bribeWallet] += taxInDisk

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: Transfer(sender,bribeWallet,taxInDisk)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: bagOfCoins[address(this)] += taxInETH

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: Transfer(sender,address(this),taxInETH)

  ID: 12
  Type: NodeType.IF
  Expression: ! inSwap && recipient == memePool

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: _swapTaxForMagicRocks(taxInETH)

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

  ID: 15
  Type: NodeType.ENDIF
  Expression: 

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: bagOfCoins[sender] -= amount

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: bagOfCoins[recipient] += (amount - taxAmount)

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: Transfer(sender,recipient,amount - taxAmount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 15
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  12 -> 14
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18

Function: _swapTaxForMagicRocks
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(tokenAmount > 0,Nothing to swap.)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: path = new address[](2)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: path[0] = address(this)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: path[1] = IUniswapV2Router02(magicInternetPipe).WETH()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: IERC20(address(this)).approve(magicInternetPipe,tokenAmount)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: IUniswapV2Router02(magicInternetPipe).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,bribeWallet,block.timestamp)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: noRugPulls()

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1

Function: allowTheRug
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! rugPullAllowed,Rug already allowed.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: memePool = _memePool

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: rugPullAllowed = true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: TradingUnlocked()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOverlord()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: setTaxDodger
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: isTaxDodger[user] = dodging

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOverlord()

Edges:
  0 -> 2
  2 -> 1

Function: howMuchAmITaxed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: TOTAL_TAX

Edges:
  0 -> 1

Function: whereIsTheLiquidity
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: memePool

Edges:
  0 -> 1

Function: isThisScamLive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: rugPullAllowed

Edges:
  0 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: rugPullAllowed = false

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: inSwap = false

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = RETARD.COMPUTER

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = DISK

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalSupply = 101_110_010_011 * (10 ** decimals)

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOTAL_TAX = 1

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TAX_DISK = 50

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TAX_ETH = 50

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6


