Contract: IERC20
==================================================


Contract: SafeMath
==================================================

Function: safeAdd
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: c = a + b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(c >= a)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeSub
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(b <= a)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: c = a - b

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeMul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: c = a * b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(a == 0 || c / a == b)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeDiv
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(b > 0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: c = a / b

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: ERC20Token
==================================================

Function: safeAdd
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: c = a + b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(c >= a)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeSub
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(b <= a)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: c = a - b

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeMul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: c = a * b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(a == 0 || c / a == b)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeDiv
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(b > 0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: c = a / b

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: name = Hedge Stake USD

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: symbol = sUSDH

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: decimals = 18

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _totalSupply = 1403494557 * 10 ** 18

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _admin = 0xE0ec33fF5cA9db4156F8A29D8FC69F30D7881512

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _owner = _admin

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balances[_admin] = _totalSupply

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),_admin,_totalSupply)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _owner

Edges:
  0 -> 1

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _totalSupply - balances[address(0)]

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[tokenOwner]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowed[tokenOwner][spender]

  ID: 2
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowed[msg.sender][spender] = tokens

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,tokens)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = safeSub(balances[msg.sender],tokens)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[to] = safeAdd(balances[to],tokens)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,to,tokens)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

  ID: 5
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[from] = safeSub(balances[from],tokens)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: allowed[from][msg.sender] = safeSub(allowed[from][msg.sender],tokens)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[to] = safeAdd(balances[to],tokens)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,tokens)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

  ID: 6
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_value <= balances[msg.sender],ERC20: small balances)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = balances[msg.sender] - _value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _totalSupply = _totalSupply - _value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,address(0),_value)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 7
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: expand
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = balances[msg.sender] + _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _totalSupply = _totalSupply + _value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,address(0),_value)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 6
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1


