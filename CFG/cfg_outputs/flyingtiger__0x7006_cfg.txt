Contract: flyingtiger_
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: tokenX = _tokenx

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = address(msg.sender)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: contractAddress = address(address(this))

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: FlyingTiger
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amountA > 0,Amount A must be greater than 0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender.balance > 0,not enoough gas fee. Add eth)

  ID: 3
  Type: NodeType.IF
  Expression: amountA > balanceOf(msg.sender)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: revert(string)(your balance is too low)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: amountswap = (amountA * 10 ** decimals) / exchangeRateTokenXToEth

  ID: 7
  Type: NodeType.VARIABLE
  Expression: amountswapTokenToEth = amountA * 10 ** decimals

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= amountswapTokenToEth

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: balances[address(this)] += amountswapTokenToEth

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: flyingtiger(address(this),amountswapTokenToEth)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: address(msg.sender).transfer(amountswap)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11

Function: flyingTiger
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.value > msg.sender.balance

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert(string)(balance is too low)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: contractAddress.transfer(msg.value)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] += msg.value * exchangeRateEthtoTokenX

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balances[contractAddress] -= msg.value * exchangeRateEthtoTokenX

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: flyingtiger(msg.sender,msg.value * exchangeRateEthtoTokenX)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,Amount A must be greater than 0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: to.transfer(amount * 10 ** decimals)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _totalSupply / 10 ** decimals

Edges:
  0 -> 1

Function: _decimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: decimals

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[token]

Edges:
  0 -> 1

Function: balanceOf1
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[token] / 10 ** decimals

Edges:
  0 -> 1

Function: balanceToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[msg.sender]

Edges:
  0 -> 1

Function: setExchangeRateTokenXToEth
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: exchangeRateTokenXToEth = _rate

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: setExchangeRateEthToTokenX
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: exchangeRateEthtoTokenX = _rate

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: EthBalance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: weiBalance = addr.balance

  ID: 2
  Type: NodeType.RETURN
  Expression: weiBalance / 10 ** decimals

Edges:
  0 -> 1
  1 -> 2

Function: DecBalance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: weiBalance = addr.balance

  ID: 2
  Type: NodeType.RETURN
  Expression: weiBalance / 10 ** 15

Edges:
  0 -> 1
  1 -> 2

Function: mint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: mintamount = (amount * 10 ** decimals)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,Cannot mint zero tokens)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _totalSupply += mintamount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[to] += mintamount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Mint(address(0),mintamount)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),to,mintamount)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1

Function: burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,Cannot mint zero tokens)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: burnamount = (amount * 10 ** decimals)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[to] -= burnamount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _totalSupply -= burnamount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Burn(to,burnamount)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),to,burnamount)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,has to be greater than 0)

  ID: 2
  Type: NodeType.IF
  Expression: amount > balanceOf(msg.sender)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: revert(string)(your balance is too low)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: transferamount = (amount * 10 ** decimals)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = balances[msg.sender] - transferamount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balances[to] = balances[to] + transferamount

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,to,transferamount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: transferamount = (amount * 10 ** decimals)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[from] -= transferamount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: allowed[from][msg.sender] += transferamount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[to] = balances[to] + transferamount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,transferamount)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = FlyingTiger 

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = FlyingTiger

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

Edges:
  0 -> 1
  1 -> 2


