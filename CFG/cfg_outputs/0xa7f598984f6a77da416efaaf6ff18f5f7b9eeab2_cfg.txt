Contract: Permissions
==================================================

Function: Permissions
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: ownerAddress = msg.sender

Edges:
  0 -> 1

Function: getOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: ownerAddress

Edges:
  0 -> 1

Function: getStorageAddress
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: storageAddress

Edges:
  0 -> 1

Function: getCaller
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: callerAddress

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: newOwner != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerAddress = newOwner

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: newStorage
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _new != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: storageAddress = _new

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: newCaller
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _new != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: callerAddress = _new

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1


Contract: Creatures
==================================================

Function: Permissions
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: ownerAddress = msg.sender

Edges:
  0 -> 1

Function: getOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: ownerAddress

Edges:
  0 -> 1

Function: getStorageAddress
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: storageAddress

Edges:
  0 -> 1

Function: getCaller
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: callerAddress

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: newOwner != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerAddress = newOwner

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: newStorage
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _new != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: storageAddress = _new

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: newCaller
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _new != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: callerAddress = _new

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: add
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: _creature = Creature({species:_species,subSpecies:_subSpecies,eyeColor:_eyeColor,timestamp:uint64(now)})

  ID: 2
  Type: NodeType.VARIABLE
  Expression: newCreatureID = creatures.push(_creature) - 1

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: transfer(0,_owner,newCreatureID)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: CreateCreature(newCreatureID,_owner)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyCaller()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: getCreature
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: c = creatures[id]

  ID: 2
  Type: NodeType.VARIABLE
  Expression: owner = creatureIndexToOwner[id]

  ID: 3
  Type: NodeType.RETURN
  Expression: (owner,c.species,c.subSpecies,c.eyeColor,c.timestamp)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: creatureIndexToOwner[_tokenId] = _to

  ID: 2
  Type: NodeType.IF
  Expression: _from != address(0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ownershipTokenCount[_from] --

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: ownershipTokenCount[_to] ++

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_to,_tokenId)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlyCaller()

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  2 -> 4
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1


Contract: CreaturesInterface
==================================================

Function: Permissions
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: ownerAddress = msg.sender

Edges:
  0 -> 1

Function: getOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: ownerAddress

Edges:
  0 -> 1

Function: getStorageAddress
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: storageAddress

Edges:
  0 -> 1

Function: getCaller
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: callerAddress

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: newOwner != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerAddress = newOwner

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: newStorage
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _new != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: storageAddress = _new

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: newCaller
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _new != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: callerAddress = _new

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: CreaturesInterface
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: creatureCosts[0] = 100000000000000000

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: creatureCosts[1] = 250000000000000000

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: creatureCosts[2] = 120000000000000000

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: creatureCosts[3] = 500000000000000000

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: creatureCosts[4] = 100000000000000000

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: creatureCosts[5] = 2000000000000000000

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: creatureCosts[6] = 2000000000000000000

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: creatureCosts[7] = 1000000000000000000

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: creatureCosts[8] = 10000000000000000

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: creatureCosts[9] = 25000000000000000

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10

Function: addCreature
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_species == 0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(creatureCosts[_subSpecies] > 0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.value >= creatureCosts[_subSpecies])

  ID: 4
  Type: NodeType.VARIABLE
  Expression: creatureStorage = Creatures(storageAddress)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: creatureStorage.add(msg.sender,_species,_subSpecies,_eyeColor)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: withdrawBalance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: ownerAddress.transfer(this.balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1


