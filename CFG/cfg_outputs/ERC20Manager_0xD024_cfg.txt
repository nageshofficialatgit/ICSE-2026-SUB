Contract: IERC20
==================================================


Contract: ERC20Manager
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: isAdmin[owner] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: adminList.push(owner)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: setReceiverAddress
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_to != address(0),Invalid receiver address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: to = _to

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ReceiverAddressUpdated(_to)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: addAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! isAdmin[_admin],Already an admin)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: isAdmin[_admin] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: adminList.push(_admin)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: AdminAdded(_admin)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: removeAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(isAdmin[_admin],Not an admin)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: isAdmin[_admin] = false

  ID: 3
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 4
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 6
  Type: NodeType.IFLOOP
  Expression: i < adminList.length

  ID: 7
  Type: NodeType.IF
  Expression: adminList[i] == _admin

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: adminList[i] = adminList[adminList.length - 1]

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: adminList.pop()

  ID: 10
  Type: NodeType.BREAK
  Expression: 

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: AdminRemoved(_admin)

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 14
  1 -> 2
  2 -> 5
  3 -> 6
  4 -> 13
  5 -> 3
  6 -> 7
  6 -> 4
  7 -> 8
  7 -> 11
  8 -> 9
  9 -> 10
  10 -> 4
  11 -> 12
  12 -> 6
  14 -> 1

Function: getAdminList
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: adminList

Edges:
  0 -> 1

Function: transferToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),Receiver address not set)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: balance = token.balanceOf(from)

  ID: 3
  Type: NodeType.IF
  Expression: amount > balance

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: amount = balance

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,Insufficient balance)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(token.transferFrom(from,to,amount),Token transfer failed)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: TokensTransferred(address(token),from,to,amount)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 9
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  9 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner != address(0),New owner is the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1


