Contract: IERC165
==================================================


Contract: ERC165
==================================================

Function: supportsInterface
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: interfaceId == type()(IERC165).interfaceId

Edges:
  0 -> 1


Contract: IERC721
==================================================


Contract: IERC721Receiver
==================================================


Contract: IERC721Metadata
==================================================


Contract: Address
==================================================

Function: isContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470

  ID: 3
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: codehash = extcodehash(uint256)(account)

  ID: 5
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 6
  Type: NodeType.RETURN
  Expression: (codehash != accountHash && codehash != 0x0)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6


Contract: Context
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: _msgData
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.data

Edges:
  0 -> 1


Contract: IERC20
==================================================


Contract: Ownable
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnerSet(address(0),owner)

Edges:
  0 -> 1
  1 -> 2

Function: changeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: OwnerSet(owner,newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: getOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1


Contract: ChipNFT
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnerSet(address(0),owner)

Edges:
  0 -> 1
  1 -> 2

Function: changeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: OwnerSet(owner,newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: getOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1

Function: supportsInterface
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: interfaceId == type()(IERC721).interfaceId || interfaceId == type()(IERC721Metadata).interfaceId || super.supportsInterface(interfaceId)

Edges:
  0 -> 1

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: _msgData
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.data

Edges:
  0 -> 1

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: (s,None) = address(msg.sender).call{value: address(this).balance}()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool)(s)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: withdrawToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(token_ != address(0),Zero Address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: IERC20(token_).transfer(msg.sender,IERC20(token_).balanceOf(address(this)))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: setBaseURI
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: baseURI = newURI

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: drop
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: len = tos.length

  ID: 2
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 3
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 5
  Type: NodeType.IFLOOP
  Expression: i < len

  ID: 6
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 7
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 8
  Type: NodeType.VARIABLE
  Expression: j = 0

  ID: 9
  Type: NodeType.IFLOOP
  Expression: j < qtys[i]

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: _safeMint(tos[i],_totalSupply)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: ++ j

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: ++ i

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 13
  1 -> 4
  2 -> 5
  4 -> 2
  5 -> 8
  5 -> 3
  6 -> 9
  7 -> 12
  8 -> 6
  9 -> 10
  9 -> 7
  10 -> 11
  11 -> 9
  12 -> 5
  13 -> 1

Function: burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_isApprovedOrOwner(_msgSender(),tokenID),caller not owner nor approved)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _burn(tokenID)

Edges:
  0 -> 1
  1 -> 2

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: wpowner = ownerOf(tokenId)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != wpowner,ERC721: approval to current owner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_msgSender() == wpowner || isApprovedForAll(wpowner,_msgSender()),ERC721: not approved or owner)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _approve(to,tokenId)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: setApprovalForAll
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _setApprovalForAll(_msgSender(),_operator,approved)

Edges:
  0 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_isApprovedOrOwner(_msgSender(),tokenId),caller not owner nor approved)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _transfer(from,to,tokenId)

Edges:
  0 -> 1
  1 -> 2

Function: safeTransferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_isApprovedOrOwner(_msgSender(),tokenId),caller not owner nor approved)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _safeTransfer(from,to,tokenId,_data)

Edges:
  0 -> 1
  1 -> 2

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _totalSupply

Edges:
  0 -> 1

Function: getIDsByOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ids = new uint256[](balanceOf(owner))

  ID: 2
  Type: NodeType.IF
  Expression: balanceOf(owner) == 0

  ID: 3
  Type: NodeType.RETURN
  Expression: ids

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: count = 0

  ID: 6
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 7
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 8
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 9
  Type: NodeType.IFLOOP
  Expression: i < _totalSupply

  ID: 10
  Type: NodeType.IF
  Expression: _owners[i] == owner

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: ids[count] = i

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: count ++

  ID: 13
  Type: NodeType.ENDIF
  Expression: 

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 15
  Type: NodeType.RETURN
  Expression: ids

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 8
  6 -> 9
  7 -> 15
  8 -> 6
  9 -> 10
  9 -> 7
  10 -> 11
  10 -> 13
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 9

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(wpowner != address(0),query for the zero address)

  ID: 2
  Type: NodeType.RETURN
  Expression: _balances[wpowner]

Edges:
  0 -> 1
  1 -> 2

Function: ownerOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: wpowner = _owners[tokenId]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(wpowner != address(0),query for nonexistent token)

  ID: 3
  Type: NodeType.RETURN
  Expression: wpowner

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: name
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _name

Edges:
  0 -> 1

Function: symbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _symbol

Edges:
  0 -> 1

Function: tokenURI
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_exists(tokenId),nonexistent token)

  ID: 2
  Type: NodeType.RETURN
  Expression: baseURI

Edges:
  0 -> 1
  1 -> 2

Function: uint2str
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _i == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: 0

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: j = _i

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 7
  Type: NodeType.IFLOOP
  Expression: j != 0

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: len ++

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: j /= 10

  ID: 10
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 11
  Type: NodeType.VARIABLE
  Expression: bstr = new bytes(len)

  ID: 12
  Type: NodeType.VARIABLE
  Expression: k = len

  ID: 13
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 14
  Type: NodeType.IFLOOP
  Expression: _i != 0

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: k = k - 1

  ID: 16
  Type: NodeType.VARIABLE
  Expression: temp = (48 + uint8(_i - _i / 10 * 10))

  ID: 17
  Type: NodeType.VARIABLE
  Expression: b1 = bytes1(temp)

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: bstr[k] = b1

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: _i /= 10

  ID: 20
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 21
  Type: NodeType.RETURN
  Expression: string(bstr)

  ID: 22
  Type: NodeType.RETURN
  Expression: _uintAsString

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 10
  8 -> 9
  9 -> 7
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  14 -> 20
  15 -> 16
  16 -> 17
  17 -> 18
  18 -> 19
  19 -> 14
  20 -> 21

Function: getApproved
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_exists(tokenId),ERC721: query for nonexistent token)

  ID: 2
  Type: NodeType.RETURN
  Expression: _tokenApprovals[tokenId]

Edges:
  0 -> 1
  1 -> 2

Function: isApprovedForAll
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _operatorApprovals[wpowner][_operator]

Edges:
  0 -> 1

Function: _exists
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _owners[tokenId] != address(0)

Edges:
  0 -> 1

Function: _isApprovedOrOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_exists(tokenId),ERC721: nonexistent token)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: wpowner = ownerOf(tokenId)

  ID: 3
  Type: NodeType.RETURN
  Expression: (spender == wpowner || getApproved(tokenId) == spender || isApprovedForAll(wpowner,spender))

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _safeMint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _mint(to,tokenId)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_checkOnERC721Received(address(0),to,tokenId,),ERC721: transfer to non ERC721Receiver implementer)

Edges:
  0 -> 1
  1 -> 2

Function: _mint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _balances[to] += 1

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owners[tokenId] = to

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _totalSupply ++

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),to,tokenId)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: _safeTransfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transfer(from,to,tokenId)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_checkOnERC721Received(from,to,tokenId,_data),ERC721: non ERC721Receiver implementer)

Edges:
  0 -> 1
  1 -> 2

Function: _transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(ownerOf(tokenId) == from,Incorrect owner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf(from) > 0,Zero Balance)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _approve(address(0),tokenId)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _balances[from] -= 1

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _balances[to] += 1

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: _owners[tokenId] = to

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,tokenId)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: _burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_exists(tokenId),Token Does Not Exist)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: owner = ownerOf(tokenId)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _approve(address(0),tokenId)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _balances[owner] -= 1

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: delete _owners[tokenId]

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _totalSupply -= 1

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(owner,address(0),tokenId)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: _approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _tokenApprovals[tokenId] = to

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(ownerOf(tokenId),to,tokenId)

Edges:
  0 -> 1
  1 -> 2

Function: _setApprovalForAll
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(wpowner != _operator,ERC721: approve to caller)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _operatorApprovals[wpowner][_operator] = approved

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ApprovalForAll(wpowner,_operator,approved)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: onReceivedRetval
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: IERC721Receiver.onERC721Received.selector

Edges:
  0 -> 1

Function: _checkOnERC721Received
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: to.isContract()

  ID: 2
  Type: NodeType.TRY
  Expression: retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data)

  ID: 3
  Type: NodeType.CATCH
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: retval == IERC721Receiver.onERC721Received.selector

  ID: 5
  Type: NodeType.CATCH
  Expression: 

  ID: 6
  Type: NodeType.IF
  Expression: reason.length == 0

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: revert(string)(ERC721: non ERC721Receiver implementer)

  ID: 8
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: revert(uint256,uint256)(32 + reason,mload(uint256)(reason))

  ID: 10
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.RETURN
  Expression: true

  ID: 13
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 12
  2 -> 3
  2 -> 5
  2 -> 13
  3 -> 4
  5 -> 6
  6 -> 7
  6 -> 8
  7 -> 11
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 13

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: baseURI = https://lfg.eco/images/chipmetadata.json

Edges:

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _name = CHIP

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _symbol = CHIP

Edges:
  0 -> 1


