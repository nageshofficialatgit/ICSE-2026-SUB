Contract: StormTokenSale
==================================================

Function: buyTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.value > 0,Send ETH to buy tokens)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(tokensSold < TOTAL_TOKENS,All tokens sold)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: tokenAmount = (msg.value * 1000000000000000000) / tokenPrice

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(tokensSold + tokenAmount <= TOTAL_TOKENS,Not enough tokens left)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: tokensSold += tokenAmount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: purchases[msg.sender] += tokenAmount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: _safeTransferETH(owner,msg.value)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Purchase(msg.sender,tokenAmount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: _safeTransferETH
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: (success,None) = to.call{value: amount}()

  ID: 3
  Type: NodeType.IF
  Expression: ! success

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: FailedTransfer(to,amount)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5

Function: setPrice
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: tokenPrice = _priceInWei

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: getTokenAmount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: (ethAmount * 1000000000000000000) / tokenPrice

Edges:
  0 -> 1

Function: withdrawETH
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: balance = address(this).balance

  ID: 2
  Type: NodeType.IF
  Expression: balance > 0

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _safeTransferETH(owner,balance)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  2 -> 4
  3 -> 4
  5 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: buyTokens()

Edges:
  0 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: owner = 0x68356B9D503F36addc4Bf8e45ef5B04AFB08572D

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: tokenPrice = 500000000000000

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOTAL_TOKENS = 1500000

Edges:


