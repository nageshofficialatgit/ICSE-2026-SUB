Contract: Utils
==================================================

Function: Utils
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: safeAdd
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: z = _x + _y

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(z >= _x)

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeSub
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_x >= _y)

  ID: 2
  Type: NodeType.RETURN
  Expression: _x - _y

Edges:
  0 -> 1
  1 -> 2

Function: safeMul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: z = _x * _y

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_x == 0 || z / _x == _y)

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: IOwned
==================================================

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner

  ID: 2
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1
  1 -> 2


Contract: Owned
==================================================

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner

  ID: 2
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1
  1 -> 2

Function: Owned
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_newOwner != owner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: newOwner = _newOwner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: acceptOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnerUpdate(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: newOwner = 0x0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: Managed
==================================================

Function: Managed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: manager = msg.sender

Edges:
  0 -> 1

Function: transferManagement
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_newManager != manager)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: newManager = _newManager

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: managerOnly()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: acceptManagement
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newManager)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ManagerUpdate(manager,newManager)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: manager = newManager

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: newManager = 0x0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: ITokenHolder
==================================================

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner

  ID: 2
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1
  1 -> 2


Contract: TokenHolder
==================================================

Function: Utils
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: safeAdd
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: z = _x + _y

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(z >= _x)

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeSub
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_x >= _y)

  ID: 2
  Type: NodeType.RETURN
  Expression: _x - _y

Edges:
  0 -> 1
  1 -> 2

Function: safeMul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: z = _x * _y

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_x == 0 || z / _x == _y)

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: Owned
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_newOwner != owner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: newOwner = _newOwner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: acceptOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnerUpdate(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: newOwner = 0x0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner

  ID: 2
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1
  1 -> 2

Function: TokenHolder
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: withdrawTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_token.transfer(_to,_amount))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: validAddress(_token)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: validAddress(_to)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: notThis(_to)

Edges:
  0 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 1


Contract: SmartTokenController
==================================================

Function: TokenHolder
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: withdrawTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_token.transfer(_to,_amount))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: validAddress(_token)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: validAddress(_to)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: notThis(_to)

Edges:
  0 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 1

Function: Utils
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: safeAdd
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: z = _x + _y

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(z >= _x)

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeSub
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_x >= _y)

  ID: 2
  Type: NodeType.RETURN
  Expression: _x - _y

Edges:
  0 -> 1
  1 -> 2

Function: safeMul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: z = _x * _y

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_x == 0 || z / _x == _y)

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: Owned
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_newOwner != owner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: newOwner = _newOwner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: acceptOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnerUpdate(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: newOwner = 0x0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner

  ID: 2
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1
  1 -> 2

Function: SmartTokenController
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token = _token

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: validAddress(_token)

Edges:
  0 -> 2
  2 -> 1

Function: transferTokenOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token.transferOwnership(_newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 2
  2 -> 1

Function: acceptTokenOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token.acceptOwnership()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 2
  2 -> 1

Function: disableTokenTransfers
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token.disableTransfers(_disable)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 2
  2 -> 1

Function: withdrawFromToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token.withdrawTokens(_token,_to,_amount)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 2
  2 -> 1


Contract: IERC20Token
==================================================

Function: name
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: name

  ID: 2
  Type: NodeType.RETURN
  Expression: name

Edges:
  0 -> 1
  1 -> 2

Function: symbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: symbol

  ID: 2
  Type: NodeType.RETURN
  Expression: symbol

Edges:
  0 -> 1
  1 -> 2

Function: decimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: decimals

  ID: 2
  Type: NodeType.RETURN
  Expression: decimals

Edges:
  0 -> 1
  1 -> 2

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: totalSupply

  ID: 2
  Type: NodeType.RETURN
  Expression: totalSupply

Edges:
  0 -> 1
  1 -> 2

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _owner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balance

  ID: 3
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _owner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _spender

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: remaining

  ID: 4
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: IEtherToken
==================================================

Function: name
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: name

  ID: 2
  Type: NodeType.RETURN
  Expression: name

Edges:
  0 -> 1
  1 -> 2

Function: symbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: symbol

  ID: 2
  Type: NodeType.RETURN
  Expression: symbol

Edges:
  0 -> 1
  1 -> 2

Function: decimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: decimals

  ID: 2
  Type: NodeType.RETURN
  Expression: decimals

Edges:
  0 -> 1
  1 -> 2

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: totalSupply

  ID: 2
  Type: NodeType.RETURN
  Expression: totalSupply

Edges:
  0 -> 1
  1 -> 2

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _owner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balance

  ID: 3
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _owner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _spender

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: remaining

  ID: 4
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner

  ID: 2
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1
  1 -> 2


Contract: ISmartToken
==================================================

Function: name
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: name

  ID: 2
  Type: NodeType.RETURN
  Expression: name

Edges:
  0 -> 1
  1 -> 2

Function: symbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: symbol

  ID: 2
  Type: NodeType.RETURN
  Expression: symbol

Edges:
  0 -> 1
  1 -> 2

Function: decimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: decimals

  ID: 2
  Type: NodeType.RETURN
  Expression: decimals

Edges:
  0 -> 1
  1 -> 2

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: totalSupply

  ID: 2
  Type: NodeType.RETURN
  Expression: totalSupply

Edges:
  0 -> 1
  1 -> 2

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _owner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balance

  ID: 3
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _owner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _spender

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: remaining

  ID: 4
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner

  ID: 2
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1
  1 -> 2


Contract: IBancorFormula
==================================================


Contract: ITokenChanger
==================================================


Contract: BancorChanger
==================================================

Function: Managed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: manager = msg.sender

Edges:
  0 -> 1

Function: transferManagement
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_newManager != manager)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: newManager = _newManager

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: managerOnly()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: acceptManagement
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newManager)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ManagerUpdate(manager,newManager)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: manager = newManager

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: newManager = 0x0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: SmartTokenController
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token = _token

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: validAddress(_token)

Edges:
  0 -> 2
  2 -> 1

Function: transferTokenOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token.transferOwnership(_newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 2
  2 -> 1

Function: acceptTokenOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token.acceptOwnership()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 2
  2 -> 1

Function: disableTokenTransfers
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token.disableTransfers(_disable)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 2
  2 -> 1

Function: withdrawFromToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token.withdrawTokens(_token,_to,_amount)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 2
  2 -> 1

Function: TokenHolder
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: withdrawTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_token.transfer(_to,_amount))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: validAddress(_token)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: validAddress(_to)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: notThis(_to)

Edges:
  0 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 1

Function: Utils
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: safeAdd
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: z = _x + _y

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(z >= _x)

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeSub
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_x >= _y)

  ID: 2
  Type: NodeType.RETURN
  Expression: _x - _y

Edges:
  0 -> 1
  1 -> 2

Function: safeMul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: z = _x * _y

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_x == 0 || z / _x == _y)

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: Owned
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_newOwner != owner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: newOwner = _newOwner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: acceptOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnerUpdate(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: newOwner = 0x0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner

  ID: 2
  Type: NodeType.RETURN
  Expression: owner

Edges:
  0 -> 1
  1 -> 2

Function: BancorChanger
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: formula = _formula

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: maxChangeFee = _maxChangeFee

  ID: 3
  Type: NodeType.IF
  Expression: address(_reserveToken) != 0x0

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: addReserve(_reserveToken,_reserveRatio,false)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: SmartTokenController(_token)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: validAddress(_formula)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: validMaxChangeFee(_maxChangeFee)

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5
  6 -> 1
  7 -> 8
  8 -> 6

Function: reserveTokenCount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: uint16(reserveTokens.length)

  ID: 2
  Type: NodeType.RETURN
  Expression: count

Edges:
  0 -> 1

Function: changeableTokenCount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: reserveTokenCount() + 1

  ID: 2
  Type: NodeType.RETURN
  Expression: count

Edges:
  0 -> 1

Function: changeableToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _tokenIndex == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: token

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: reserveTokens[_tokenIndex - 1]

  ID: 5
  Type: NodeType.RETURN
  Expression: tokenAddress

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4

Function: setFormula
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: formula = _formula

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: validAddress(_formula)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: notThis(_formula)

Edges:
  0 -> 2
  2 -> 3
  3 -> 4
  4 -> 1

Function: setQuickBuyPath
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: quickBuyPath = _path

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: validChangePath(_path)

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: clearQuickBuyPath
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: quickBuyPath.length = 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

Edges:
  0 -> 2
  2 -> 1

Function: getQuickBuyPathLength
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: quickBuyPath.length

  ID: 2
  Type: NodeType.RETURN
  Expression: length

Edges:
  0 -> 1

Function: hasQuickBuyEtherToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: quickBuyPath.length > 0

Edges:
  0 -> 1

Function: getQuickBuyEtherToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(quickBuyPath.length > 0)

  ID: 2
  Type: NodeType.RETURN
  Expression: IEtherToken(quickBuyPath[0])

  ID: 3
  Type: NodeType.RETURN
  Expression: etherToken

Edges:
  0 -> 1
  1 -> 2

Function: disableChanging
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: changingEnabled = ! _disable

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerOnly()

Edges:
  0 -> 2
  2 -> 1

Function: setChangeFee
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: changeFee = _changeFee

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerOnly()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: validChangeFee(_changeFee)

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: getChangeFeeAmount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: safeMul(_amount,changeFee) / MAX_CHANGE_FEE

  ID: 2
  Type: NodeType.RETURN
  Expression: feeAmount

Edges:
  0 -> 1

Function: addReserve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_token != token && ! reserves[_token].isSet && totalReserveRatio + _ratio <= MAX_CRR)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: reserves[_token].virtualBalance = 0

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: reserves[_token].ratio = _ratio

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: reserves[_token].isVirtualBalanceEnabled = _enableVirtualBalance

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: reserves[_token].isPurchaseEnabled = true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: reserves[_token].isSet = true

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: reserveTokens.push(_token)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: totalReserveRatio += _ratio

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: inactive()

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: validAddress(_token)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: notThis(_token)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: validReserveRatio(_ratio)

Edges:
  0 -> 9
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 1

Function: updateReserve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: reserve = reserves[_reserveToken]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(totalReserveRatio - reserve.ratio + _ratio <= MAX_CRR)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: totalReserveRatio = totalReserveRatio - reserve.ratio + _ratio

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: reserve.ratio = _ratio

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: reserve.isVirtualBalanceEnabled = _enableVirtualBalance

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: reserve.virtualBalance = _virtualBalance

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: validReserve(_reserveToken)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: validReserveRatio(_ratio)

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 8
  8 -> 9
  9 -> 1

Function: disableReservePurchases
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: reserves[_reserveToken].isPurchaseEnabled = ! _disable

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ownerOnly()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: validReserve(_reserveToken)

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: getReserveBalance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: reserve = reserves[_reserveToken]

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: validReserve(_reserveToken)

  ID: 4
  Type: NodeType.IF
  Expression: reserve.isVirtualBalanceEnabled

  ID: 5
  Type: NodeType.RETURN
  Expression: reserve.virtualBalance

  ID: 6
  Type: NodeType.RETURN
  Expression: _reserveToken.balanceOf(this)

  ID: 8
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 3
  1 -> 4
  3 -> 1
  4 -> 5
  4 -> 6

Function: getReturn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_fromToken != _toToken)

  ID: 2
  Type: NodeType.IF
  Expression: _toToken == token

  ID: 3
  Type: NodeType.RETURN
  Expression: getPurchaseReturn(_fromToken,_amount)

  ID: 4
  Type: NodeType.IF
  Expression: _fromToken == token

  ID: 5
  Type: NodeType.RETURN
  Expression: getSaleReturn(_toToken,_amount)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.VARIABLE
  Expression: purchaseReturnAmount = getPurchaseReturn(_fromToken,_amount)

  ID: 9
  Type: NodeType.RETURN
  Expression: getSaleReturn(_toToken,purchaseReturnAmount,safeAdd(token.totalSupply(),purchaseReturnAmount))

  ID: 10
  Type: NodeType.RETURN
  Expression: amount

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  8 -> 9

Function: getPurchaseReturn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: reserve = reserves[_reserveToken]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(reserve.isPurchaseEnabled)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: tokenSupply = token.totalSupply()

  ID: 4
  Type: NodeType.VARIABLE
  Expression: reserveBalance = getReserveBalance(_reserveToken)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: amount = formula.calculatePurchaseReturn(tokenSupply,reserveBalance,reserve.ratio,_depositAmount)

  ID: 6
  Type: NodeType.VARIABLE
  Expression: feeAmount = getChangeFeeAmount(amount)

  ID: 7
  Type: NodeType.RETURN
  Expression: safeSub(amount,feeAmount)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: active()

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: validReserve(_reserveToken)

  ID: 10
  Type: NodeType.RETURN
  Expression: amount

Edges:
  0 -> 8
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  8 -> 9
  9 -> 1

Function: getSaleReturn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: reserve = reserves[_reserveToken]

  ID: 2
  Type: NodeType.VARIABLE
  Expression: reserveBalance = getReserveBalance(_reserveToken)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: amount = formula.calculateSaleReturn(_totalSupply,reserveBalance,reserve.ratio,_sellAmount)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: feeAmount = getChangeFeeAmount(amount)

  ID: 5
  Type: NodeType.RETURN
  Expression: safeSub(amount,feeAmount)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: active()

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: validReserve(_reserveToken)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: greaterThanZero(_totalSupply)

  ID: 9
  Type: NodeType.RETURN
  Expression: amount

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 7
  7 -> 8
  8 -> 1

Function: change
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_fromToken != _toToken)

  ID: 2
  Type: NodeType.IF
  Expression: _toToken == token

  ID: 3
  Type: NodeType.RETURN
  Expression: buy(_fromToken,_amount,_minReturn)

  ID: 4
  Type: NodeType.IF
  Expression: _fromToken == token

  ID: 5
  Type: NodeType.RETURN
  Expression: sell(_toToken,_amount,_minReturn)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.VARIABLE
  Expression: purchaseAmount = buy(_fromToken,_amount,1)

  ID: 9
  Type: NodeType.RETURN
  Expression: sell(_toToken,purchaseAmount,_minReturn)

  ID: 10
  Type: NodeType.RETURN
  Expression: amount

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  8 -> 9

Function: buy
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: amount = getPurchaseReturn(_reserveToken,_depositAmount)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(amount != 0 && amount >= _minReturn)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: reserve = reserves[_reserveToken]

  ID: 4
  Type: NodeType.IF
  Expression: reserve.isVirtualBalanceEnabled

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: reserve.virtualBalance = safeAdd(reserve.virtualBalance,_depositAmount)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: msg.sender != address(this)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_reserveToken.transferFrom(msg.sender,this,_depositAmount))

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: token.issue(msg.sender,amount)

  ID: 11
  Type: NodeType.VARIABLE
  Expression: reserveAmount = safeMul(getReserveBalance(_reserveToken),MAX_CRR)

  ID: 12
  Type: NodeType.VARIABLE
  Expression: tokenAmount = safeMul(token.totalSupply(),reserve.ratio)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: Change(_reserveToken,token,msg.sender,_depositAmount,amount,reserveAmount,tokenAmount)

  ID: 14
  Type: NodeType.RETURN
  Expression: amount

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: changingAllowed()

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: greaterThanZero(_minReturn)

  ID: 17
  Type: NodeType.RETURN
  Expression: amount

Edges:
  0 -> 15
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  15 -> 16
  16 -> 1

Function: sell
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_sellAmount <= token.balanceOf(msg.sender))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: amount = getSaleReturn(_reserveToken,_sellAmount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(amount != 0 && amount >= _minReturn)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: tokenSupply = token.totalSupply()

  ID: 5
  Type: NodeType.VARIABLE
  Expression: reserveBalance = getReserveBalance(_reserveToken)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(amount < reserveBalance || (amount == reserveBalance && _sellAmount == tokenSupply))

  ID: 7
  Type: NodeType.VARIABLE
  Expression: reserve = reserves[_reserveToken]

  ID: 8
  Type: NodeType.IF
  Expression: reserve.isVirtualBalanceEnabled

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: reserve.virtualBalance = safeSub(reserve.virtualBalance,amount)

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: token.destroy(msg.sender,_sellAmount)

  ID: 12
  Type: NodeType.IF
  Expression: msg.sender != address(this)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_reserveToken.transfer(msg.sender,amount))

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

  ID: 15
  Type: NodeType.VARIABLE
  Expression: reserveAmount = safeMul(getReserveBalance(_reserveToken),MAX_CRR)

  ID: 16
  Type: NodeType.VARIABLE
  Expression: tokenAmount = safeMul(token.totalSupply(),reserve.ratio)

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: Change(token,_reserveToken,msg.sender,_sellAmount,amount,tokenAmount,reserveAmount)

  ID: 18
  Type: NodeType.RETURN
  Expression: amount

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: changingAllowed()

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: greaterThanZero(_minReturn)

  ID: 21
  Type: NodeType.RETURN
  Expression: amount

Edges:
  0 -> 19
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  8 -> 10
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  12 -> 14
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18
  19 -> 20
  20 -> 1

Function: quickChange
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: fromToken = _path[0]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: claimTokens(fromToken,msg.sender,_amount)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: pathLength = _path.length

  ID: 7
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 8
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 9
  Type: NodeType.VARIABLE
  Expression: i = 1

  ID: 10
  Type: NodeType.IFLOOP
  Expression: i < pathLength

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: smartToken = ISmartToken(_path[i])

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: toToken = _path[i + 1]

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: changer = BancorChanger(smartToken.owner())

  ID: 14
  Type: NodeType.IF
  Expression: smartToken != fromToken

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: ensureAllowance(fromToken,changer,_amount)

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: fromToken = toToken

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: i += 2

  ID: 20
  Type: NodeType.IF
  Expression: changer.hasQuickBuyEtherToken() && changer.getQuickBuyEtherToken() == toToken

  ID: 21
  Type: NodeType.VARIABLE
  Expression: etherToken = IEtherToken(toToken)

  ID: 22
  Type: NodeType.EXPRESSION
  Expression: etherToken.withdrawTo(msg.sender,_amount)

  ID: 23
  Type: NodeType.IF
  Expression: msg.sender != address(this)

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(toToken.transfer(msg.sender,_amount))

  ID: 25
  Type: NodeType.ENDIF
  Expression: 

  ID: 26
  Type: NodeType.ENDIF
  Expression: 

  ID: 27
  Type: NodeType.RETURN
  Expression: _amount

  ID: 28
  Type: NodeType.EXPRESSION
  Expression: validChangePath(_path)

  ID: 29
  Type: NodeType.IF
  Expression: i == pathLength - 2

  ID: 30
  Type: NodeType.EXPRESSION
  Expression: _amount = changer.change(fromToken,toToken,_amount,_minReturn)

  ID: 31
  Type: NodeType.EXPRESSION
  Expression: _amount = changer.change(fromToken,toToken,_amount,1)

  ID: 32
  Type: NodeType.ENDIF
  Expression: 

  ID: 33
  Type: NodeType.RETURN
  Expression: amount

Edges:
  0 -> 28
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 9
  7 -> 10
  8 -> 20
  9 -> 7
  10 -> 11
  10 -> 8
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  14 -> 16
  15 -> 16
  16 -> 29
  18 -> 19
  19 -> 10
  20 -> 21
  20 -> 23
  21 -> 22
  22 -> 26
  23 -> 24
  23 -> 25
  24 -> 25
  25 -> 26
  26 -> 27
  28 -> 1
  29 -> 30
  29 -> 31
  30 -> 32
  31 -> 32
  32 -> 18

Function: quickBuy
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(quickBuyPath.length > 0)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: etherToken = getQuickBuyEtherToken()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: etherToken.deposit.value(msg.value)()

  ID: 4
  Type: NodeType.VARIABLE
  Expression: returnAmount = this.quickChange(quickBuyPath,msg.value,_minReturn)

  ID: 5
  Type: NodeType.VARIABLE
  Expression: toToken = quickBuyPath[quickBuyPath.length - 1]

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(toToken.transfer(msg.sender,returnAmount))

  ID: 7
  Type: NodeType.RETURN
  Expression: returnAmount

  ID: 8
  Type: NodeType.RETURN
  Expression: amount

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: ensureAllowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _spender == address(this)

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: _token.allowance(this,_spender) >= _value

  ID: 5
  Type: NodeType.RETURN
  Expression: 

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: _token.allowance(this,_spender) != 0

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_token.approve(_spender,0))

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_token.approve(_spender,_value))

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  8 -> 9
  9 -> 10

Function: claimTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _from == address(this)

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: _token == token

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: token.destroy(_from,_amount)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: token.issue(this,_amount)

  ID: 7
  Type: NodeType.RETURN
  Expression: 

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_token.transferFrom(_from,this,_amount))

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 8
  5 -> 6
  6 -> 7
  8 -> 9

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: quickBuy(1)

Edges:
  0 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: version = 0.3

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: changerType = bancor

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalReserveRatio = 0

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: maxChangeFee = 0

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: changeFee = 0

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: changingEnabled = true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_CRR = 1000000

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_CHANGE_FEE = 1000000

Edges:
  0 -> 1


