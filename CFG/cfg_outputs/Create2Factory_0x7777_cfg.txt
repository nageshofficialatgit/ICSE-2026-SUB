Contract: Create2Factory
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner != address(0),Create2Factory: new owner is the zero address)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: oldOwner = owner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(oldOwner,newOwner)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: DeployMainContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(mainContract == address(0),Create2Factory: main contract already deployed)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(initCode.length > 0,InitCode cannot be empty)

  ID: 3
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: deployedAddress = create2(uint256,uint256,uint256,uint256)(0,initCode + 32,mload(uint256)(initCode),salt)

  ID: 5
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(deployedAddress != address(0),Create2Factory: deployment failed)

  ID: 7
  Type: NodeType.VARIABLE
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: (success,None) = deployedAddress.call(abi.encodeWithSignature(transferOwnership(address),msg.sender))

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,Create2Factory: transferOwnership call failed)

  ID: 10
  Type: NodeType.VARIABLE
  Expression: 

  ID: 11
  Type: NodeType.VARIABLE
  Expression: 

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: (success2,result) = deployedAddress.call(abi.encodeWithSignature(owner()))

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success2,Create2Factory: failed to retrieve new owner)

  ID: 14
  Type: NodeType.VARIABLE
  Expression: newOwner = abi.decode(result,(address))

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner == msg.sender,Create2Factory: ownership transfer did not succeed)

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: mainContract = deployedAddress

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: mainContractDeployed(deployedAddress)

  ID: 18
  Type: NodeType.VARIABLE
  Expression: previousOwner = owner

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: owner = address(0)

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: OwnershipRenounced(previousOwner)

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: Deployed(deployedAddress,salt)

  ID: 22
  Type: NodeType.RETURN
  Expression: deployedAddress

  ID: 23
  Type: NodeType.RETURN
  Expression: deployedAddress

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18
  18 -> 19
  19 -> 20
  20 -> 21
  21 -> 22

Function: computeAddress
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: predictedAddress = address(uint160(uint256(keccak256(bytes)(abi.encodePacked(bytes1(0xff),address(this),salt,initCodeHash)))))

  ID: 2
  Type: NodeType.RETURN
  Expression: predictedAddress

Edges:
  0 -> 1
  1 -> 2

Function: computeAddressWithCode
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: computeAddress(salt,keccak256(bytes)(initCode))

Edges:
  0 -> 1

Function: isContractDeployed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: size = extcodesize(uint256)(deployedAddress)

  ID: 4
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 5
  Type: NodeType.RETURN
  Expression: size > 0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5


