Contract: IERC20
==================================================


Contract: TokenTimelock
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(releaseTime_ > block.timestamp,TokenTimelock: release time is before current time)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _token = token_

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _beneficiary = beneficiary_

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _releaseTime = releaseTime_

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: token
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _token

Edges:
  0 -> 1

Function: beneficiary
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _beneficiary

Edges:
  0 -> 1

Function: releaseTime
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _releaseTime

Edges:
  0 -> 1

Function: release
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp >= _releaseTime,TokenTimelock: current time is before release time)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: amount = _token.balanceOf(address(this))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,TokenTimelock: no tokens to release)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _token.transfer(_beneficiary,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


