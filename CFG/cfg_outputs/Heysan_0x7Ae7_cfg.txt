Contract: Heysan
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply = 1000000 * (10 ** uint256(decimals))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] = totalSupply

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= value,Insufficient balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,to,value)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowance[msg.sender][spender] = value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,value)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[from] >= value,Insufficient balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowance[from][msg.sender] >= value,Allowance exceeded)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[from] -= value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: allowance[from][msg.sender] -= value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,value)

  ID: 7
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: mint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: totalSupply += amount

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balanceOf[owner] += amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),owner,amount)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= amount,Insufficient balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply -= amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,address(0),amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = HeysanToken

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = MST

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

Edges:
  0 -> 1
  1 -> 2


