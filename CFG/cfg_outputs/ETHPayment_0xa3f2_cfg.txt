Contract: ETHPayment
==================================================

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(spender != address(0),ETHPayment: approve to the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _allowances[msg.sender][spender] = amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,amount)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _allowances[owner][spender]

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),ETHPayment: transfer to the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(address(this).balance >= amount,ETHPayment: insufficient balance)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: address(to).transfer(amount)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,to,amount)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(sender != address(0),ETHPayment: transfer from the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),ETHPayment: transfer to the zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_allowances[sender][msg.sender] >= amount,ETHPayment: allowance exceeded)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(address(this).balance >= amount,ETHPayment: insufficient balance)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _allowances[sender][msg.sender] -= amount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: address(to).transfer(amount)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(sender,to,amount)

  ID: 8
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: balance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: address(this).balance

Edges:
  0 -> 1


