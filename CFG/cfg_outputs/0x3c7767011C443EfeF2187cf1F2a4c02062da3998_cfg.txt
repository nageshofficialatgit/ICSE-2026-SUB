Contract: Ownable
==================================================

Function: Ownable
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(newOwner != address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1


Contract: CratePreSale
==================================================

Function: Ownable
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(newOwner != address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: getPrice
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: currentPrice

Edges:
  0 -> 1

Function: getRobotsForUser
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: userToRobots[_user]

Edges:
  0 -> 1

Function: incrementPrice
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: currentPrice == 100000000000000000

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: appreciationRateWei = 200000000000000

  ID: 3
  Type: NodeType.IF
  Expression: currentPrice == 200000000000000000

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: appreciationRateWei = 100000000000000

  ID: 5
  Type: NodeType.IF
  Expression: currentPrice == 300000000000000000

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: appreciationRateWei = 50000000000000

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: currentPrice += appreciationRateWei

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 9
  3 -> 4
  3 -> 5
  4 -> 8
  5 -> 6
  5 -> 7
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10

Function: purchaseCrate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now < PRESALE_END_TIMESTAMP)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(cratesSold < MAX_CRATES_TO_SELL)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.value >= currentPrice)

  ID: 4
  Type: NodeType.IF
  Expression: msg.value > currentPrice

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: msg.sender.transfer(msg.value - currentPrice)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: userCrateCount[msg.sender] += 1

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: cratesSold ++

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: incrementPrice()

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: userToRobots[msg.sender].push(genRandom())

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: LogCratePurchase(msg.sender,msg.value,1)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11

Function: genRandom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: rand = uint256(keccak256()(block.blockhash(block.number - 1)))

  ID: 2
  Type: NodeType.RETURN
  Expression: uint256(rand % (10 ** 20))

Edges:
  0 -> 1
  1 -> 2

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner.transfer(this.balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: appreciationRateWei = 400000000000000

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: currentPrice = appreciationRateWei

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_CRATES_TO_SELL = 3900

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PRESALE_END_TIMESTAMP = 1518699600

Edges:
  0 -> 1


