Contract: ERC20
==================================================


Contract: StatusContribution
==================================================


Contract: DynamicCeiling
==================================================


Contract: StatusBuyer
==================================================

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: user_deposit = deposits[msg.sender]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: deposits[msg.sender] = 0

  ID: 3
  Type: NodeType.VARIABLE
  Expression: contract_eth_balance = this.balance - bounty

  ID: 4
  Type: NodeType.VARIABLE
  Expression: contract_snt_balance = token.balanceOf(address(this))

  ID: 5
  Type: NodeType.VARIABLE
  Expression: contract_value = (contract_eth_balance * 10000) + contract_snt_balance

  ID: 6
  Type: NodeType.VARIABLE
  Expression: eth_amount = (user_deposit * contract_eth_balance * 10000) / contract_value

  ID: 7
  Type: NodeType.VARIABLE
  Expression: snt_amount = 10000 * ((user_deposit * contract_snt_balance) / contract_value)

  ID: 8
  Type: NodeType.VARIABLE
  Expression: fee = 0

  ID: 9
  Type: NodeType.IF
  Expression: simulated_snt[msg.sender] < snt_amount

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: fee = (snt_amount - simulated_snt[msg.sender]) / 100

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.IF
  Expression: ! token.transfer(msg.sender,snt_amount - fee)

  ID: 13
  Type: NodeType.THROW
  Expression: 

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

  ID: 15
  Type: NodeType.IF
  Expression: ! token.transfer(developer,fee)

  ID: 16
  Type: NodeType.THROW
  Expression: 

  ID: 17
  Type: NodeType.ENDIF
  Expression: 

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: msg.sender.transfer(eth_amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  9 -> 11
  10 -> 11
  11 -> 12
  12 -> 13
  12 -> 14
  14 -> 15
  15 -> 16
  15 -> 17
  17 -> 18

Function: add_to_bounty
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: bought_tokens

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: bounty += msg.value

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4

Function: simulate_ico
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: tx.gasprice > sale.maxGasPrice()

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: block.number < sale.startBlock()

  ID: 5
  Type: NodeType.THROW
  Expression: 

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: dynamic.revealedCurves() == 0

  ID: 8
  Type: NodeType.THROW
  Expression: 

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.VARIABLE
  Expression: 

  ID: 11
  Type: NodeType.VARIABLE
  Expression: 

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: (limit,slopeFactor) = dynamic.curves(dynamic.currentIndex())

  ID: 13
  Type: NodeType.VARIABLE
  Expression: totalNormalCollected = sale.totalNormalCollected()

  ID: 14
  Type: NodeType.IF
  Expression: limit <= totalNormalCollected

  ID: 15
  Type: NodeType.THROW
  Expression: 

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: simulated_snt[msg.sender] += ((limit - totalNormalCollected) / slopeFactor)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  14 -> 16
  16 -> 17

Function: buy
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: bought_tokens

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: bought_tokens = true

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: sale.proxyPayment.value(this.balance - bounty)(address(this))

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: msg.sender.transfer(bounty)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: default_helper
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! bought_tokens

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: deposits[msg.sender] += msg.value

  ID: 3
  Type: NodeType.IF
  Expression: deposits[msg.sender] > 30000000000000000000

  ID: 4
  Type: NodeType.THROW
  Expression: 

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.IF
  Expression: msg.value != 0

  ID: 7
  Type: NodeType.THROW
  Expression: 

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.IF
  Expression: sale.finalizedBlock() == 0

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: simulate_ico()

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: withdraw()

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 6
  2 -> 3
  3 -> 4
  3 -> 5
  5 -> 13
  6 -> 7
  6 -> 8
  8 -> 9
  9 -> 10
  9 -> 11
  10 -> 12
  11 -> 12
  12 -> 13

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == address(sale)

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: default_helper()

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: sale = StatusContribution(0x55d34b686aa8C04921397c5807DB9ECEdba00a4c)

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: dynamic = DynamicCeiling(0xc636e73Ff29fAEbCABA9E0C3f6833EaD179FFd5c)

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: token = ERC20(0x744d70FDBE2Ba4CF95131626614a1763DF805B9E)

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: developer = 0x4e6A1c57CdBfd97e8efe831f8f4418b1F2A09e6e

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


