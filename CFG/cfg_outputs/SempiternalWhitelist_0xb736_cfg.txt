Contract: SempiternalWhitelist
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_tokenContract != address(0),Token contract cannot be zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: tokenContract = _tokenContract

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: addToWhitelist
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_address != address(0),Cannot add zero address to whitelist)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! whitelist[_address],Address already whitelisted)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: whitelist[_address] = true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: whitelistedAddresses.push(_address)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: AddedToWhitelist(_address)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: addMultipleToWhitelist
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 2
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 3
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 4
  Type: NodeType.IFLOOP
  Expression: i < _addresses.length

  ID: 5
  Type: NodeType.VARIABLE
  Expression: _address = _addresses[i]

  ID: 6
  Type: NodeType.IF
  Expression: _address != address(0) && ! whitelist[_address]

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: whitelist[_address] = true

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: whitelistedAddresses.push(_address)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: AddedToWhitelist(_address)

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 12
  1 -> 4
  3 -> 1
  4 -> 5
  4 -> 2
  5 -> 6
  6 -> 7
  6 -> 10
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 4
  12 -> 3

Function: removeFromWhitelist
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(whitelist[_address],Address not whitelisted)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: whitelist[_address] = false

  ID: 3
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 4
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 6
  Type: NodeType.IFLOOP
  Expression: i < whitelistedAddresses.length

  ID: 7
  Type: NodeType.IF
  Expression: whitelistedAddresses[i] == _address

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: whitelistedAddresses[i] = whitelistedAddresses[whitelistedAddresses.length - 1]

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: whitelistedAddresses.pop()

  ID: 10
  Type: NodeType.BREAK
  Expression: 

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: RemovedFromWhitelist(_address)

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 14
  1 -> 2
  2 -> 5
  3 -> 6
  4 -> 13
  5 -> 3
  6 -> 7
  6 -> 4
  7 -> 8
  7 -> 11
  8 -> 9
  9 -> 10
  10 -> 4
  11 -> 12
  12 -> 6
  14 -> 1

Function: isWhitelisted
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: whitelist[_address]

Edges:
  0 -> 1

Function: getAllWhitelistedAddresses
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: whitelistedAddresses

Edges:
  0 -> 1

Function: getWhitelistCount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: whitelistedAddresses.length

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner != address(0),New owner cannot be zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: selfRegister
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! whitelist[msg.sender],Address already whitelisted)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: whitelist[msg.sender] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: whitelistedAddresses.push(msg.sender)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: AddedToWhitelist(msg.sender)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


