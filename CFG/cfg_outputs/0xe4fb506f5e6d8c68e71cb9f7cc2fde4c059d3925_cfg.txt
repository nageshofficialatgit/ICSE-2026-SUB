Contract: Owned
==================================================

Function: changeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: isOwner()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: newOwner = addr

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: confirmOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == newOwner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: isOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: owner == msg.sender

Edges:
  0 -> 1

Function: WthdrawAllToCreator
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == creator

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: creator.transfer(this.balance)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: WthdrawToCreator
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == creator

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: creator.transfer(val)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: WthdrawTo
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == creator

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: addr.transfer(val)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: owner = msg.sender

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: creator = msg.sender

Edges:
  0 -> 1


Contract: EthMultiplicator
==================================================

Function: changeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: isOwner()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: newOwner = addr

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: confirmOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == newOwner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: isOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: owner == msg.sender

Edges:
  0 -> 1

Function: WthdrawAllToCreator
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == creator

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: creator.transfer(this.balance)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: WthdrawToCreator
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == creator

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: creator.transfer(val)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: WthdrawTo
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == creator

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: addr.transfer(val)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: initEthMultiplicator
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Manager = _manager

Edges:
  0 -> 1
  1 -> 2

Function: isManager
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: (msg.sender == Manager)

Edges:
  0 -> 1

Function: canManage
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: (msg.sender == Manager || msg.sender == owner)

Edges:
  0 -> 1

Function: ChangeManager
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: canManage()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: NewManager = _newManager

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: ConfirmManager
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == NewManager

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Manager = NewManager

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: StartPaymens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: canManage()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: AuthorizePayments(true)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: StartOfPayments(msg.sender,now)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 4
  2 -> 3
  3 -> 4

Function: StopPaymens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: canManage()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: AuthorizePayments(false)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: EndOfPayments(msg.sender,now)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 4
  2 -> 3
  3 -> 4

Function: AuthorizePayments
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: isOwner()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: paymentsAllowed = val

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: SetPrcntRate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: canManage()

  ID: 2
  Type: NodeType.IF
  Expression: val != PrcntRate

  ID: 3
  Type: NodeType.IF
  Expression: val >= 1

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: PrcntRate = val

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 7
  2 -> 3
  2 -> 6
  3 -> 4
  3 -> 5
  4 -> 5
  5 -> 6
  6 -> 7

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: ToSponsor()

Edges:
  0 -> 1

Function: ToSponsor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.value >= 1000000000000000000

  ID: 2
  Type: NodeType.IF
  Expression: Sponsors[msg.sender] == 0

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: SponsorsQty ++

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Sponsors[msg.sender] += msg.value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: CharterCapital += msg.value

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 7
  2 -> 3
  2 -> 4
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: WithdrawToSponsor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: Sponsors[_addr] > 0

  ID: 2
  Type: NodeType.IF
  Expression: isOwner()

  ID: 3
  Type: NodeType.IF
  Expression: _addr.send(_wei)

  ID: 4
  Type: NodeType.IF
  Expression: CharterCapital >= _wei

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: CharterCapital -= _wei

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: CharterCapital = 0

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 10
  2 -> 3
  2 -> 9
  3 -> 4
  3 -> 8
  4 -> 5
  4 -> 6
  5 -> 7
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10

Function: Deposit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: FixProfit()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Lenders[msg.sender].Amount += msg.value

Edges:
  0 -> 1
  1 -> 2

Function: CheckProfit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: ((Lenders[addr].Amount / 100) * PrcntRate) * ((now - Lenders[addr].LastLendTime) / 86400)

Edges:
  0 -> 1

Function: FixProfit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: Lenders[msg.sender].Amount > 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Lenders[msg.sender].Reserved += CheckProfit(msg.sender)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Lenders[msg.sender].LastLendTime = now

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4

Function: WitdrawLenderProfit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: paymentsAllowed

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: FixProfit()

  ID: 3
  Type: NodeType.VARIABLE
  Expression: profit = Lenders[msg.sender].Reserved

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Lenders[msg.sender].Reserved = 0

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: msg.sender.transfer(profit)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 6
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: creator = msg.sender

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PrcntRate = 5

Edges:
  0 -> 1


