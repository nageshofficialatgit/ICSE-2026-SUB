Contract: Shield
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(initialSupply > 0,Initial supply must be greater than 0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply = initialSupply * 10 ** uint256(decimals)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] = totalSupply

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),msg.sender,totalSupply)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),Cannot transfer to zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(this),Cannot transfer to contract address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(value > 0,Transfer amount must be greater than 0)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= value,Insufficient balance)

  ID: 5
  Type: NodeType.VARIABLE
  Expression: senderBalance = balanceOf[msg.sender]

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] = senderBalance - value

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += value

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,to,value)

  ID: 9
  Type: NodeType.RETURN
  Expression: true

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

  ID: 11
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 10
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  10 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(spender != address(0),Cannot approve to zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(spender != msg.sender,Cannot approve to self)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: allowance[msg.sender][spender] = value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,value)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

  ID: 7
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(from != address(0),Cannot transfer from zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),Cannot transfer to zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(this),Cannot transfer to contract address)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(value > 0,Transfer amount must be greater than 0)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[from] >= value,Insufficient balance)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowance[from][msg.sender] >= value,Insufficient allowance)

  ID: 7
  Type: NodeType.VARIABLE
  Expression: fromBalance = balanceOf[from]

  ID: 8
  Type: NodeType.VARIABLE
  Expression: fromAllowance = allowance[from][msg.sender]

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: balanceOf[from] = fromBalance - value

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: allowance[from][msg.sender] = fromAllowance - value

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += value

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,value)

  ID: 13
  Type: NodeType.RETURN
  Expression: true

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

  ID: 15
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 14
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  14 -> 1

Function: allowanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowance[owner][spender]

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = ethShield.ai

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = $SHIELD

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

Edges:
  0 -> 1
  1 -> 2


