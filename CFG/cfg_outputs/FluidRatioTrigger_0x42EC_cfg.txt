Contract: MainnetFluidAddresses
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FLUID_VAULT_RESOLVER = 0x814c8C7ceb1411B364c2940c4b9380e739e06686

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FLUID_LENDING_RESOLVER = 0xC215485C572365AE87f908ad35233EC2572A3BEC

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: F_WETH_TOKEN_ADDR = 0x90551c1795392094FE6D29B758EcCD233cFAa260

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ETH_ADDR = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: DFSMath
==================================================

Function: signed256
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(x <= uint256(type()(int256).max))

  ID: 2
  Type: NodeType.RETURN
  Expression: int256(x)

Edges:
  0 -> 1
  1 -> 2


Contract: FluidHelper
==================================================

Function: signed256
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(x <= uint256(type()(int256).max))

  ID: 2
  Type: NodeType.RETURN
  Expression: int256(x)

Edges:
  0 -> 1
  1 -> 2

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FLUID_VAULT_RESOLVER = 0x814c8C7ceb1411B364c2940c4b9380e739e06686

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FLUID_LENDING_RESOLVER = 0xC215485C572365AE87f908ad35233EC2572A3BEC

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: F_WETH_TOKEN_ADDR = 0x90551c1795392094FE6D29B758EcCD233cFAa260

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ETH_ADDR = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: IFluidVaultResolver
==================================================


Contract: IERC20
==================================================


Contract: IWETH
==================================================


Contract: Address
==================================================

Function: isContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470

  ID: 3
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: codehash = extcodehash(uint256)(account)

  ID: 5
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 6
  Type: NodeType.RETURN
  Expression: (codehash != accountHash && codehash != 0x0)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: sendValue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: balance = address(this).balance

  ID: 2
  Type: NodeType.IF
  Expression: balance < amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: revert InsufficientBalance(uint256,uint256)(balance,amount)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: (success,None) = recipient.call{value: amount}()

  ID: 7
  Type: NodeType.IF
  Expression: ! (success)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: revert SendingValueFail()()

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  8 -> 9

Function: functionCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _functionCallWithValue(target,data,0,errorMessage)

Edges:
  0 -> 1

Function: functionCallWithValue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: balance = address(this).balance

  ID: 2
  Type: NodeType.IF
  Expression: balance < value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: revert InsufficientBalanceForCall(uint256,uint256)(balance,value)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.RETURN
  Expression: _functionCallWithValue(target,data,value,errorMessage)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  3 -> 4
  4 -> 5

Function: _functionCallWithValue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! (isContract(target))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert NonContractCall()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: (success,returndata) = target.call{value: weiValue}(data)

  ID: 7
  Type: NodeType.IF
  Expression: success

  ID: 8
  Type: NodeType.RETURN
  Expression: returndata

  ID: 9
  Type: NodeType.IF
  Expression: returndata.length > 0

  ID: 10
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 11
  Type: NodeType.VARIABLE
  Expression: 

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)

  ID: 14
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: revert(string)(errorMessage)

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 17
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  9 -> 10
  9 -> 15
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 16
  15 -> 16
  16 -> 17


Contract: SafeERC20
==================================================

Function: safeTransfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

Edges:
  0 -> 1

Function: safeTransferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

Edges:
  0 -> 1

Function: safeApprove
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: approvalCall = abi.encodeWithSelector(token.approve.selector,spender,value)

  ID: 2
  Type: NodeType.IF
  Expression: ! _callOptionalReturnBool(token,approvalCall)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,0))

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _callOptionalReturn(token,approvalCall)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 5
  3 -> 4
  4 -> 5

Function: _callOptionalReturn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: returndata = address(token).functionCall(data,SafeERC20: low-level call failed)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(returndata.length == 0 || abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)

Edges:
  0 -> 1
  1 -> 2

Function: _callOptionalReturnBool
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: (success,returndata) = address(token).call(data)

  ID: 4
  Type: NodeType.RETURN
  Expression: success && (returndata.length == 0 || abi.decode(returndata,(bool))) && address(token).code.length > 0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: TokenUtils
==================================================

Function: approveToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _tokenAddr == ETH_ADDR

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: IERC20(_tokenAddr).allowance(address(this),_to) < _amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: IERC20(_tokenAddr).safeApprove(_to,_amount)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6

Function: pullTokensIfNeeded
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _amount == type()(uint256).max

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _amount = getBalance(_token,_from)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: _from != address(0) && _from != address(this) && _token != ETH_ADDR && _amount != 0

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: IERC20(_token).safeTransferFrom(_from,address(this),_amount)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.RETURN
  Expression: _amount

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7

Function: withdrawTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _amount == type()(uint256).max

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _amount = getBalance(_token,address(this))

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: _to != address(0) && _to != address(this) && _amount != 0

  ID: 5
  Type: NodeType.IF
  Expression: _token != ETH_ADDR

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: IERC20(_token).safeTransfer(_to,_amount)

  ID: 7
  Type: NodeType.VARIABLE
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: (success,None) = _to.call{value: _amount}()

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,Eth send fail)

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.RETURN
  Expression: _amount

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 11
  5 -> 6
  5 -> 7
  6 -> 10
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12

Function: depositWeth
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: IWETH(WETH_ADDR).deposit{value: _amount}()

Edges:
  0 -> 1

Function: withdrawWeth
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: IWETH(WETH_ADDR).withdraw(_amount)

Edges:
  0 -> 1

Function: getBalance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _tokenAddr == ETH_ADDR

  ID: 2
  Type: NodeType.RETURN
  Expression: _acc.balance

  ID: 3
  Type: NodeType.RETURN
  Expression: IERC20(_tokenAddr).balanceOf(_acc)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3

Function: getTokenDecimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _token == ETH_ADDR

  ID: 2
  Type: NodeType.RETURN
  Expression: 18

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: IERC20(_token).decimals()

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: WETH_ADDR = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ETH_ADDR = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

Edges:
  0 -> 1


Contract: FluidRatioHelper
==================================================

Function: signed256
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(x <= uint256(type()(int256).max))

  ID: 2
  Type: NodeType.RETURN
  Expression: int256(x)

Edges:
  0 -> 1
  1 -> 2

Function: getRatio
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: (userPosition,vaultData) = IFluidVaultResolver(FLUID_VAULT_RESOLVER).positionByNftId(_nftId)

  ID: 4
  Type: NodeType.IF
  Expression: vaultData.constantVariables.vaultType == T1_VAULT_TYPE

  ID: 5
  Type: NodeType.VARIABLE
  Expression: collAmount = userPosition.supply

  ID: 6
  Type: NodeType.VARIABLE
  Expression: collToken = vaultData.constantVariables.supplyToken.token0

  ID: 7
  Type: NodeType.VARIABLE
  Expression: debtAmount = userPosition.borrow

  ID: 8
  Type: NodeType.VARIABLE
  Expression: debtToken = vaultData.constantVariables.borrowToken.token0

  ID: 9
  Type: NodeType.IF
  Expression: debtAmount == 0

  ID: 10
  Type: NodeType.RETURN
  Expression: uint256(0)

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 14
  Type: NodeType.VARIABLE
  Expression: price = vaultData.configs.oraclePriceOperate

  ID: 15
  Type: NodeType.VARIABLE
  Expression: priceScaler = 10 ** (ORACLE_PRICE_DECIMALS - collDec + debtDec)

  ID: 16
  Type: NodeType.VARIABLE
  Expression: collAmountInDebtToken = ((collAmount * price) / priceScaler) * (10 ** debtDec) / (10 ** collDec)

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: ratio = collAmountInDebtToken * WAD / debtAmount

  ID: 18
  Type: NodeType.ENDIF
  Expression: 

  ID: 19
  Type: NodeType.IF
  Expression: collToken != TokenUtils.ETH_ADDR

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: collDec = IERC20(collToken).decimals()

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: collDec = ETH_DECIMALS

  ID: 22
  Type: NodeType.ENDIF
  Expression: 

  ID: 23
  Type: NodeType.IF
  Expression: debtToken != TokenUtils.ETH_ADDR

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: debtDec = IERC20(debtToken).decimals()

  ID: 25
  Type: NodeType.EXPRESSION
  Expression: debtDec = ETH_DECIMALS

  ID: 26
  Type: NodeType.ENDIF
  Expression: 

  ID: 27
  Type: NodeType.RETURN
  Expression: ratio

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 18
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  9 -> 11
  11 -> 19
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18
  18 -> 27
  19 -> 20
  19 -> 21
  20 -> 22
  21 -> 22
  22 -> 23
  23 -> 24
  23 -> 25
  24 -> 26
  25 -> 26
  26 -> 14

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FLUID_VAULT_RESOLVER = 0x814c8C7ceb1411B364c2940c4b9380e739e06686

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FLUID_LENDING_RESOLVER = 0xC215485C572365AE87f908ad35233EC2572A3BEC

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: F_WETH_TOKEN_ADDR = 0x90551c1795392094FE6D29B758EcCD233cFAa260

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ETH_ADDR = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: T1_VAULT_TYPE = 1e4

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: T2_VAULT_TYPE = 2e4

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: T3_VAULT_TYPE = 3e4

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: T4_VAULT_TYPE = 4e4

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ORACLE_PRICE_DECIMALS = 27

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ETH_DECIMALS = 18

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: WAD = 1e18

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10


Contract: MainnetAuthAddresses
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: AuthHelper
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: AdminVault
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: admin = ADMIN_ADDR

Edges:
  0 -> 1
  1 -> 2

Function: changeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: admin != msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert SenderNotAdmin()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: owner = _owner

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4

Function: changeAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: admin != msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert SenderNotAdmin()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: admin = _admin

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: AdminAuth
==================================================

Function: withdrawStuckFunds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _token == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: address(_receiver).transfer(_amount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: IERC20(_token).safeTransfer(_receiver,_amount)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  1 -> 3
  2 -> 4
  3 -> 4
  5 -> 1

Function: kill
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: selfdestruct(address)(address(msg.sender))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 2
  2 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: adminVault = AdminVault(ADMIN_VAULT_ADDR)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5


Contract: ITrigger
==================================================


Contract: MainnetTriggerAddresses
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: UNISWAP_V3_NONFUNGIBLE_POSITION_MANAGER = 0xC36442b4a4522E871399CD717aBDD847Ab11FE88

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: UNISWAP_V3_FACTORY = 0x1F98431c8aD98523631AE4a59f267346ea31F984

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MCD_PRICE_VERIFIER = 0xeAa474cbFFA87Ae0F1a6f68a3aBA6C77C656F72c

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TRANSIENT_STORAGE = 0x2F7Ef2ea5E8c97B8687CA703A0e50Aa5a49B7eb2

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: TriggerHelper
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: UNISWAP_V3_NONFUNGIBLE_POSITION_MANAGER = 0xC36442b4a4522E871399CD717aBDD847Ab11FE88

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: UNISWAP_V3_FACTORY = 0x1F98431c8aD98523631AE4a59f267346ea31F984

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MCD_PRICE_VERIFIER = 0xeAa474cbFFA87Ae0F1a6f68a3aBA6C77C656F72c

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TRANSIENT_STORAGE = 0x2F7Ef2ea5E8c97B8687CA703A0e50Aa5a49B7eb2

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: TransientStorage
==================================================

Function: setBytes32
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: tempStore[_key] = _value

Edges:
  0 -> 1

Function: getBytes32
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: tempStore[_key]

Edges:
  0 -> 1


Contract: FluidRatioTrigger
==================================================

Function: getRatio
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: (userPosition,vaultData) = IFluidVaultResolver(FLUID_VAULT_RESOLVER).positionByNftId(_nftId)

  ID: 4
  Type: NodeType.IF
  Expression: vaultData.constantVariables.vaultType == T1_VAULT_TYPE

  ID: 5
  Type: NodeType.VARIABLE
  Expression: collAmount = userPosition.supply

  ID: 6
  Type: NodeType.VARIABLE
  Expression: collToken = vaultData.constantVariables.supplyToken.token0

  ID: 7
  Type: NodeType.VARIABLE
  Expression: debtAmount = userPosition.borrow

  ID: 8
  Type: NodeType.VARIABLE
  Expression: debtToken = vaultData.constantVariables.borrowToken.token0

  ID: 9
  Type: NodeType.IF
  Expression: debtAmount == 0

  ID: 10
  Type: NodeType.RETURN
  Expression: uint256(0)

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 14
  Type: NodeType.VARIABLE
  Expression: price = vaultData.configs.oraclePriceOperate

  ID: 15
  Type: NodeType.VARIABLE
  Expression: priceScaler = 10 ** (ORACLE_PRICE_DECIMALS - collDec + debtDec)

  ID: 16
  Type: NodeType.VARIABLE
  Expression: collAmountInDebtToken = ((collAmount * price) / priceScaler) * (10 ** debtDec) / (10 ** collDec)

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: ratio = collAmountInDebtToken * WAD / debtAmount

  ID: 18
  Type: NodeType.ENDIF
  Expression: 

  ID: 19
  Type: NodeType.IF
  Expression: collToken != TokenUtils.ETH_ADDR

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: collDec = IERC20(collToken).decimals()

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: collDec = ETH_DECIMALS

  ID: 22
  Type: NodeType.ENDIF
  Expression: 

  ID: 23
  Type: NodeType.IF
  Expression: debtToken != TokenUtils.ETH_ADDR

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: debtDec = IERC20(debtToken).decimals()

  ID: 25
  Type: NodeType.EXPRESSION
  Expression: debtDec = ETH_DECIMALS

  ID: 26
  Type: NodeType.ENDIF
  Expression: 

  ID: 27
  Type: NodeType.RETURN
  Expression: ratio

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 18
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  9 -> 11
  11 -> 19
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18
  18 -> 27
  19 -> 20
  19 -> 21
  20 -> 22
  21 -> 22
  22 -> 23
  23 -> 24
  23 -> 25
  24 -> 26
  25 -> 26
  26 -> 14

Function: signed256
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(x <= uint256(type()(int256).max))

  ID: 2
  Type: NodeType.RETURN
  Expression: int256(x)

Edges:
  0 -> 1
  1 -> 2

Function: withdrawStuckFunds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _token == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: address(_receiver).transfer(_amount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: IERC20(_token).safeTransfer(_receiver,_amount)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  1 -> 3
  2 -> 4
  3 -> 4
  5 -> 1

Function: kill
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: selfdestruct(address)(address(msg.sender))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 2
  2 -> 1

Function: isTriggered
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: triggerSubData = parseSubInputs(_subData)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: currRatio = getRatio(triggerSubData.nftId)

  ID: 3
  Type: NodeType.IF
  Expression: currRatio == 0

  ID: 4
  Type: NodeType.RETURN
  Expression: false

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: tempStorage.setBytes32(FLUID_RATIO,bytes32(currRatio))

  ID: 7
  Type: NodeType.IF
  Expression: FluidRatioTrigger.RatioState(triggerSubData.state) == RatioState.OVER

  ID: 8
  Type: NodeType.IF
  Expression: currRatio > triggerSubData.ratio

  ID: 9
  Type: NodeType.RETURN
  Expression: true

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.IF
  Expression: FluidRatioTrigger.RatioState(triggerSubData.state) == RatioState.UNDER

  ID: 13
  Type: NodeType.IF
  Expression: currRatio < triggerSubData.ratio

  ID: 14
  Type: NodeType.RETURN
  Expression: true

  ID: 15
  Type: NodeType.ENDIF
  Expression: 

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 17
  Type: NodeType.RETURN
  Expression: false

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 11
  8 -> 9
  8 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  12 -> 16
  13 -> 14
  13 -> 15
  15 -> 16
  16 -> 17

Function: parseSubInputs
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: params = abi.decode(_subData,(SubParams))

  ID: 2
  Type: NodeType.RETURN
  Expression: params

Edges:
  0 -> 1
  1 -> 2

Function: changedSubData
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: isChangeable
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: false

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_VAULT_ADDR = 0xCCf3d848e08b94478Ed8f46fFead3008faF581fD

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DSGUARD_FACTORY_ADDRESS = 0x5a15566417e6C1c9546523066500bDDBc53F88C7

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADMIN_ADDR = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PROXY_AUTH_ADDRESS = 0x149667b6FAe2c63D1B4317C716b0D0e4d3E2bD70

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MODULE_AUTH_ADDRESS = 0x7407974DDBF539e552F1d051e44573090912CC3D

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: adminVault = AdminVault(ADMIN_VAULT_ADDR)

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FLUID_VAULT_RESOLVER = 0x814c8C7ceb1411B364c2940c4b9380e739e06686

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FLUID_LENDING_RESOLVER = 0xC215485C572365AE87f908ad35233EC2572A3BEC

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: F_WETH_TOKEN_ADDR = 0x90551c1795392094FE6D29B758EcCD233cFAa260

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ETH_ADDR = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: T1_VAULT_TYPE = 1e4

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: T2_VAULT_TYPE = 2e4

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: T3_VAULT_TYPE = 3e4

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: T4_VAULT_TYPE = 4e4

  ID: 14
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ORACLE_PRICE_DECIMALS = 27

  ID: 15
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ETH_DECIMALS = 18

  ID: 16
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: WAD = 1e18

  ID: 17
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: UNISWAP_V3_NONFUNGIBLE_POSITION_MANAGER = 0xC36442b4a4522E871399CD717aBDD847Ab11FE88

  ID: 18
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: UNISWAP_V3_FACTORY = 0x1F98431c8aD98523631AE4a59f267346ea31F984

  ID: 19
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MCD_PRICE_VERIFIER = 0xeAa474cbFFA87Ae0F1a6f68a3aBA6C77C656F72c

  ID: 20
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TRANSIENT_STORAGE = 0x2F7Ef2ea5E8c97B8687CA703A0e50Aa5a49B7eb2

  ID: 21
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: tempStorage = TransientStorage(TRANSIENT_STORAGE)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18
  18 -> 19
  19 -> 20
  20 -> 21


