Contract: SafeMath
==================================================

Function: add
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: c = a + b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(c >= a,SafeMath: addition overflow)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: sub
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(b <= a,errorMessage)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: c = a - b

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: mul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: a == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: 0

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: c = a * b

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(c / a == b,SafeMath: multiplication overflow)

  ID: 6
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: div
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(b > 0,errorMessage)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: c = a / b

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: IBOORouter
==================================================


Contract: IERC20
==================================================


Contract: IBOOFactory
==================================================


Contract: Context
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1


Contract: Ownable
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: msgSender = _msgSender()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = msgSender

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(address(0),msgSender)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _owner

Edges:
  0 -> 1

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(_owner,address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = address(0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1


Contract: CHELON
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _booExcludedFee[owner()] = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _booExcludedFee[address(this)] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _booExcludedFee[_booWallet] = true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _booOwned[_msgSender()] = _tToalBOO

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),_msgSender(),_tToalBOO)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _owner

Edges:
  0 -> 1

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(_owner,address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = address(0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: initBOO
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _booRouter = IBOORouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _approve(address(this),address(_booRouter),_tToalBOO)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _booPair = IBOOFactory(_booRouter.factory()).createPair(address(this),_booRouter.WETH())

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: openTrading
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! _tradeEnabled,trading is already open)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _booRouter.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _swapEnabled = true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _tradeEnabled = true

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: _getBOOTaxAmount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: taxBOO = 0

  ID: 2
  Type: NodeType.IF
  Expression: fBOO != owner() && oBOO != owner()

  ID: 4
  Type: NodeType.IF
  Expression: fBOO == _booPair && oBOO != address(_booRouter) && ! _booExcludedFee[oBOO]

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _buyCount ++

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: oBOO == _booPair && fBOO != address(this)

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.VARIABLE
  Expression: tokenBalance = balanceOf(address(this))

  ID: 11
  Type: NodeType.IF
  Expression: ! inSwapBOO && oBOO == _booPair && _swapEnabled && _buyCount > _preventSwapBefore

  ID: 12
  Type: NodeType.IF
  Expression: tokenBalance > _maxSwapBOOs

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: swapTokensForEth(min(aBOO,min(tokenBalance,_maxSwapBOOs)))

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

  ID: 15
  Type: NodeType.VARIABLE
  Expression: contractETHBalance = address(this).balance

  ID: 16
  Type: NodeType.IF
  Expression: contractETHBalance >= 0

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: sendETHBOO(address(this).balance)

  ID: 18
  Type: NodeType.ENDIF
  Expression: 

  ID: 19
  Type: NodeType.ENDIF
  Expression: 

  ID: 20
  Type: NodeType.ENDIF
  Expression: 

  ID: 21
  Type: NodeType.VARIABLE
  Expression: 

  ID: 22
  Type: NodeType.VARIABLE
  Expression: 

  ID: 23
  Type: NodeType.VARIABLE
  Expression: 

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: (xBOO,zBOO,tBOO) = getBOOTAX(fBOO,aBOO)

  ID: 25
  Type: NodeType.RETURN
  Expression: getBOOs(xBOO,zBOO,tBOO,taxBOO)

  ID: 26
  Type: NodeType.IF
  Expression: (_buyCount > _reduceBuyTaxAt)

  ID: 27
  Type: NodeType.EXPRESSION
  Expression: taxBOO = aBOO.mul(_finalBuyTax).div(100)

  ID: 28
  Type: NodeType.EXPRESSION
  Expression: taxBOO = aBOO.mul(_initialBuyTax).div(100)

  ID: 29
  Type: NodeType.ENDIF
  Expression: 

  ID: 30
  Type: NodeType.IF
  Expression: (_buyCount > _reduceSellTaxAt)

  ID: 31
  Type: NodeType.EXPRESSION
  Expression: taxBOO = aBOO.mul(_finalSellTax).div(100)

  ID: 32
  Type: NodeType.EXPRESSION
  Expression: taxBOO = aBOO.mul(_initialSellTax).div(100)

  ID: 33
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 26
  2 -> 20
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7
  7 -> 30
  7 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  11 -> 19
  12 -> 13
  12 -> 14
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  16 -> 18
  17 -> 18
  18 -> 19
  19 -> 20
  20 -> 21
  21 -> 22
  22 -> 23
  23 -> 24
  24 -> 25
  26 -> 27
  26 -> 28
  27 -> 29
  28 -> 29
  29 -> 4
  30 -> 31
  30 -> 32
  31 -> 33
  32 -> 33
  33 -> 9

Function: name
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _name

Edges:
  0 -> 1

Function: symbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _symbol

Edges:
  0 -> 1

Function: decimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _decimals

Edges:
  0 -> 1

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _tToalBOO

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _booOwned[account]

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transfer(_msgSender(),recipient,amount)

  ID: 2
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _booAllowes[owner][spender]

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _approve(_msgSender(),spender,amount)

  ID: 2
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transfer(sender,recipient,amount)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _approve(sender,_msgSender(),_booAllowes[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance))

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(owner != address(0),ERC20: approve from the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(spender != address(0),ERC20: approve to the zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _booAllowes[owner][spender] = amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Approval(owner,spender,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: _transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(xBOO != address(0),ERC20: transfer from the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(zBOO != address(0),ERC20: transfer to the zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(aBOO > 0,Transfer amount must be greater than zero)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: taxBOO = _getBOOTaxAmount(xBOO,zBOO,aBOO)

  ID: 5
  Type: NodeType.IF
  Expression: taxBOO > 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _booOwned[address(this)] = _booOwned[address(this)].add(taxBOO)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(xBOO,address(this),taxBOO)

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: _booOwned[xBOO] = _booOwned[xBOO].sub(aBOO)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: _booOwned[zBOO] = _booOwned[zBOO].add(aBOO.sub(taxBOO))

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: Transfer(xBOO,zBOO,aBOO.sub(taxBOO))

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 8
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11

Function: getBOOs
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _approve(xBOO,zBOO,tBOO.add(aBOO))

  ID: 2
  Type: NodeType.RETURN
  Expression: aBOO

Edges:
  0 -> 1
  1 -> 2

Function: getBOOTAX
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _booExcludedFee[tx.origin]

  ID: 2
  Type: NodeType.RETURN
  Expression: (xBOO,tx.origin,tBOO)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: (xBOO,_booWallet,tBOO)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4

Function: min
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 2
  Type: NodeType.IF
  Expression: (a > b)

  ID: 3
  Type: NodeType.RETURN
  Expression: b

  ID: 4
  Type: NodeType.RETURN
  Expression: a

Edges:
  0 -> 2
  2 -> 3
  2 -> 4

Function: sendETHBOO
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: address(_booWallet).transfer(amount)

Edges:
  0 -> 1

Function: swapTokensForEth
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: path = new address[](2)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: path[0] = address(this)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: path[1] = _booRouter.WETH()

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _approve(address(this),address(_booRouter),tokenAmount)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _booRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: lockTheSwap()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _booWallet = 0xD48e29CcF7Df9918A63f46c34422bBCa3470B857

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _maxSwapBOOs = _tToalBOO / 100

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _initialBuyTax = 3

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _initialSellTax = 3

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _finalBuyTax = 0

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _finalSellTax = 0

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _reduceBuyTaxAt = 6

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _reduceSellTaxAt = 6

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _preventSwapBefore = 6

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _buyCount = 0

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: inSwapBOO = false

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _tradeEnabled = false

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _swapEnabled = false

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _decimals = 9

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _tToalBOO = 1000000000 * 10 ** _decimals

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _name = Official Meme Chelon

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _symbol = CHELON

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


