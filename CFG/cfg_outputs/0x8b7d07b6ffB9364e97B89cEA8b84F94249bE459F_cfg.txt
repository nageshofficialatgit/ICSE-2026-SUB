Contract: FUTX
==================================================

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender != address(0) && tier != 10 && swap == false && wait == false)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: issued = mint(msg.sender,msg.value)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Mined(msg.sender,issued)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(this,msg.sender,issued)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: FUTX
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _start()

Edges:
  0 -> 1

Function: _start
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: swap = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: wait = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: extended = false

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: endTime = now + 7776000

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: swapTime = endTime + 2592000

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: swapEndTime = swapTime + 432000

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: endTimeExtended = now + 23328000

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: swapTimeExtended = endTimeExtended + 7776000

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: swapEndTimeExtended = swapTimeExtended + 432000

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: submittedFeesPaid = 0

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: _submitted = 0

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: reservedFees = 0

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: payRate = 0

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: tier = 0

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: MiningStart(endTime,swapTime,swapEndTime)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15

Function: restart
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(swap && now >= endTime)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: penalty = this.balance * 2000 / 10000

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: payFees()

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _start()

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _totalSupply

Edges:
  0 -> 1

Function: mint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: total = _submitted + _value

  ID: 2
  Type: NodeType.IF
  Expression: total > MAX_SUBMITTED

  ID: 3
  Type: NodeType.VARIABLE
  Expression: refund = total - MAX_SUBMITTED - 1

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _value = _value - refund

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _to.transfer(refund)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: _submitted += _value

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: total -= refund

  ID: 9
  Type: NodeType.VARIABLE
  Expression: tokens = calculateTokens(total,_value)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: balances[_to] += tokens

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: _totalSupply += tokens

  ID: 12
  Type: NodeType.RETURN
  Expression: tokens

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 6
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12

Function: calculateTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: tier == 10

  ID: 2
  Type: NodeType.RETURN
  Expression: 74000000

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: tokens = 0

  ID: 5
  Type: NodeType.IF
  Expression: total > levels[tier]

  ID: 6
  Type: NodeType.VARIABLE
  Expression: remaining = total - levels[tier]

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: _value -= remaining

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: tokens = (_value) * ratios[tier]

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: tier += 1

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: tokens += calculateTokens(total,remaining)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: tokens = _value * ratios[tier]

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.RETURN
  Expression: tokens

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 11
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 12
  11 -> 12
  12 -> 13

Function: currentTier
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: tier == 10

  ID: 2
  Type: NodeType.RETURN
  Expression: 10

  ID: 3
  Type: NodeType.RETURN
  Expression: tier + 1

Edges:
  0 -> 1
  1 -> 2
  1 -> 3

Function: leftInTier
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: tier == 10

  ID: 2
  Type: NodeType.RETURN
  Expression: 0

  ID: 3
  Type: NodeType.RETURN
  Expression: levels[tier] - _submitted

Edges:
  0 -> 1
  1 -> 2
  1 -> 3

Function: submitted
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _submitted

Edges:
  0 -> 1

Function: balanceMinusFeesOutstanding
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: this.balance - (penalty + (_submitted - submittedFeesPaid) * 1530 / 10000)

Edges:
  0 -> 1

Function: calulateRate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: reservedFees = penalty + (_submitted - submittedFeesPaid) * 1530 / 10000

  ID: 2
  Type: NodeType.VARIABLE
  Expression: tokens = _totalSupply / 1000000000000000000

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: payRate = (this.balance - reservedFees)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: payRate = payRate / tokens

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: _updateState
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: now >= endTime

  ID: 2
  Type: NodeType.IF
  Expression: ! swap && ! wait

  ID: 3
  Type: NodeType.IF
  Expression: extended

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: wait = true

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: endTime = swapTimeExtended

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: WaitStarted(endTime)

  ID: 7
  Type: NodeType.IF
  Expression: tier == 10

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: wait = true

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: endTime = swapTime

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: WaitStarted(endTime)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: endTime = endTimeExtended

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: extended = true

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: MiningExtended(endTime,swapTime,swapEndTime)

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

  ID: 15
  Type: NodeType.ENDIF
  Expression: 

  ID: 16
  Type: NodeType.IF
  Expression: wait

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: swap = true

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: wait = false

  ID: 19
  Type: NodeType.IF
  Expression: extended

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: endTime = swapEndTimeExtended

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: endTime = swapEndTime

  ID: 22
  Type: NodeType.ENDIF
  Expression: 

  ID: 23
  Type: NodeType.EXPRESSION
  Expression: SwapStarted(endTime)

  ID: 24
  Type: NodeType.ENDIF
  Expression: 

  ID: 25
  Type: NodeType.ENDIF
  Expression: 

  ID: 26
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 26
  2 -> 3
  2 -> 16
  3 -> 4
  3 -> 7
  4 -> 5
  5 -> 6
  6 -> 15
  7 -> 8
  7 -> 11
  8 -> 9
  9 -> 10
  10 -> 14
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 25
  16 -> 17
  16 -> 24
  17 -> 18
  18 -> 19
  19 -> 20
  19 -> 21
  20 -> 22
  21 -> 22
  22 -> 23
  23 -> 24
  24 -> 25
  25 -> 26

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(balances[msg.sender] >= _value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _updateState()

  ID: 3
  Type: NodeType.IF
  Expression: _to == address(this)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool)(swap)

  ID: 5
  Type: NodeType.IF
  Expression: payRate == 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: calulateRate()

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.VARIABLE
  Expression: amount = _value * payRate

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: amount /= 1000000000000000000

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= _value

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: _totalSupply -= _value

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: msg.sender.transfer(amount)

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= _value

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: balances[_to] += _value

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 17
  Type: NodeType.ENDIF
  Expression: 

  ID: 18
  Type: NodeType.RETURN
  Expression: true

  ID: 19
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 14
  4 -> 5
  5 -> 6
  5 -> 7
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 17
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: allowance = allowed[_from][msg.sender]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(balances[_from] >= _value && allowance >= _value)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[_to] += _value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[_from] -= _value

  ID: 5
  Type: NodeType.IF
  Expression: allowance < MAX_UINT256

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: allowed[_from][msg.sender] -= _value

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_to,_value)

  ID: 9
  Type: NodeType.RETURN
  Expression: true

  ID: 10
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  6 -> 7
  7 -> 8
  8 -> 9

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_owner]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowed[msg.sender][_spender] = _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,_spender,_value)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowed[_owner][_spender]

  ID: 2
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1

Function: payFees
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _updateState()

  ID: 2
  Type: NodeType.VARIABLE
  Expression: fees = penalty + (_submitted - submittedFeesPaid) * 1530 / 10000

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: submittedFeesPaid = _submitted

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: reservedFees = 0

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: penalty = 0

  ID: 6
  Type: NodeType.IF
  Expression: fees > 0

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: foundation.transfer(fees / 3)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: owner.transfer(fees / 3)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: dev.transfer(fees / 3)

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  6 -> 10
  7 -> 8
  8 -> 9
  9 -> 10

Function: changeFoundation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == foundation)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: foundation = _receiver

Edges:
  0 -> 1
  1 -> 2

Function: changeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == owner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = _receiver

Edges:
  0 -> 1
  1 -> 2

Function: changeDev
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == dev)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: dev = _receiver

Edges:
  0 -> 1
  1 -> 2

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_SUBMITTED = 5000671576194550000000

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _totalSupply = 0

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: levels = (87719298245614000000,198955253301794000000,373500707847248000000,641147766670778000000,984004909527921000000,1484004909527920000000,2184004909527920000000,3084004909527920000000,4150671576194590000000,5000671576194550000000)

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ratios = (114,89,55,34,21,13,8,5,3,2)

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _submitted = 0

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: tier = 0

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = Futereum X

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = FUTX

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: swap = false

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: wait = false

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: extended = false

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: payRate = 0

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: submittedFeesPaid = 0

  ID: 14
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: penalty = 0

  ID: 15
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: reservedFees = 0

  ID: 16
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: foundation = 0x950ec4ef693d90f8519c4213821e462426d30905

  ID: 17
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: owner = 0x78BFCA5E20B0D710EbEF98249f68d9320eE423be

  ID: 18
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: dev = 0x5d2b9f5345e69e2390ce4c26ccc9c2910a097520

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_UINT256 = 2 ** 256 - 1

Edges:


