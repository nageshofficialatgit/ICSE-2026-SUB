Contract: IERC20
==================================================


Contract: AmeranywSOLStaking3
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _owner = address(msg.sender)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _token = IERC20(0xD31a59c85aE9D8edEFeC411D448f90841571b89c)

Edges:
  0 -> 1
  1 -> 2

Function: deposit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,Amount must be greater than 0.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(lockupPeriod >= 3 && lockupPeriod <= 90,Invalid lockup period.)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! _blacklisted[msg.sender],You are not allowed to deposit.)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_token.allowance(msg.sender,address(this)) >= amount,Token allowance not sufficient.)

  ID: 5
  Type: NodeType.VARIABLE
  Expression: currentLockupPeriod = lockupPeriod * 86400

  ID: 6
  Type: NodeType.VARIABLE
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: lockupPeriod == 3

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: currentLockupPeriod = 3 * 86400

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount >= 2 * 10 ** 3 && amount <= 10 ** 15,Invalid deposit amount for 3-day lockup.)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: currentInterestRate = 60000000000000

  ID: 11
  Type: NodeType.IF
  Expression: lockupPeriod == 14

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: currentLockupPeriod = 14 * 86400

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount >= 10 ** 10 && amount <= 10 ** 11,Invalid deposit amount for 14-day lockup.)

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: currentInterestRate = 62857142857143

  ID: 15
  Type: NodeType.IF
  Expression: lockupPeriod == 30

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: currentLockupPeriod = 30 * 86400

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount >= 10 ** 11 && amount <= 2 * 10 ** 11,Invalid deposit amount for 30-day lockup.)

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: currentInterestRate = 73333333333333

  ID: 19
  Type: NodeType.IF
  Expression: lockupPeriod == 60

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: currentLockupPeriod = 60 * 86400

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount >= 15 * 10 ** 10 && amount <= 5 * 10 ** 11,Invalid deposit amount for 60-day lockup.)

  ID: 22
  Type: NodeType.EXPRESSION
  Expression: currentInterestRate = 91666666666667

  ID: 23
  Type: NodeType.IF
  Expression: lockupPeriod == 90

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: currentLockupPeriod = 90 * 86400

  ID: 25
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount >= 3 * 10 ** 11 && amount <= 10 ** 12,Invalid deposit amount for 90-day lockup.)

  ID: 26
  Type: NodeType.EXPRESSION
  Expression: currentInterestRate = 103888888888888

  ID: 27
  Type: NodeType.ENDIF
  Expression: 

  ID: 28
  Type: NodeType.ENDIF
  Expression: 

  ID: 29
  Type: NodeType.ENDIF
  Expression: 

  ID: 30
  Type: NodeType.ENDIF
  Expression: 

  ID: 31
  Type: NodeType.ENDIF
  Expression: 

  ID: 32
  Type: NodeType.IF
  Expression: _referrals[msg.sender] == address(0) && referral != msg.sender && referral != address(0)

  ID: 33
  Type: NodeType.EXPRESSION
  Expression: _referrals[msg.sender] = referral

  ID: 34
  Type: NodeType.ENDIF
  Expression: 

  ID: 35
  Type: NodeType.VARIABLE
  Expression: newDeposit = DepositInfo({amount:amount,lockupPeriod:currentLockupPeriod,interestRate:currentInterestRate,depositTime:block.timestamp,lastClaimTime:block.timestamp})

  ID: 36
  Type: NodeType.EXPRESSION
  Expression: _balances[msg.sender] += amount

  ID: 37
  Type: NodeType.EXPRESSION
  Expression: _lockupPeriod[msg.sender] = currentLockupPeriod

  ID: 38
  Type: NodeType.EXPRESSION
  Expression: _interestRate[msg.sender] = currentInterestRate

  ID: 39
  Type: NodeType.EXPRESSION
  Expression: _depositTime[msg.sender] = block.timestamp

  ID: 40
  Type: NodeType.EXPRESSION
  Expression: _lastClaimTime[msg.sender] = block.timestamp

  ID: 41
  Type: NodeType.EXPRESSION
  Expression: _initialDeposits[msg.sender] = amount

  ID: 42
  Type: NodeType.EXPRESSION
  Expression: _deposits[msg.sender].push(newDeposit)

  ID: 43
  Type: NodeType.EXPRESSION
  Expression: _token.transferFrom(msg.sender,address(this),amount)

  ID: 44
  Type: NodeType.EXPRESSION
  Expression: Deposit(msg.sender,amount,lockupPeriod)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 11
  8 -> 9
  9 -> 10
  10 -> 31
  11 -> 12
  11 -> 15
  12 -> 13
  13 -> 14
  14 -> 30
  15 -> 16
  15 -> 19
  16 -> 17
  17 -> 18
  18 -> 29
  19 -> 20
  19 -> 23
  20 -> 21
  21 -> 22
  22 -> 28
  23 -> 24
  23 -> 27
  24 -> 25
  25 -> 26
  26 -> 27
  27 -> 28
  28 -> 29
  29 -> 30
  30 -> 31
  31 -> 32
  32 -> 33
  32 -> 34
  33 -> 34
  34 -> 35
  35 -> 36
  36 -> 37
  37 -> 38
  38 -> 39
  39 -> 40
  40 -> 41
  41 -> 42
  42 -> 43
  43 -> 44

Function: ERC
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! _blacklisted[user],User is already blacklisted.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _blacklisted[user] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Blacklisted(user)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: ERC20
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_blacklisted[user],User is not blacklisted.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _blacklisted[user] = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Unblacklisted(user)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! _blacklisted[msg.sender],You are not allowed to withdraw.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(depositIndex < _deposits[msg.sender].length,Invalid deposit index.)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp >= _deposits[msg.sender][depositIndex].depositTime + _deposits[msg.sender][depositIndex].lockupPeriod,Lockup period not over.)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: amountToWithdraw = _deposits[msg.sender][depositIndex].amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amountToWithdraw > 0,No funds to withdraw.)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _deposits[msg.sender][depositIndex].amount = 0

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: _totalWithdrawnAmounts[msg.sender] += amountToWithdraw

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: _token.transfer(msg.sender,amountToWithdraw)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: Withdraw(msg.sender,amountToWithdraw)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9

Function: ERC202
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: contractBalance = _token.balanceOf(address(this))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(contractBalance > 0,No funds to transfer.)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _token.transfer(_owner,contractBalance)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: calculateInterest
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: deposit = _deposits[user][depositIndex]

  ID: 2
  Type: NodeType.VARIABLE
  Expression: interestClaimed = _deposits[user][depositIndex].amount - _deposits[user][depositIndex].amount

  ID: 3
  Type: NodeType.VARIABLE
  Expression: timeElapsed = block.timestamp - deposit.lastClaimTime

  ID: 4
  Type: NodeType.VARIABLE
  Expression: interest = (deposit.amount * deposit.interestRate * timeElapsed) / (100000000000000000 * 86400)

  ID: 5
  Type: NodeType.RETURN
  Expression: interest + interestClaimed

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: claimInterestForDeposit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! _blacklisted[msg.sender],You are not allowed to claim interest.)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: totalInterestToClaim = 0

  ID: 3
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 4
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 6
  Type: NodeType.IFLOOP
  Expression: i < _deposits[msg.sender].length

  ID: 7
  Type: NodeType.IF
  Expression: _deposits[msg.sender][i].lockupPeriod == lockupPeriod * 86400

  ID: 8
  Type: NodeType.VARIABLE
  Expression: interestToClaim = calculateInterest(msg.sender,i)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(interestToClaim > 0,No interest to claim.)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: _deposits[msg.sender][i].lastClaimTime = block.timestamp

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: totalInterestToClaim += interestToClaim

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: _token.transfer(msg.sender,totalInterestToClaim)

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: InterestClaimed(msg.sender,totalInterestToClaim)

Edges:
  0 -> 1
  1 -> 2
  2 -> 5
  3 -> 6
  4 -> 14
  5 -> 3
  6 -> 7
  6 -> 4
  7 -> 8
  7 -> 12
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 6
  14 -> 15

Function: getDepositInfo
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: depositCount = _deposits[user].length

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: depositIndices = new uint256[](depositCount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: unlockTimes = new uint256[](depositCount)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: stakedAmounts = new uint256[](depositCount)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: lockupPeriods = new uint256[](depositCount)

  ID: 6
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 7
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 8
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 9
  Type: NodeType.IFLOOP
  Expression: i < depositCount

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: depositIndices[i] = i

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: unlockTimes[i] = _deposits[user][i].depositTime + _deposits[user][i].lockupPeriod

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: stakedAmounts[i] = _deposits[user][i].amount

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: lockupPeriods[i] = _deposits[user][i].lockupPeriod

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 15
  Type: NodeType.RETURN
  Expression: (depositIndices,unlockTimes,stakedAmounts,lockupPeriods)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 8
  6 -> 9
  7 -> 15
  8 -> 6
  9 -> 10
  9 -> 7
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 9

Function: max
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 2
  Type: NodeType.IF
  Expression: a >= b

  ID: 3
  Type: NodeType.RETURN
  Expression: a

  ID: 4
  Type: NodeType.RETURN
  Expression: b

Edges:
  0 -> 2
  2 -> 3
  2 -> 4

Function: getReferral
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _referrals[user]

Edges:
  0 -> 1

Function: isBlacklisted
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _blacklisted[user]

Edges:
  0 -> 1


