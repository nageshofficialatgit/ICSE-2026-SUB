Contract: multiowned
==================================================

Function: multiowned
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: m_numOwners = _owners.length + 1

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: m_owners[1] = uint256(msg.sender)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(msg.sender)] = 1

  ID: 4
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 5
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 7
  Type: NodeType.IFLOOP
  Expression: i < _owners.length

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: m_owners[2 + i] = uint256(_owners[i])

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_owners[i])] = 2 + i

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: ++ i

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: m_required = _required

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 6
  4 -> 7
  5 -> 11
  6 -> 4
  7 -> 8
  7 -> 5
  8 -> 9
  9 -> 10
  10 -> 7

Function: revoke
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(msg.sender)]

  ID: 2
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 3
  Type: NodeType.RETURN
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: ownerIndexBit = 2 ** ownerIndex

  ID: 6
  Type: NodeType.VARIABLE
  Expression: pending = m_pending[_operation]

  ID: 7
  Type: NodeType.IF
  Expression: pending.ownersDone & ownerIndexBit > 0

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: pending.yetNeeded ++

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: pending.ownersDone -= ownerIndexBit

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: Revoke(msg.sender,_operation)

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 11
  8 -> 9
  9 -> 10
  10 -> 11

Function: changeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: isOwner(_to)

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(_from)]

  ID: 5
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 6
  Type: NodeType.RETURN
  Expression: 

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: m_owners[ownerIndex] = uint256(_to)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_from)] = 0

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_to)] = ownerIndex

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: OwnerChanged(_from,_to)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 13
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  13 -> 1

Function: addOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: isOwner(_owner)

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 5
  Type: NodeType.IF
  Expression: m_numOwners >= c_maxOwners

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: reorganizeOwners()

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.IF
  Expression: m_numOwners >= c_maxOwners

  ID: 9
  Type: NodeType.RETURN
  Expression: 

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: m_numOwners ++

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: m_owners[m_numOwners] = uint256(_owner)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_owner)] = m_numOwners

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: OwnerAdded(_owner)

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 15
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  6 -> 7
  7 -> 8
  8 -> 9
  8 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  15 -> 1

Function: removeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(_owner)]

  ID: 2
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 3
  Type: NodeType.RETURN
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.IF
  Expression: m_required > m_numOwners - 1

  ID: 6
  Type: NodeType.RETURN
  Expression: 

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: m_owners[ownerIndex] = 0

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_owner)] = 0

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: reorganizeOwners()

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: OwnerRemoved(_owner)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 13
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  13 -> 1

Function: changeRequirement
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _newRequired > m_numOwners

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: m_required = _newRequired

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: RequirementChanged(_newRequired)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 7
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1

Function: getOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: address(m_owners[ownerIndex + 1])

Edges:
  0 -> 1

Function: isOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: m_ownerIndex[uint256(_addr)] > 0

Edges:
  0 -> 1

Function: hasConfirmed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: pending = m_pending[_operation]

  ID: 2
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(_owner)]

  ID: 3
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 4
  Type: NodeType.RETURN
  Expression: false

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: ownerIndexBit = 2 ** ownerIndex

  ID: 7
  Type: NodeType.RETURN
  Expression: ! (pending.ownersDone & ownerIndexBit == 0)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  5 -> 6
  6 -> 7

Function: confirmAndCheck
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(msg.sender)]

  ID: 2
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 3
  Type: NodeType.RETURN
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: pending = m_pending[_operation]

  ID: 6
  Type: NodeType.IF
  Expression: pending.yetNeeded == 0

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: pending.yetNeeded = m_required

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: pending.ownersDone = 0

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: pending.index = m_pendingIndex.length ++

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: m_pendingIndex[pending.index] = _operation

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.VARIABLE
  Expression: ownerIndexBit = 2 ** ownerIndex

  ID: 13
  Type: NodeType.IF
  Expression: pending.ownersDone & ownerIndexBit == 0

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: Confirmation(msg.sender,_operation)

  ID: 15
  Type: NodeType.IF
  Expression: pending.yetNeeded <= 1

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: delete m_pendingIndex[m_pending[_operation].index]

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: delete m_pending[_operation]

  ID: 18
  Type: NodeType.RETURN
  Expression: true

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: pending.yetNeeded --

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: pending.ownersDone |= ownerIndexBit

  ID: 21
  Type: NodeType.ENDIF
  Expression: 

  ID: 22
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  6 -> 11
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  13 -> 22
  14 -> 15
  15 -> 16
  15 -> 19
  16 -> 17
  17 -> 18
  19 -> 20
  20 -> 21
  21 -> 22

Function: reorganizeOwners
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: free = 1

  ID: 2
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 3
  Type: NodeType.IFLOOP
  Expression: free < m_numOwners

  ID: 4
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 5
  Type: NodeType.IFLOOP
  Expression: free < m_numOwners && m_owners[free] != 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: free ++

  ID: 7
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 8
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 9
  Type: NodeType.IFLOOP
  Expression: m_numOwners > 1 && m_owners[m_numOwners] == 0

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: m_numOwners --

  ID: 11
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 12
  Type: NodeType.IF
  Expression: free < m_numOwners && m_owners[m_numOwners] != 0 && m_owners[free] == 0

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: m_owners[free] = m_owners[m_numOwners]

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[m_owners[free]] = free

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: m_owners[m_numOwners] = 0

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 17
  Type: NodeType.ENDLOOP
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 17
  4 -> 5
  5 -> 6
  5 -> 7
  6 -> 5
  7 -> 8
  8 -> 9
  9 -> 10
  9 -> 11
  10 -> 9
  11 -> 12
  12 -> 13
  12 -> 16
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 3

Function: clearPending
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: length = m_pendingIndex.length

  ID: 2
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 3
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 5
  Type: NodeType.IFLOOP
  Expression: i < length

  ID: 6
  Type: NodeType.IF
  Expression: m_pendingIndex[i] != 0

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: delete m_pending[m_pendingIndex[i]]

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: ++ i

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: delete m_pendingIndex

Edges:
  0 -> 1
  1 -> 4
  2 -> 5
  3 -> 10
  4 -> 2
  5 -> 6
  5 -> 3
  6 -> 7
  6 -> 8
  7 -> 8
  8 -> 9
  9 -> 5

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: c_maxOwners = 250

Edges:


Contract: daylimit
==================================================

Function: multiowned
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: m_numOwners = _owners.length + 1

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: m_owners[1] = uint256(msg.sender)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(msg.sender)] = 1

  ID: 4
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 5
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 7
  Type: NodeType.IFLOOP
  Expression: i < _owners.length

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: m_owners[2 + i] = uint256(_owners[i])

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_owners[i])] = 2 + i

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: ++ i

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: m_required = _required

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 6
  4 -> 7
  5 -> 11
  6 -> 4
  7 -> 8
  7 -> 5
  8 -> 9
  9 -> 10
  10 -> 7

Function: revoke
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(msg.sender)]

  ID: 2
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 3
  Type: NodeType.RETURN
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: ownerIndexBit = 2 ** ownerIndex

  ID: 6
  Type: NodeType.VARIABLE
  Expression: pending = m_pending[_operation]

  ID: 7
  Type: NodeType.IF
  Expression: pending.ownersDone & ownerIndexBit > 0

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: pending.yetNeeded ++

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: pending.ownersDone -= ownerIndexBit

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: Revoke(msg.sender,_operation)

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 11
  8 -> 9
  9 -> 10
  10 -> 11

Function: changeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: isOwner(_to)

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(_from)]

  ID: 5
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 6
  Type: NodeType.RETURN
  Expression: 

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: m_owners[ownerIndex] = uint256(_to)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_from)] = 0

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_to)] = ownerIndex

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: OwnerChanged(_from,_to)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 13
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  13 -> 1

Function: addOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: isOwner(_owner)

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 5
  Type: NodeType.IF
  Expression: m_numOwners >= c_maxOwners

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: reorganizeOwners()

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.IF
  Expression: m_numOwners >= c_maxOwners

  ID: 9
  Type: NodeType.RETURN
  Expression: 

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: m_numOwners ++

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: m_owners[m_numOwners] = uint256(_owner)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_owner)] = m_numOwners

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: OwnerAdded(_owner)

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 15
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  6 -> 7
  7 -> 8
  8 -> 9
  8 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  15 -> 1

Function: removeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(_owner)]

  ID: 2
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 3
  Type: NodeType.RETURN
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.IF
  Expression: m_required > m_numOwners - 1

  ID: 6
  Type: NodeType.RETURN
  Expression: 

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: m_owners[ownerIndex] = 0

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_owner)] = 0

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: reorganizeOwners()

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: OwnerRemoved(_owner)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 13
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  13 -> 1

Function: changeRequirement
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _newRequired > m_numOwners

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: m_required = _newRequired

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: RequirementChanged(_newRequired)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 7
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1

Function: getOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: address(m_owners[ownerIndex + 1])

Edges:
  0 -> 1

Function: isOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: m_ownerIndex[uint256(_addr)] > 0

Edges:
  0 -> 1

Function: hasConfirmed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: pending = m_pending[_operation]

  ID: 2
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(_owner)]

  ID: 3
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 4
  Type: NodeType.RETURN
  Expression: false

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: ownerIndexBit = 2 ** ownerIndex

  ID: 7
  Type: NodeType.RETURN
  Expression: ! (pending.ownersDone & ownerIndexBit == 0)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  5 -> 6
  6 -> 7

Function: confirmAndCheck
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(msg.sender)]

  ID: 2
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 3
  Type: NodeType.RETURN
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: pending = m_pending[_operation]

  ID: 6
  Type: NodeType.IF
  Expression: pending.yetNeeded == 0

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: pending.yetNeeded = m_required

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: pending.ownersDone = 0

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: pending.index = m_pendingIndex.length ++

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: m_pendingIndex[pending.index] = _operation

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.VARIABLE
  Expression: ownerIndexBit = 2 ** ownerIndex

  ID: 13
  Type: NodeType.IF
  Expression: pending.ownersDone & ownerIndexBit == 0

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: Confirmation(msg.sender,_operation)

  ID: 15
  Type: NodeType.IF
  Expression: pending.yetNeeded <= 1

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: delete m_pendingIndex[m_pending[_operation].index]

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: delete m_pending[_operation]

  ID: 18
  Type: NodeType.RETURN
  Expression: true

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: pending.yetNeeded --

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: pending.ownersDone |= ownerIndexBit

  ID: 21
  Type: NodeType.ENDIF
  Expression: 

  ID: 22
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  6 -> 11
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  13 -> 22
  14 -> 15
  15 -> 16
  15 -> 19
  16 -> 17
  17 -> 18
  19 -> 20
  20 -> 21
  21 -> 22

Function: reorganizeOwners
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: free = 1

  ID: 2
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 3
  Type: NodeType.IFLOOP
  Expression: free < m_numOwners

  ID: 4
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 5
  Type: NodeType.IFLOOP
  Expression: free < m_numOwners && m_owners[free] != 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: free ++

  ID: 7
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 8
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 9
  Type: NodeType.IFLOOP
  Expression: m_numOwners > 1 && m_owners[m_numOwners] == 0

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: m_numOwners --

  ID: 11
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 12
  Type: NodeType.IF
  Expression: free < m_numOwners && m_owners[m_numOwners] != 0 && m_owners[free] == 0

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: m_owners[free] = m_owners[m_numOwners]

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[m_owners[free]] = free

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: m_owners[m_numOwners] = 0

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 17
  Type: NodeType.ENDLOOP
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 17
  4 -> 5
  5 -> 6
  5 -> 7
  6 -> 5
  7 -> 8
  8 -> 9
  9 -> 10
  9 -> 11
  10 -> 9
  11 -> 12
  12 -> 13
  12 -> 16
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 3

Function: clearPending
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: length = m_pendingIndex.length

  ID: 2
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 3
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 5
  Type: NodeType.IFLOOP
  Expression: i < length

  ID: 6
  Type: NodeType.IF
  Expression: m_pendingIndex[i] != 0

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: delete m_pending[m_pendingIndex[i]]

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: ++ i

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: delete m_pendingIndex

Edges:
  0 -> 1
  1 -> 4
  2 -> 5
  3 -> 10
  4 -> 2
  5 -> 6
  5 -> 3
  6 -> 7
  6 -> 8
  7 -> 8
  8 -> 9
  9 -> 5

Function: daylimit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: m_dailyLimit = _limit

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: m_lastDay = today()

Edges:
  0 -> 1
  1 -> 2

Function: setDailyLimit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: m_dailyLimit = _newLimit

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 2
  2 -> 1

Function: resetSpentToday
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: m_spentToday = 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 2
  2 -> 1

Function: underLimit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: today() > m_lastDay

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: m_spentToday = 0

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: m_lastDay = today()

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.IF
  Expression: m_spentToday + _value >= m_spentToday && m_spentToday + _value <= m_dailyLimit

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: m_spentToday += _value

  ID: 7
  Type: NodeType.RETURN
  Expression: true

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.RETURN
  Expression: false

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: onlyowner()

Edges:
  0 -> 10
  1 -> 2
  1 -> 4
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 8
  6 -> 7
  8 -> 9
  10 -> 1

Function: today
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: now / 86400

Edges:
  0 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: c_maxOwners = 250

Edges:


Contract: multisig
==================================================


Contract: Wallet
==================================================

Function: daylimit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: m_dailyLimit = _limit

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: m_lastDay = today()

Edges:
  0 -> 1
  1 -> 2

Function: setDailyLimit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: m_dailyLimit = _newLimit

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 2
  2 -> 1

Function: resetSpentToday
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: m_spentToday = 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 2
  2 -> 1

Function: underLimit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: today() > m_lastDay

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: m_spentToday = 0

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: m_lastDay = today()

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.IF
  Expression: m_spentToday + _value >= m_spentToday && m_spentToday + _value <= m_dailyLimit

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: m_spentToday += _value

  ID: 7
  Type: NodeType.RETURN
  Expression: true

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.RETURN
  Expression: false

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: onlyowner()

Edges:
  0 -> 10
  1 -> 2
  1 -> 4
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 8
  6 -> 7
  8 -> 9
  10 -> 1

Function: today
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: now / 86400

Edges:
  0 -> 1

Function: multiowned
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: m_numOwners = _owners.length + 1

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: m_owners[1] = uint256(msg.sender)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(msg.sender)] = 1

  ID: 4
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 5
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 7
  Type: NodeType.IFLOOP
  Expression: i < _owners.length

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: m_owners[2 + i] = uint256(_owners[i])

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_owners[i])] = 2 + i

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: ++ i

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: m_required = _required

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 6
  4 -> 7
  5 -> 11
  6 -> 4
  7 -> 8
  7 -> 5
  8 -> 9
  9 -> 10
  10 -> 7

Function: revoke
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(msg.sender)]

  ID: 2
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 3
  Type: NodeType.RETURN
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: ownerIndexBit = 2 ** ownerIndex

  ID: 6
  Type: NodeType.VARIABLE
  Expression: pending = m_pending[_operation]

  ID: 7
  Type: NodeType.IF
  Expression: pending.ownersDone & ownerIndexBit > 0

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: pending.yetNeeded ++

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: pending.ownersDone -= ownerIndexBit

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: Revoke(msg.sender,_operation)

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 11
  8 -> 9
  9 -> 10
  10 -> 11

Function: changeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: isOwner(_to)

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(_from)]

  ID: 5
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 6
  Type: NodeType.RETURN
  Expression: 

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: m_owners[ownerIndex] = uint256(_to)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_from)] = 0

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_to)] = ownerIndex

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: OwnerChanged(_from,_to)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 13
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  13 -> 1

Function: addOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: isOwner(_owner)

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 5
  Type: NodeType.IF
  Expression: m_numOwners >= c_maxOwners

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: reorganizeOwners()

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.IF
  Expression: m_numOwners >= c_maxOwners

  ID: 9
  Type: NodeType.RETURN
  Expression: 

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: m_numOwners ++

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: m_owners[m_numOwners] = uint256(_owner)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_owner)] = m_numOwners

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: OwnerAdded(_owner)

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 15
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  6 -> 7
  7 -> 8
  8 -> 9
  8 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  15 -> 1

Function: removeOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(_owner)]

  ID: 2
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 3
  Type: NodeType.RETURN
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.IF
  Expression: m_required > m_numOwners - 1

  ID: 6
  Type: NodeType.RETURN
  Expression: 

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: m_owners[ownerIndex] = 0

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[uint256(_owner)] = 0

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: reorganizeOwners()

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: OwnerRemoved(_owner)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 13
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  13 -> 1

Function: changeRequirement
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _newRequired > m_numOwners

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: m_required = _newRequired

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: clearPending()

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: RequirementChanged(_newRequired)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 7
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1

Function: getOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: address(m_owners[ownerIndex + 1])

Edges:
  0 -> 1

Function: isOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: m_ownerIndex[uint256(_addr)] > 0

Edges:
  0 -> 1

Function: hasConfirmed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: pending = m_pending[_operation]

  ID: 2
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(_owner)]

  ID: 3
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 4
  Type: NodeType.RETURN
  Expression: false

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: ownerIndexBit = 2 ** ownerIndex

  ID: 7
  Type: NodeType.RETURN
  Expression: ! (pending.ownersDone & ownerIndexBit == 0)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  5 -> 6
  6 -> 7

Function: confirmAndCheck
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ownerIndex = m_ownerIndex[uint256(msg.sender)]

  ID: 2
  Type: NodeType.IF
  Expression: ownerIndex == 0

  ID: 3
  Type: NodeType.RETURN
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: pending = m_pending[_operation]

  ID: 6
  Type: NodeType.IF
  Expression: pending.yetNeeded == 0

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: pending.yetNeeded = m_required

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: pending.ownersDone = 0

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: pending.index = m_pendingIndex.length ++

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: m_pendingIndex[pending.index] = _operation

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.VARIABLE
  Expression: ownerIndexBit = 2 ** ownerIndex

  ID: 13
  Type: NodeType.IF
  Expression: pending.ownersDone & ownerIndexBit == 0

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: Confirmation(msg.sender,_operation)

  ID: 15
  Type: NodeType.IF
  Expression: pending.yetNeeded <= 1

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: delete m_pendingIndex[m_pending[_operation].index]

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: delete m_pending[_operation]

  ID: 18
  Type: NodeType.RETURN
  Expression: true

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: pending.yetNeeded --

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: pending.ownersDone |= ownerIndexBit

  ID: 21
  Type: NodeType.ENDIF
  Expression: 

  ID: 22
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  6 -> 11
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  13 -> 22
  14 -> 15
  15 -> 16
  15 -> 19
  16 -> 17
  17 -> 18
  19 -> 20
  20 -> 21
  21 -> 22

Function: reorganizeOwners
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: free = 1

  ID: 2
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 3
  Type: NodeType.IFLOOP
  Expression: free < m_numOwners

  ID: 4
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 5
  Type: NodeType.IFLOOP
  Expression: free < m_numOwners && m_owners[free] != 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: free ++

  ID: 7
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 8
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 9
  Type: NodeType.IFLOOP
  Expression: m_numOwners > 1 && m_owners[m_numOwners] == 0

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: m_numOwners --

  ID: 11
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 12
  Type: NodeType.IF
  Expression: free < m_numOwners && m_owners[m_numOwners] != 0 && m_owners[free] == 0

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: m_owners[free] = m_owners[m_numOwners]

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: m_ownerIndex[m_owners[free]] = free

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: m_owners[m_numOwners] = 0

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 17
  Type: NodeType.ENDLOOP
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 17
  4 -> 5
  5 -> 6
  5 -> 7
  6 -> 5
  7 -> 8
  8 -> 9
  9 -> 10
  9 -> 11
  10 -> 9
  11 -> 12
  12 -> 13
  12 -> 16
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 3

Function: clearPending
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: length = m_pendingIndex.length

  ID: 2
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 3
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 5
  Type: NodeType.IFLOOP
  Expression: i < length

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: delete m_txs[m_pendingIndex[i]]

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: ++ i

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: super.clearPending()

Edges:
  0 -> 1
  1 -> 4
  2 -> 5
  3 -> 8
  4 -> 2
  5 -> 6
  5 -> 3
  6 -> 7
  7 -> 5

Function: Wallet
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: multiowned(_owners,_required)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: daylimit(_daylimit)

Edges:
  0 -> 1
  1 -> 2

Function: kill
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: selfdestruct(address)(_to)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(sha3()(msg.data))

Edges:
  0 -> 2
  2 -> 1

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.value > 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Deposit(msg.sender,msg.value)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: execute
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: underLimit(_value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: SingleTransact(msg.sender,_value,_to,_data)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_to.call.value(_value)(_data))

  ID: 4
  Type: NodeType.RETURN
  Expression: 0

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _r = sha3()(msg.data,block.number)

  ID: 7
  Type: NodeType.IF
  Expression: ! confirm(_r) && m_txs[_r].to == 0

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: m_txs[_r].to = _to

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: m_txs[_r].value = _value

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: m_txs[_r].data = _data

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: ConfirmationNeeded(_r,msg.sender,_value,_to,_data)

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: onlyowner()

  ID: 14
  Type: NodeType.RETURN
  Expression: _r

Edges:
  0 -> 13
  1 -> 2
  1 -> 5
  2 -> 3
  3 -> 4
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 12
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 14
  13 -> 1

Function: confirm
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: m_txs[_h].to != 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: MultiTransact(msg.sender,_h,m_txs[_h].value,m_txs[_h].to,m_txs[_h].data)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: delete m_txs[_h]

  ID: 5
  Type: NodeType.RETURN
  Expression: true

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlymanyowners(_h)

Edges:
  0 -> 7
  1 -> 2
  1 -> 6
  2 -> 3
  3 -> 4
  4 -> 5
  7 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: c_maxOwners = 250

Edges:


