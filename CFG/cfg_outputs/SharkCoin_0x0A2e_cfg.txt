Contract: IERC20
==================================================


Contract: IERC20Metadata
==================================================


Contract: Context
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1


Contract: SharkCoin
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _name = Shark Coin

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _symbol = FIN

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _decimals = 18

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _totalSupply = 3_500_000_000 * 10 ** uint256(_decimals)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _balances[msg.sender] = _totalSupply

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _owner = msg.sender

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),msg.sender,_totalSupply)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: name
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _name

Edges:
  0 -> 1

Function: symbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _symbol

Edges:
  0 -> 1

Function: decimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _decimals

Edges:
  0 -> 1

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _totalSupply

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _balances[account]

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_balances[_msgSender()] >= amount,ERC20: transfer amount exceeds balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _balances[_msgSender()] -= amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _balances[recipient] += amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(_msgSender(),recipient,amount)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _allowances[owner][spender]

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _allowances[_msgSender()][spender] = amount

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(_msgSender(),spender,amount)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_balances[sender] >= amount,ERC20: transfer amount exceeds balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_allowances[sender][_msgSender()] >= amount,ERC20: transfer amount exceeds allowance)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _balances[sender] -= amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _balances[recipient] += amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _allowances[sender][_msgSender()] -= amount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(sender,recipient,amount)

  ID: 7
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_balances[_msgSender()] >= amount,ERC20: burn amount exceeds balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _balances[_msgSender()] -= amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _totalSupply -= amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(_msgSender(),address(0),amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_msgSender() == _owner,Not the contract owner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(_owner,address(0))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _owner = address(0)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


