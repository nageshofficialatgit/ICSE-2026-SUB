Contract: WhiteHouseToken
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply = 38e21

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[owner] = totalSupply

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),owner,totalSupply)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),Invalid recipient)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= value,Insufficient balance)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,to,value)

  ID: 6
  Type: NodeType.RETURN
  Expression: true

  ID: 7
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(spender != address(0),Invalid spender)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: allowance[msg.sender][spender] = value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,value)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

  ID: 5
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),Invalid recipient)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[from] >= value,Insufficient balance)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowance[from][msg.sender] >= value,Allowance exceeded)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[from] -= value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: allowance[from][msg.sender] -= value

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,value)

  ID: 8
  Type: NodeType.RETURN
  Expression: true

  ID: 9
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: mint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Only owner can mint)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply += value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[owner] += value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),owner,value)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Only owner can burn)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[owner] >= value,Insufficient balance to burn)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[owner] -= value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: totalSupply -= value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(owner,address(0),value)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: requestOwnershipTransfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Only owner can request transfer)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner != address(0),Invalid new owner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ownershipChangeTime = block.timestamp + 259200

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: pendingOwner = newOwner

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferRequested(newOwner)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: confirmOwnershipTransfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == pendingOwner,Only pending owner can confirm)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp >= ownershipChangeTime,Timelock active)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(owner,pendingOwner)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: owner = pendingOwner

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: pendingOwner = address(0)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: ownershipChangeTime = 0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = White House Token

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = WHT

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 9

Edges:
  0 -> 1
  1 -> 2


