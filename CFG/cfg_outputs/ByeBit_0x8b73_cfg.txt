Contract: ByeBit
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply = 100_000_000 * (10 ** uint256(decimals))

  ID: 3
  Type: NodeType.VARIABLE
  Expression: twoPercent = 2_000_000 * (10 ** uint256(decimals))

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] = twoPercent

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balanceOf[friendAddress] = twoPercent

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balanceOf[address(this)] = totalSupply - (2 * twoPercent)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),msg.sender,twoPercent)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),friendAddress,twoPercent)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),address(this),totalSupply - (2 * twoPercent))

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9

Function: mint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Only the owner can mint tokens)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: amountWithDecimals = amount * (10 ** uint256(decimals))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: totalSupply += amountWithDecimals

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += amountWithDecimals

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),to,amountWithDecimals)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Only the owner can burn tokens)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: amountWithDecimals = amount * (10 ** uint256(decimals))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= amountWithDecimals,Insufficient balance to burn)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= amountWithDecimals

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: totalSupply -= amountWithDecimals

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,address(0),amountWithDecimals)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= value,Insufficient balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,to,value)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = ByeBit

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = BYE

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

Edges:
  0 -> 1
  1 -> 2


