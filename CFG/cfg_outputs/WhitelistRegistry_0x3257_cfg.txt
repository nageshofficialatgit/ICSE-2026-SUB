Contract: IWhitelistRegistry
==================================================


Contract: IGovernance
==================================================


Contract: WhitelistRegistry
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: governance = _governance

Edges:
  0 -> 1

Function: whitelistedLength
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: whitelisted.length

Edges:
  0 -> 1

Function: allWhiteListed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: list = whitelisted

  ID: 2
  Type: NodeType.VARIABLE
  Expression: length = list.length

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: allowed = new bool[](length)

  ID: 4
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 5
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 7
  Type: NodeType.IFLOOP
  Expression: i < length

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: allowed[i] = isWhitelisted[whitelisted[i]]

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 10
  Type: NodeType.RETURN
  Expression: (list,allowed)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 6
  4 -> 7
  5 -> 10
  6 -> 4
  7 -> 8
  7 -> 5
  8 -> 9
  9 -> 7

Function: setWhiteList
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: whitelisted.length == 0 || whitelisted[whitelistedInv[_who]] != _who

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: whitelistedInv[_who] = whitelisted.length

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: whitelisted.push(_who)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: isWhitelisted[_who] = _allow

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Whitelisted(_who,_allow)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlyVoting()

Edges:
  0 -> 7
  1 -> 2
  1 -> 4
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1


