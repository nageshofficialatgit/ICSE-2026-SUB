Contract: Proxy
==================================================

Function: _delegate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())

  ID: 3
  Type: NodeType.VARIABLE
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())

  ID: 6
  Type: NodeType.VARIABLE
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: switch_expr_1983_234_0__delegate_asm_0 = result__delegate_asm_0

  ID: 8
  Type: NodeType.IF
  Expression: switch_expr_1983_234_0__delegate_asm_0 == 0

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: revert(uint256,uint256)(0,returndatasize()())

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: return(uint256,uint256)(0,returndatasize()())

  ID: 12
  Type: NodeType.ENDASSEMBLY
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 10
  8 -> 11
  9 -> 12
  10 -> 9
  11 -> 9

Function: _fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _beforeFallback()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _delegate(_implementation())

Edges:
  0 -> 1
  1 -> 2

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _fallback()

Edges:
  0 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _fallback()

Edges:
  0 -> 1

Function: _beforeFallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:


Contract: IBeacon
==================================================


Contract: IERC1822Proxiable
==================================================


Contract: Address
==================================================

Function: isContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: account.code.length > 0

Edges:
  0 -> 1

Function: sendValue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(address(this).balance >= amount,Address: insufficient balance)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: (success,None) = recipient.call{value: amount}()

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,Address: unable to send value, recipient may have reverted)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: functionCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: functionCallWithValue(target,data,0,errorMessage)

Edges:
  0 -> 1

Function: functionCallWithValue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(address(this).balance >= value,Address: insufficient balance for call)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.VARIABLE
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: (success,returndata) = target.call{value: value}(data)

  ID: 5
  Type: NodeType.RETURN
  Expression: verifyCallResultFromTarget(target,success,returndata,errorMessage)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: functionStaticCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: (success,returndata) = target.staticcall(data)

  ID: 4
  Type: NodeType.RETURN
  Expression: verifyCallResultFromTarget(target,success,returndata,errorMessage)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: functionDelegateCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: (success,returndata) = target.delegatecall(data)

  ID: 4
  Type: NodeType.RETURN
  Expression: verifyCallResultFromTarget(target,success,returndata,errorMessage)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: verifyCallResultFromTarget
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: success

  ID: 2
  Type: NodeType.IF
  Expression: returndata.length == 0

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(isContract(target),Address: call to non-contract)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.RETURN
  Expression: returndata

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _revert(returndata,errorMessage)

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 6
  2 -> 3
  2 -> 4
  3 -> 4
  4 -> 5
  6 -> 7

Function: verifyCallResult
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: success

  ID: 2
  Type: NodeType.RETURN
  Expression: returndata

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _revert(returndata,errorMessage)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4

Function: _revert
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: returndata.length > 0

  ID: 2
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 3
  Type: NodeType.VARIABLE
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: returndata_size__revert_asm_0 = mload(uint256)(returndata)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: revert(uint256,uint256)(32 + returndata,returndata_size__revert_asm_0)

  ID: 6
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: revert(string)(errorMessage)

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 7
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 8
  7 -> 8


Contract: StorageSlot
==================================================

Function: getAddressSlot
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: r = slot

  ID: 3
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: r

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: getBooleanSlot
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: r = slot

  ID: 3
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: r

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: getBytes32Slot
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: r = slot

  ID: 3
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: r

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: getUint256Slot
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: r = slot

  ID: 3
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: r

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: getStringSlot
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: r = store

  ID: 3
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: r

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: getBytesSlot
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: r = store

  ID: 3
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 4
  Type: NodeType.RETURN
  Expression: r

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: ERC1967Upgrade
==================================================

Function: _getImplementation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value

Edges:
  0 -> 1

Function: _setImplementation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation

Edges:
  0 -> 1
  1 -> 2

Function: _upgradeTo
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _setImplementation(newImplementation)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Upgraded(newImplementation)

Edges:
  0 -> 1
  1 -> 2

Function: _upgradeToAndCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _upgradeTo(newImplementation)

  ID: 2
  Type: NodeType.IF
  Expression: data.length > 0 || forceCall

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Address.functionDelegateCall(newImplementation,data)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  3 -> 4

Function: _upgradeToAndCallUUPS
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _setImplementation(newImplementation)

  ID: 3
  Type: NodeType.TRY
  Expression: slot = IERC1822Proxiable(newImplementation).proxiableUUID()

  ID: 4
  Type: NodeType.CATCH
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(slot == _IMPLEMENTATION_SLOT,ERC1967Upgrade: unsupported proxiableUUID)

  ID: 6
  Type: NodeType.CATCH
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: revert(string)(ERC1967Upgrade: new implementation is not UUPS)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: _upgradeToAndCall(newImplementation,data,forceCall)

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 9
  3 -> 4
  3 -> 6
  3 -> 8
  4 -> 5
  5 -> 8
  6 -> 7
  7 -> 8
  8 -> 9

Function: _getAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: StorageSlot.getAddressSlot(_ADMIN_SLOT).value

Edges:
  0 -> 1

Function: _setAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin

Edges:
  0 -> 1
  1 -> 2

Function: _changeAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: AdminChanged(_getAdmin(),newAdmin)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _setAdmin(newAdmin)

Edges:
  0 -> 1
  1 -> 2

Function: _getBeacon
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: StorageSlot.getAddressSlot(_BEACON_SLOT).value

Edges:
  0 -> 1

Function: _setBeacon
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(Address.isContract(newBeacon),ERC1967: new beacon is not a contract)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(Address.isContract(IBeacon(newBeacon).implementation()),ERC1967: beacon implementation is not a contract)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _upgradeBeaconToAndCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _setBeacon(newBeacon)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: BeaconUpgraded(newBeacon)

  ID: 3
  Type: NodeType.IF
  Expression: data.length > 0 || forceCall

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Address.functionDelegateCall(IBeacon(newBeacon).implementation(),data)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: ERC1967Proxy
==================================================

Function: _getImplementation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value

Edges:
  0 -> 1

Function: _setImplementation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation

Edges:
  0 -> 1
  1 -> 2

Function: _upgradeTo
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _setImplementation(newImplementation)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Upgraded(newImplementation)

Edges:
  0 -> 1
  1 -> 2

Function: _upgradeToAndCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _upgradeTo(newImplementation)

  ID: 2
  Type: NodeType.IF
  Expression: data.length > 0 || forceCall

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Address.functionDelegateCall(newImplementation,data)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  3 -> 4

Function: _upgradeToAndCallUUPS
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _setImplementation(newImplementation)

  ID: 3
  Type: NodeType.TRY
  Expression: slot = IERC1822Proxiable(newImplementation).proxiableUUID()

  ID: 4
  Type: NodeType.CATCH
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(slot == _IMPLEMENTATION_SLOT,ERC1967Upgrade: unsupported proxiableUUID)

  ID: 6
  Type: NodeType.CATCH
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: revert(string)(ERC1967Upgrade: new implementation is not UUPS)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: _upgradeToAndCall(newImplementation,data,forceCall)

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 9
  3 -> 4
  3 -> 6
  3 -> 8
  4 -> 5
  5 -> 8
  6 -> 7
  7 -> 8
  8 -> 9

Function: _getAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: StorageSlot.getAddressSlot(_ADMIN_SLOT).value

Edges:
  0 -> 1

Function: _setAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin

Edges:
  0 -> 1
  1 -> 2

Function: _changeAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: AdminChanged(_getAdmin(),newAdmin)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _setAdmin(newAdmin)

Edges:
  0 -> 1
  1 -> 2

Function: _getBeacon
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: StorageSlot.getAddressSlot(_BEACON_SLOT).value

Edges:
  0 -> 1

Function: _setBeacon
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(Address.isContract(newBeacon),ERC1967: new beacon is not a contract)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(Address.isContract(IBeacon(newBeacon).implementation()),ERC1967: beacon implementation is not a contract)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _upgradeBeaconToAndCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _setBeacon(newBeacon)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: BeaconUpgraded(newBeacon)

  ID: 3
  Type: NodeType.IF
  Expression: data.length > 0 || forceCall

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Address.functionDelegateCall(IBeacon(newBeacon).implementation(),data)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5

Function: _delegate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())

  ID: 3
  Type: NodeType.VARIABLE
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())

  ID: 6
  Type: NodeType.VARIABLE
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: switch_expr_1983_234_0__delegate_asm_0 = result__delegate_asm_0

  ID: 8
  Type: NodeType.IF
  Expression: switch_expr_1983_234_0__delegate_asm_0 == 0

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: revert(uint256,uint256)(0,returndatasize()())

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: return(uint256,uint256)(0,returndatasize()())

  ID: 12
  Type: NodeType.ENDASSEMBLY
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 10
  8 -> 11
  9 -> 12
  10 -> 9
  11 -> 9

Function: _fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _beforeFallback()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _delegate(_implementation())

Edges:
  0 -> 1
  1 -> 2

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _fallback()

Edges:
  0 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _fallback()

Edges:
  0 -> 1

Function: _beforeFallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _upgradeToAndCall(_logic,_data,false)

Edges:
  0 -> 1

Function: _implementation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: ERC1967Upgrade._getImplementation()

  ID: 2
  Type: NodeType.RETURN
  Expression: impl

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50

Edges:
  0 -> 1
  1 -> 2


Contract: TransparentUpgradeableProxy
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _changeAdmin(admin_)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ERC1967Proxy(_logic,_data)

Edges:
  0 -> 2
  2 -> 1

Function: _implementation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: ERC1967Upgrade._getImplementation()

  ID: 2
  Type: NodeType.RETURN
  Expression: impl

Edges:
  0 -> 1

Function: _getImplementation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value

Edges:
  0 -> 1

Function: _setImplementation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation

Edges:
  0 -> 1
  1 -> 2

Function: _upgradeTo
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _setImplementation(newImplementation)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Upgraded(newImplementation)

Edges:
  0 -> 1
  1 -> 2

Function: _upgradeToAndCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _upgradeTo(newImplementation)

  ID: 2
  Type: NodeType.IF
  Expression: data.length > 0 || forceCall

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Address.functionDelegateCall(newImplementation,data)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  3 -> 4

Function: _upgradeToAndCallUUPS
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _setImplementation(newImplementation)

  ID: 3
  Type: NodeType.TRY
  Expression: slot = IERC1822Proxiable(newImplementation).proxiableUUID()

  ID: 4
  Type: NodeType.CATCH
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(slot == _IMPLEMENTATION_SLOT,ERC1967Upgrade: unsupported proxiableUUID)

  ID: 6
  Type: NodeType.CATCH
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: revert(string)(ERC1967Upgrade: new implementation is not UUPS)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: _upgradeToAndCall(newImplementation,data,forceCall)

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 9
  3 -> 4
  3 -> 6
  3 -> 8
  4 -> 5
  5 -> 8
  6 -> 7
  7 -> 8
  8 -> 9

Function: _getAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: StorageSlot.getAddressSlot(_ADMIN_SLOT).value

Edges:
  0 -> 1

Function: _setAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin

Edges:
  0 -> 1
  1 -> 2

Function: _changeAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: AdminChanged(_getAdmin(),newAdmin)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _setAdmin(newAdmin)

Edges:
  0 -> 1
  1 -> 2

Function: _getBeacon
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: StorageSlot.getAddressSlot(_BEACON_SLOT).value

Edges:
  0 -> 1

Function: _setBeacon
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(Address.isContract(newBeacon),ERC1967: new beacon is not a contract)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(Address.isContract(IBeacon(newBeacon).implementation()),ERC1967: beacon implementation is not a contract)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _upgradeBeaconToAndCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _setBeacon(newBeacon)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: BeaconUpgraded(newBeacon)

  ID: 3
  Type: NodeType.IF
  Expression: data.length > 0 || forceCall

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Address.functionDelegateCall(IBeacon(newBeacon).implementation(),data)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5

Function: _delegate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())

  ID: 3
  Type: NodeType.VARIABLE
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())

  ID: 6
  Type: NodeType.VARIABLE
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: switch_expr_1983_234_0__delegate_asm_0 = result__delegate_asm_0

  ID: 8
  Type: NodeType.IF
  Expression: switch_expr_1983_234_0__delegate_asm_0 == 0

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: revert(uint256,uint256)(0,returndatasize()())

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: return(uint256,uint256)(0,returndatasize()())

  ID: 12
  Type: NodeType.ENDASSEMBLY
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 10
  8 -> 11
  9 -> 12
  10 -> 9
  11 -> 9

Function: _fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _beforeFallback()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _delegate(_implementation())

Edges:
  0 -> 1
  1 -> 2

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _fallback()

Edges:
  0 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _fallback()

Edges:
  0 -> 1

Function: _beforeFallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: super._beforeFallback()

Edges:
  0 -> 1
  1 -> 2

Function: admin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _requireZeroValue()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: admin_ = _getAdmin()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ifAdmin()

  ID: 4
  Type: NodeType.RETURN
  Expression: admin_

Edges:
  0 -> 3
  1 -> 2
  2 -> 4
  3 -> 1

Function: implementation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _requireZeroValue()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: implementation_ = _implementation()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ifAdmin()

  ID: 4
  Type: NodeType.RETURN
  Expression: implementation_

Edges:
  0 -> 3
  1 -> 2
  2 -> 4
  3 -> 1

Function: changeAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _requireZeroValue()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _changeAdmin(newAdmin)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ifAdmin()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: upgradeTo
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _requireZeroValue()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _upgradeToAndCall(newImplementation,bytes(),false)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ifAdmin()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: upgradeToAndCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _upgradeToAndCall(newImplementation,data,true)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ifAdmin()

Edges:
  0 -> 2
  2 -> 1

Function: _admin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _getAdmin()

Edges:
  0 -> 1

Function: _requireZeroValue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.value == 0)

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50

Edges:
  0 -> 1
  1 -> 2


Contract: Context
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: _msgData
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.data

Edges:
  0 -> 1


Contract: Ownable
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: _msgData
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.data

Edges:
  0 -> 1

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transferOwnership(_msgSender())

Edges:
  0 -> 1

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _owner

Edges:
  0 -> 1

Function: _checkOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner)

Edges:
  0 -> 1

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transferOwnership(address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner != address(0),Ownable: new owner is the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _transferOwnership(newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: _transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: oldOwner = _owner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = newOwner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(oldOwner,newOwner)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: ProxyAdmin
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transferOwnership(_msgSender())

Edges:
  0 -> 1

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _owner

Edges:
  0 -> 1

Function: _checkOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner)

Edges:
  0 -> 1

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transferOwnership(address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner != address(0),Ownable: new owner is the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _transferOwnership(newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: _transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: oldOwner = _owner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = newOwner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(oldOwner,newOwner)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: _msgData
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.data

Edges:
  0 -> 1

Function: getProxyImplementation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: (success,returndata) = address(proxy).staticcall(0x5c60da1b)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool)(success)

  ID: 5
  Type: NodeType.RETURN
  Expression: abi.decode(returndata,(address))

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: getProxyAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: (success,returndata) = address(proxy).staticcall(0xf851a440)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool)(success)

  ID: 5
  Type: NodeType.RETURN
  Expression: abi.decode(returndata,(address))

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: changeProxyAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: proxy.changeAdmin(newAdmin)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: upgrade
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: proxy.upgradeTo(implementation)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: upgradeAndCall
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: proxy.upgradeToAndCall{value: msg.value}(implementation,data)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1


Contract: ReentrancyGuard
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _status = _NOT_ENTERED

Edges:
  0 -> 1

Function: _nonReentrantBefore
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _status = _ENTERED

Edges:
  0 -> 1
  1 -> 2

Function: _nonReentrantAfter
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _status = _NOT_ENTERED

Edges:
  0 -> 1

Function: _reentrancyGuardEntered
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _status == _ENTERED

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _NOT_ENTERED = 1

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _ENTERED = 2

Edges:
  0 -> 1


Contract: ProxyFactory
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transferOwnership(ownerAddr)

Edges:
  0 -> 1

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _owner

Edges:
  0 -> 1

Function: _checkOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner)

Edges:
  0 -> 1

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transferOwnership(address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner != address(0),Ownable: new owner is the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _transferOwnership(newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: _transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: oldOwner = _owner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = newOwner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(oldOwner,newOwner)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: _msgData
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.data

Edges:
  0 -> 1

Function: _nonReentrantBefore
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _status = _ENTERED

Edges:
  0 -> 1
  1 -> 2

Function: _nonReentrantAfter
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _status = _NOT_ENTERED

Edges:
  0 -> 1

Function: _reentrancyGuardEntered
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _status == _ENTERED

Edges:
  0 -> 1

Function: deploy
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(adminSalt != bytes32(0),Admin salt required)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(proxySalt != bytes32(0),Proxy salt required)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(implementationAddr != address(0) && implementationAddr != address(this),Invalid logic address)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: (adminContractAddr,proxyContractAddr) = getDeploymentAddress(adminSalt,proxySalt,implementationAddr,initData)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(adminContractAddr.code.length == 0,Admin address already taken)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(proxyContractAddr.code.length == 0,Proxy address already taken)

  ID: 9
  Type: NodeType.VARIABLE
  Expression: adminInstance = (new ProxyAdmin)()

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(address(adminInstance) == adminContractAddr,Admin deploy failed)

  ID: 11
  Type: NodeType.VARIABLE
  Expression: proxy = (new TransparentUpgradeableProxy)(implementationAddr,address(adminInstance),initData)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(address(proxy) == proxyContractAddr,Proxy deploy failed)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: adminInstance.transferOwnership(proxyOwnerAddr)

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: OnProxyDeployed(address(adminInstance),address(proxy))

  ID: 15
  Type: NodeType.RETURN
  Expression: (adminContractAddr,proxyContractAddr)

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 16
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  16 -> 17
  17 -> 1

Function: getDeploymentAddress
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: adminContractAddr = address(uint160(uint256(keccak256(bytes)(abi.encodePacked(bytes1(0xff),address(this),adminSalt,keccak256(bytes)(type()(ProxyAdmin).creationCode))))))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: proxyContractAddr = address(uint160(uint256(keccak256(bytes)(abi.encodePacked(bytes1(0xff),address(this),proxySalt,keccak256(bytes)(abi.encodePacked(type()(TransparentUpgradeableProxy).creationCode,abi.encode(implementationAddr,adminContractAddr,initData))))))))

  ID: 3
  Type: NodeType.RETURN
  Expression: (adminContractAddr,proxyContractAddr)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


