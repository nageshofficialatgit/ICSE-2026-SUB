Contract: TokenPresale
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: startTime = _startTime

Edges:
  0 -> 1
  1 -> 2

Function: getCurrentPrice
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: block.timestamp < startTime + 864000

  ID: 2
  Type: NodeType.RETURN
  Expression: 1100000000000

  ID: 3
  Type: NodeType.IF
  Expression: block.timestamp < startTime + 1728000

  ID: 4
  Type: NodeType.RETURN
  Expression: 2100000000000

  ID: 5
  Type: NodeType.RETURN
  Expression: 3100000000000

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  3 -> 5

Function: buyTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp >= startTime,Presale not started)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp < startTime + phaseDuration,Presale ended)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(totalSold < PRESALE_ALLOCATION,Presale sold out)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.value > 0,Send ETH to buy tokens)

  ID: 5
  Type: NodeType.VARIABLE
  Expression: price = getCurrentPrice()

  ID: 6
  Type: NodeType.VARIABLE
  Expression: tokensToBuy = (msg.value * 10 ** 18) / price

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(totalSold + tokensToBuy <= PRESALE_ALLOCATION,Exceeds allocation)

  ID: 8
  Type: NodeType.VARIABLE
  Expression: marketingShare = (msg.value * 3) / 100

  ID: 9
  Type: NodeType.VARIABLE
  Expression: liquidityShare = msg.value - marketingShare

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: address(marketingWallet).transfer(marketingShare)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: address(liquidityWallet).transfer(liquidityShare)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: userPurchases[msg.sender] += tokensToBuy

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: totalSold += tokensToBuy

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: TokensPurchased(msg.sender,tokensToBuy,msg.value)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14

Function: withdrawFunds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: address(owner).transfer(address(this).balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: marketingWallet = 0xC45a484d98B20E9200675e77AA40647446ff7747

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: liquidityWallet = 0x62E916ab4Ec99Bf950E049c732E88563DC362F56

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: phaseDuration = 2678400

Edges:
  0 -> 1
  1 -> 2

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOTAL_SUPPLY = 100_000_000 * 10 ** 18

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PRESALE_ALLOCATION = TOTAL_SUPPLY * 20 / 100

Edges:
  0 -> 1


