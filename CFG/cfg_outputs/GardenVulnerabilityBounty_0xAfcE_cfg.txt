Contract: GardenVulnerabilityBounty
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_daoTreasury != address(0),Invalid DAO Treasury address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_initialBountyPercentage <= 100,Initial bounty percentage must be <= 100)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: daoTreasury = _daoTreasury

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: initialBountyPercentage = _initialBountyPercentage

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: claimDeadline = block.timestamp + _claimPeriod

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: BountyContractDeployed(_daoTreasury,_initialBountyPercentage,_claimPeriod)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: depositExploitFunds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(exploitFunds == 0,Funds already deposited)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: minDeposit = EXPECTED_DEPOSIT - ((EXPECTED_DEPOSIT * SLIPPAGE_TOLERANCE_BPS) / BPS_DENOMINATOR)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: maxDeposit = EXPECTED_DEPOSIT + ((EXPECTED_DEPOSIT * SLIPPAGE_TOLERANCE_BPS) / BPS_DENOMINATOR)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.value >= minDeposit && msg.value <= maxDeposit,Deposit amount out of allowed range)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: exploitFunds = msg.value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: FundsDeposited(msg.sender,msg.value)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: getCurrentBountyPercentage
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: block.timestamp >= claimDeadline

  ID: 2
  Type: NodeType.RETURN
  Expression: 0

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: daysReamining = (claimDeadline - block.timestamp) / 86400

  ID: 5
  Type: NodeType.RETURN
  Expression: daysReamining

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5

Function: claimBounty
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp <= claimDeadline,Claim period has ended)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! bountyClaimed,Bounty already claimed)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(exploitFunds > 0,No funds deposited)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_rewardAddress != address(0),Invalid reward address)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: bountyClaimed = true

  ID: 6
  Type: NodeType.VARIABLE
  Expression: currentBountyPercentage = getCurrentBountyPercentage()

  ID: 7
  Type: NodeType.VARIABLE
  Expression: bountyAmount = (exploitFunds * currentBountyPercentage) / 100

  ID: 8
  Type: NodeType.VARIABLE
  Expression: treasuryAmount = exploitFunds - bountyAmount

  ID: 9
  Type: NodeType.VARIABLE
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: (sentBounty,None) = _rewardAddress.call{value: bountyAmount}()

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(sentBounty,Failed to send bounty to reward address)

  ID: 12
  Type: NodeType.VARIABLE
  Expression: 

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: (sentTreasury,None) = daoTreasury.call{value: treasuryAmount}()

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(sentTreasury,Failed to send funds to DAO Treasury)

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: BountyClaimed(msg.sender,bountyAmount,treasuryAmount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15

Function: getLegalWaiver
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: LEGAL_WAIVER

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: LEGAL_WAIVER = This contract is deployed by BLOK Capital DAO LLC with registration number 10050-23; and, registered address, PO Box 852, Long Island Rd, Majuro, Marshall Islands MH 96960 & ENS address blokcapital.eth. The contract is deployed for the specific purpose of the recovery of funds following an exploit of multiple Smart Wallet Accounts related to a Garden Vulnerability. There is a bounty payment due for the Bounty Hunter who will deposit the exact recovery funds by interacting with this contract. On successful interaction with this contract, by the bounty hunter, the recovery funds will move to the BLOK Capital DAO treasury and the Bounty Hunter will receive their bounty and upon receipt of their bounty payment this will serve as proof that all claims regarding this Garden Vulnerability will have been settled in a FULL and FINAL settlement. That all investigations by BLOK Capital DAO LLC into this matter will terminate with immediate effect. That the bounty hunter will have full anonymity and benefit from their reward.

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: EXPECTED_DEPOSIT = 64400000000000000000

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SLIPPAGE_TOLERANCE_BPS = 3

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BPS_DENOMINATOR = 10_000

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


