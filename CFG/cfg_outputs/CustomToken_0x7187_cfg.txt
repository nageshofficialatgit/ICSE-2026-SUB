Contract: CustomToken
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: tokenName = _tokenName

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: tokenSymbol = _tokenSymbol

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: tokenDecimals = _decimals

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: totalTokens = _initialTokens * 10 ** uint256(_decimals)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = totalTokens

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: TokensTransferred(address(0),msg.sender,totalTokens)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: sendTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(recipient != address(0),CustomToken: Cannot send to zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balances[msg.sender] >= amount,CustomToken: Insufficient balance)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[recipient] += amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: TokensTransferred(msg.sender,recipient,amount)

  ID: 6
  Type: NodeType.RETURN
  Expression: true

  ID: 7
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowed[msg.sender][delegate] = amount

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: SpendingApproved(msg.sender,delegate,amount)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: sendFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(sender != address(0),CustomToken: Sender cannot be zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(recipient != address(0),CustomToken: Recipient cannot be zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balances[sender] >= amount,CustomToken: Sender has insufficient balance)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowed[sender][msg.sender] >= amount,CustomToken: Amount exceeds allowance)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[sender] -= amount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balances[recipient] += amount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: allowed[sender][msg.sender] -= amount

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: TokensTransferred(sender,recipient,amount)

  ID: 9
  Type: NodeType.RETURN
  Expression: true

  ID: 10
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9


