Contract: TokenPocketCallbackProxyV2
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: executor = msg.sender

Edges:
  0 -> 1

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(authorizedSafeProxyFactory[msg.sender],Invalid safeProxyFactory called)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: DefaultSafeCreationByTokenPocket(tx.origin,msg.sender)

Edges:
  0 -> 1
  1 -> 2

Function: proxyCreated
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: SafeCreationByTokenPocket(tx.origin,proxy,_singleton,initializer,saltNonce)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyAuthorizedSafeProxyFactory()

Edges:
  0 -> 2
  2 -> 1

Function: updateAuthorizedSafeProxyFactory
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == executor,No executer role)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(isAuthorized.length == safeProxyFactories.length,invalid len)

  ID: 3
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 4
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.IFLOOP
  Expression: i < safeProxyFactories.length

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: authorizedSafeProxyFactory[safeProxyFactories[i]] = isAuthorized[i]

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: i ++

Edges:
  0 -> 1
  1 -> 2
  2 -> 5
  3 -> 6
  5 -> 3
  6 -> 7
  6 -> 4
  7 -> 8
  8 -> 6


