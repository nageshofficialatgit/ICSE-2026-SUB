Contract: IOpenOracle
==================================================


Contract: AutoBeacon
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: oracle = IOpenOracle(oracleAddress)

Edges:
  0 -> 1

Function: isSettleable
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: reportId == 0 || reportId >= oracle.nextReportId()

  ID: 2
  Type: NodeType.RETURN
  Expression: false

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: (None,None,None,None,reportTimestamp,None,None,isSettled,isDistributed,None) = oracle.reportStatus(reportId)

  ID: 8
  Type: NodeType.IF
  Expression: isSettled || isDistributed

  ID: 9
  Type: NodeType.RETURN
  Expression: false

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.VARIABLE
  Expression: 

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: (None,None,None,None,settlementTime,None,None,None,None,None,None) = oracle.reportMeta(reportId)

  ID: 13
  Type: NodeType.RETURN
  Expression: block.timestamp >= reportTimestamp + settlementTime

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  8 -> 10
  10 -> 11
  11 -> 12
  12 -> 13

Function: freeMoney
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! _locked,Reentrant call)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _locked = true

  ID: 3
  Type: NodeType.VARIABLE
  Expression: startBalance = address(this).balance

  ID: 4
  Type: NodeType.VARIABLE
  Expression: nextId = oracle.nextReportId()

  ID: 5
  Type: NodeType.VARIABLE
  Expression: settled = false

  ID: 7
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 8
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 9
  Type: NodeType.VARIABLE
  Expression: i = nextId - 1

  ID: 10
  Type: NodeType.IFLOOP
  Expression: i >= startId

  ID: 11
  Type: NodeType.IF
  Expression: isSettleable(i)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: oracle.settle(i)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: settled = true

  ID: 14
  Type: NodeType.BREAK
  Expression: 

  ID: 15
  Type: NodeType.ENDIF
  Expression: 

  ID: 16
  Type: NodeType.IF
  Expression: i == 0

  ID: 17
  Type: NodeType.BREAK
  Expression: 

  ID: 18
  Type: NodeType.ENDIF
  Expression: 

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: i --

  ID: 20
  Type: NodeType.IF
  Expression: settled

  ID: 21
  Type: NodeType.VARIABLE
  Expression: received = address(this).balance - startBalance

  ID: 22
  Type: NodeType.IF
  Expression: received > 0

  ID: 23
  Type: NodeType.VARIABLE
  Expression: 

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: (success,None) = address(msg.sender).call{value: received}()

  ID: 25
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,ETH transfer failed)

  ID: 26
  Type: NodeType.ENDIF
  Expression: 

  ID: 27
  Type: NodeType.ENDIF
  Expression: 

  ID: 28
  Type: NodeType.EXPRESSION
  Expression: _locked = false

  ID: 29
  Type: NodeType.IF
  Expression: nextId > 3

  ID: 30
  Type: NodeType.EXPRESSION
  Expression: startId = nextId - 3

  ID: 31
  Type: NodeType.EXPRESSION
  Expression: startId = 1

  ID: 32
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 29
  7 -> 10
  8 -> 20
  9 -> 7
  10 -> 11
  10 -> 8
  11 -> 12
  11 -> 15
  12 -> 13
  13 -> 14
  14 -> 8
  15 -> 16
  16 -> 17
  16 -> 18
  17 -> 8
  18 -> 19
  19 -> 10
  20 -> 21
  20 -> 27
  21 -> 22
  22 -> 23
  22 -> 26
  23 -> 24
  24 -> 25
  25 -> 26
  26 -> 27
  27 -> 28
  29 -> 30
  29 -> 31
  30 -> 32
  31 -> 32
  32 -> 9

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:


