Contract: MigrationAgent
==================================================


Contract: ERC20Interface
==================================================


Contract: BlocklancerToken
==================================================

Function: BlocklancerToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: master = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: fundingStart = 1501977600

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: fundingEnd = fundingStart + 31 * 86400

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: getAmountofTotalParticipants
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: totalParticipants

Edges:
  0 -> 1

Function: getAmountSoldAfterPowerDay
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: soldAfterPowerHour

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: funding

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: senderBalance = balances[msg.sender]

  ID: 5
  Type: NodeType.IF
  Expression: senderBalance >= _value && _value > 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: senderBalance -= _value

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = senderBalance

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: balances[_to] += _value

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: lastTransferred[msg.sender] = block.timestamp

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 11
  Type: NodeType.RETURN
  Expression: true

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.RETURN
  Expression: false

  ID: 14
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 12
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  12 -> 13

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: totalTokens

  ID: 2
  Type: NodeType.RETURN
  Expression: totalSupply

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_owner]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: EtherBalanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balancesEther[_owner]

Edges:
  0 -> 1

Function: TimeLeft
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: fundingEnd > block.timestamp

  ID: 2
  Type: NodeType.RETURN
  Expression: fundingEnd - block.timestamp

  ID: 3
  Type: NodeType.RETURN
  Expression: 0

Edges:
  0 -> 1
  1 -> 2
  1 -> 3

Function: TimeLeftBeforeCrowdsale
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: fundingStart > block.timestamp

  ID: 2
  Type: NodeType.RETURN
  Expression: fundingStart - block.timestamp

  ID: 3
  Type: NodeType.RETURN
  Expression: 0

Edges:
  0 -> 1
  1 -> 2
  1 -> 3

Function: migrate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: funding

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: migrationAgent == 0

  ID: 5
  Type: NodeType.THROW
  Expression: 

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: _value == 0

  ID: 8
  Type: NodeType.THROW
  Expression: 

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.IF
  Expression: _value > balances[msg.sender]

  ID: 11
  Type: NodeType.THROW
  Expression: 

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= _value

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: totalTokens -= _value

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: totalMigrated += _value

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: MigrationAgent(migrationAgent).migrateFrom(msg.sender,_value)

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: Migrate(msg.sender,migrationAgent,_value)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  9 -> 10
  10 -> 11
  10 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17

Function: setMigrationAgent
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: funding

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: migrationAgent != 0

  ID: 5
  Type: NodeType.THROW
  Expression: 

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: msg.sender != master

  ID: 8
  Type: NodeType.THROW
  Expression: 

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: migrationAgent = _agent

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  9 -> 10

Function: getExchangeRate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: fundingStart + 1 * 86400 > block.timestamp

  ID: 2
  Type: NodeType.RETURN
  Expression: 15000

  ID: 3
  Type: NodeType.VARIABLE
  Expression: decrease = 100 - (soldAfterPowerHour / 10000000 / 1000000000000000000)

  ID: 4
  Type: NodeType.IF
  Expression: decrease < 70

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: decrease = 70

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.RETURN
  Expression: 10000 * decrease / 100

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  5 -> 6
  6 -> 7

Function: ICOopen
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! funding

  ID: 2
  Type: NodeType.RETURN
  Expression: false

  ID: 3
  Type: NodeType.IF
  Expression: block.timestamp < fundingStart

  ID: 4
  Type: NodeType.RETURN
  Expression: false

  ID: 5
  Type: NodeType.IF
  Expression: block.timestamp > fundingEnd

  ID: 6
  Type: NodeType.RETURN
  Expression: false

  ID: 7
  Type: NodeType.IF
  Expression: tokenCreationCap <= totalTokens

  ID: 8
  Type: NodeType.RETURN
  Expression: false

  ID: 9
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  3 -> 5
  5 -> 6
  5 -> 7
  7 -> 8
  7 -> 9

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! funding

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: block.timestamp < fundingStart

  ID: 5
  Type: NodeType.THROW
  Expression: 

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: block.timestamp > fundingEnd

  ID: 8
  Type: NodeType.THROW
  Expression: 

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.IF
  Expression: msg.value == 0

  ID: 11
  Type: NodeType.THROW
  Expression: 

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.IF
  Expression: (msg.value * getExchangeRate()) > (tokenCreationCap - totalTokens)

  ID: 14
  Type: NodeType.THROW
  Expression: 

  ID: 15
  Type: NodeType.ENDIF
  Expression: 

  ID: 16
  Type: NodeType.VARIABLE
  Expression: numTokens = msg.value * getExchangeRate()

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: totalTokens += numTokens

  ID: 18
  Type: NodeType.IF
  Expression: getExchangeRate() != 15000

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: soldAfterPowerHour += numTokens

  ID: 20
  Type: NodeType.ENDIF
  Expression: 

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] += numTokens

  ID: 22
  Type: NodeType.EXPRESSION
  Expression: balancesEther[msg.sender] += msg.value

  ID: 23
  Type: NodeType.EXPRESSION
  Expression: totalParticipants += 1

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: Transfer(0,msg.sender,numTokens)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  9 -> 10
  10 -> 11
  10 -> 12
  12 -> 13
  13 -> 14
  13 -> 15
  15 -> 16
  16 -> 17
  17 -> 18
  18 -> 19
  18 -> 20
  19 -> 20
  20 -> 21
  21 -> 22
  22 -> 23
  23 -> 24

Function: finalize
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! funding

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: (block.timestamp <= fundingEnd || totalTokens < tokenCreationMin) && (totalTokens + 5000000000000000000000) < tokenCreationCap

  ID: 5
  Type: NodeType.THROW
  Expression: 

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: funding = false

  ID: 8
  Type: NodeType.VARIABLE
  Expression: percentOfTotal = 12

  ID: 9
  Type: NodeType.VARIABLE
  Expression: additionalTokens = totalTokens * percentOfTotal / (100 - percentOfTotal)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: totalTokens += additionalTokens

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: balances[master] += additionalTokens

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: Transfer(0,master,additionalTokens)

  ID: 13
  Type: NodeType.IF
  Expression: ! master.send(this.balance)

  ID: 14
  Type: NodeType.THROW
  Expression: 

  ID: 15
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  13 -> 15

Function: refund
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! funding

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: block.timestamp <= fundingEnd

  ID: 5
  Type: NodeType.THROW
  Expression: 

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: totalTokens >= tokenCreationMin

  ID: 8
  Type: NodeType.THROW
  Expression: 

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.VARIABLE
  Expression: lncValue = balances[msg.sender]

  ID: 11
  Type: NodeType.VARIABLE
  Expression: ethValue = balancesEther[msg.sender]

  ID: 12
  Type: NodeType.IF
  Expression: lncValue == 0

  ID: 13
  Type: NodeType.THROW
  Expression: 

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = 0

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: balancesEther[msg.sender] = 0

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: totalTokens -= lncValue

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: Refund(msg.sender,ethValue)

  ID: 19
  Type: NodeType.IF
  Expression: ! msg.sender.send(ethValue)

  ID: 20
  Type: NodeType.THROW
  Expression: 

  ID: 21
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  12 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18
  18 -> 19
  19 -> 20
  19 -> 21

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: funding

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: balances[_from] >= _amount && allowed[_from][msg.sender] >= _amount && _amount > 0 && balances[_to] + _amount > balances[_to]

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[_from] -= _amount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: allowed[_from][msg.sender] -= _amount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balances[_to] += _amount

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_to,_amount)

  ID: 9
  Type: NodeType.RETURN
  Expression: true

  ID: 10
  Type: NodeType.RETURN
  Expression: false

  ID: 12
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 10
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: funding

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: allowed[msg.sender][_spender] = _amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,_spender,_amount)

  ID: 6
  Type: NodeType.RETURN
  Expression: true

  ID: 7
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowed[_owner][_spender]

  ID: 2
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = Lancer Token

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = LNC

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: tokenCreationCap = 1000000000 * 10 ** 18

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: tokenCreationMin = 150000000 * 10 ** 18

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: funding = true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5


