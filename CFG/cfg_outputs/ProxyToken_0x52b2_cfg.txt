Contract: ProxyToken
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: masterCopy = _masterCopy

Edges:
  0 -> 1

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: master_fallback_asm_0 = sload(uint256)(0) & 0xffffffffffffffffffffffffffffffffffffffff

  ID: 4
  Type: NodeType.IF
  Expression: calldataload(uint256)(0) == 0xa619486e00000000000000000000000000000000000000000000000000000000

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: mstore(uint256,uint256)(0,master_fallback_asm_0)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: return(uint256,uint256)(0,0x20)

  ID: 8
  Type: NodeType.VARIABLE
  Expression: 

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: ptr_fallback_asm_0 = mload(uint256)(0x40)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()())

  ID: 11
  Type: NodeType.VARIABLE
  Expression: 

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),master_fallback_asm_0,ptr_fallback_asm_0,calldatasize()(),0,0)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())

  ID: 14
  Type: NodeType.IF
  Expression: success_fallback_asm_0 == 0

  ID: 15
  Type: NodeType.ENDIF
  Expression: 

  ID: 16
  Type: NodeType.IF
  Expression: returndatasize()() == 0

  ID: 17
  Type: NodeType.ENDIF
  Expression: 

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: revert(uint256,uint256)(0,0x404)

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: revert(uint256,uint256)(0,returndatasize()())

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: return(uint256,uint256)(0,returndatasize()())

  ID: 21
  Type: NodeType.ENDASSEMBLY
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 6
  4 -> 5
  5 -> 8
  6 -> 7
  7 -> 5
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 16
  14 -> 15
  15 -> 20
  16 -> 18
  16 -> 17
  17 -> 19
  18 -> 17
  19 -> 15
  20 -> 21

Function: upgrade
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(master != address(0x0) && masterCopy == msg.sender,pt!)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: masterCopy = master

Edges:
  0 -> 1
  1 -> 2

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: Deposit(msg.sender,msg.value)

Edges:
  0 -> 1


