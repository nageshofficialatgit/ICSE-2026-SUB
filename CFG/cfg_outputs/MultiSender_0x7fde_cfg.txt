Contract: IERC20
==================================================


Contract: MultiSender
==================================================

Function: multiSendToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(recipients.length == amounts.length,Recipients and amounts length mismatch)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: token = IERC20(tokenAddress)

  ID: 3
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 4
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 6
  Type: NodeType.IFLOOP
  Expression: i < recipients.length

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(token.transferFrom(msg.sender,recipients[i],amounts[i]),Token transfer failed)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: i ++

Edges:
  0 -> 1
  1 -> 2
  2 -> 5
  3 -> 6
  5 -> 3
  6 -> 7
  6 -> 4
  7 -> 8
  8 -> 6

Function: multiSendETH
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(recipients.length == amounts.length,Recipients and amounts length mismatch)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: total = 0

  ID: 3
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 4
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 6
  Type: NodeType.IFLOOP
  Expression: i < amounts.length

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: total += amounts[i]

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.value == total,Incorrect ETH amount sent)

  ID: 10
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 11
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 12
  Type: NodeType.VARIABLE
  Expression: i_scope_0 = 0

  ID: 13
  Type: NodeType.IFLOOP
  Expression: i_scope_0 < recipients.length

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: address(recipients[i_scope_0]).transfer(amounts[i_scope_0])

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: i_scope_0 ++

Edges:
  0 -> 1
  1 -> 2
  2 -> 5
  3 -> 6
  4 -> 9
  5 -> 3
  6 -> 7
  6 -> 4
  7 -> 8
  8 -> 6
  9 -> 12
  10 -> 13
  12 -> 10
  13 -> 14
  13 -> 11
  14 -> 15
  15 -> 13


