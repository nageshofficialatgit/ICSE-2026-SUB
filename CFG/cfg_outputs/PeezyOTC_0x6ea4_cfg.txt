Contract: IERC20
==================================================


Contract: IUniswapV2Pair
==================================================


Contract: IChainlinkPriceFeed
==================================================


Contract: PeezyOTC
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: getPeezyPrice
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: pair = IUniswapV2Pair(peezyPair)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: 

  ID: 3
  Type: NodeType.VARIABLE
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: (reserve0,reserve1,None) = pair.getReserves()

  ID: 5
  Type: NodeType.VARIABLE
  Expression: token0 = pair.token0()

  ID: 6
  Type: NodeType.IF
  Expression: token0 == peezyToken

  ID: 7
  Type: NodeType.RETURN
  Expression: uint256(reserve1) * 1e9 / uint256(reserve0)

  ID: 8
  Type: NodeType.RETURN
  Expression: uint256(reserve0) * 1e9 / uint256(reserve1)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  6 -> 8

Function: getEthUsdPrice
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: (None,price,None,None,None) = IChainlinkPriceFeed(ethUsdPriceFeed).latestRoundData()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(price > 0,Invalid Chainlink price)

  ID: 4
  Type: NodeType.RETURN
  Expression: uint256(price)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: getPeezy
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: ethPriceUSD = getEthUsdPrice()

  ID: 2
  Type: NodeType.VARIABLE
  Expression: maxAllowedETH = (maxAmountUSD * 1e8) / ethPriceUSD

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: maxAllowedETH = maxAllowedETH * (100 + tolerancePercent) / 100

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.value <= maxAllowedETH,ETH value exceeds allowed maximum.)

  ID: 5
  Type: NodeType.VARIABLE
  Expression: peezyPrice = getPeezyPrice()

  ID: 6
  Type: NodeType.VARIABLE
  Expression: discountedPrice = peezyPrice * (100 - discountPercent) / 100

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(discountedPrice > 0,Discounted price is zero)

  ID: 8
  Type: NodeType.VARIABLE
  Expression: peezyAmount = msg.value * 1e9 / discountedPrice

  ID: 9
  Type: NodeType.VARIABLE
  Expression: tokenBalance = IERC20(peezyToken).balanceOf(address(this))

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(tokenBalance >= peezyAmount,Insufficient token balance in contract)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(IERC20(peezyToken).transfer(msg.sender,peezyAmount),Token transfer failed)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: Swapped(msg.sender,msg.value,peezyAmount)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: onlyWhitelist()

Edges:
  0 -> 13
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  13 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: withdrawETH
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: address(owner).transfer(address(this).balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: addToWhitelist
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: whitelist[_wallet] = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: removeFromWhitelist
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: whitelist[_wallet] = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner != address(0),New owner is zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: updateMaxAmountUSD
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: maxAmountUSD = newMaxAmountUSD

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: MaxAmountUSDUpdated(newMaxAmountUSD)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: withdrawTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: tokenBalance = IERC20(tokenAddress).balanceOf(address(this))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(IERC20(tokenAddress).transfer(owner,tokenBalance),Token transfer failed)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: peezyToken = 0x698b1d54E936b9F772b8F58447194bBc82EC1933

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: peezyPair = 0x1D91389b2Aa45C388C4d02eB39a7726d02a71d18

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ethUsdPriceFeed = 0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: discountPercent = 15

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: maxAmountUSD = 500 * 1e18

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: tolerancePercent = 5

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5


