Contract: FabricTokenConfig
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: NAME = Fabric Token

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SYMBOL = FT

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DECIMALS = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DECIMALS_FACTOR = 10 ** uint256(DECIMALS)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: ERC20TokenInterface
==================================================


Contract: SafeMath
==================================================

Function: plus
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: c = a + b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(c >= a)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: minus
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(b <= a)

  ID: 2
  Type: NodeType.RETURN
  Expression: a - b

Edges:
  0 -> 1
  1 -> 2

Function: mul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: c = a * b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(a == 0 || c / a == b)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: div
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: c = a / b

  ID: 2
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2


Contract: ERC20Token
==================================================

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_account]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: balances[msg.sender] < _value || _value == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: false

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= _value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[_to] = balances[_to].plus(_value)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 7
  Type: NodeType.RETURN
  Expression: true

  ID: 8
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: balances[_from] < _value || allowed[_from][msg.sender] < _value || _value == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: false

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[_to] = balances[_to].plus(_value)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[_from] -= _value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: allowed[_from][msg.sender] -= _value

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_to,_value)

  ID: 8
  Type: NodeType.RETURN
  Expression: true

  ID: 9
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowed[msg.sender][_spender] = _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,_spender,_value)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowed[_owner][_spender]

  ID: 2
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1


Contract: HasOwner
==================================================

Function: HasOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = _owner

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: newOwner = _newOwner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: acceptOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransfer(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: Freezable
==================================================

Function: HasOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = _owner

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: newOwner = _newOwner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: acceptOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransfer(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: freeze
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: frozen = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: unfreeze
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: frozen = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: frozen = false

Edges:


Contract: FreezableERC20Token
==================================================

Function: freeze
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: frozen = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: unfreeze
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: frozen = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: HasOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = _owner

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: newOwner = _newOwner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: acceptOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransfer(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_account]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: super.transfer(_to,_value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: requireNotFrozen()

  ID: 3
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 2
  2 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: super.transferFrom(_from,_to,_value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: requireNotFrozen()

  ID: 3
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 2
  2 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: super.approve(_spender,_value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: requireNotFrozen()

  ID: 3
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 2
  2 -> 1

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowed[_owner][_spender]

  ID: 2
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: frozen = false

Edges:


Contract: FabricToken
==================================================

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: balances[msg.sender] < _value || _value == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: false

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= _value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[_to] = balances[_to].plus(_value)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 7
  Type: NodeType.RETURN
  Expression: true

  ID: 8
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: balances[_from] < _value || allowed[_from][msg.sender] < _value || _value == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: false

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[_to] = balances[_to].plus(_value)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[_from] -= _value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: allowed[_from][msg.sender] -= _value

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_to,_value)

  ID: 8
  Type: NodeType.RETURN
  Expression: true

  ID: 9
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowed[msg.sender][_spender] = _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,_spender,_value)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: freeze
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: frozen = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: unfreeze
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: frozen = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: HasOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = _owner

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: newOwner = _newOwner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: acceptOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransfer(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_account]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowed[_owner][_spender]

  ID: 2
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1

Function: FabricToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: name = NAME

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: symbol = SYMBOL

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: decimals = DECIMALS

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: totalSupply = _totalSupply

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[owner] = _totalSupply

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: HasOwner(msg.sender)

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: frozen = false

Edges:

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: NAME = Fabric Token

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SYMBOL = FT

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DECIMALS = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DECIMALS_FACTOR = 10 ** uint256(DECIMALS)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: FabricTokenFundraiserConfig
==================================================

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: NAME = Fabric Token

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SYMBOL = FT

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DECIMALS = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DECIMALS_FACTOR = 10 ** uint256(DECIMALS)

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: CONVERSION_RATE = 9000

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_HARD_CAP = 71250 * (10 ** 3) * DECIMALS_FACTOR

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: START_DATE = 1518688800

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: END_DATE = 1522576800

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_CORE_TEAM = 12 * (10 ** 6) * DECIMALS_FACTOR

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_ADVISORS = 7 * (10 ** 6) * DECIMALS_FACTOR

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_CORE_TEAM_RELEASE_DATE = START_DATE + 220752000

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_ADVISORS_RELEASE_DATE = START_DATE + 15552000

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_BOUNTY_PROGRAM = 1 * (10 ** 6) * DECIMALS_FACTOR

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_GAS_PRICE = 50000000000

  ID: 14
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MIN_CONTRIBUTION = 100000000000000000

  ID: 15
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: INDIVIDUAL_ETHER_LIMIT = 9000000000000000000

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15


Contract: TokenSafe
==================================================

Function: TokenSafe
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token = ERC20TokenInterface(_token)

Edges:
  0 -> 1

Function: initBundle
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: bundles[_type].releaseDate = _releaseDate

Edges:
  0 -> 1

Function: addLockedAccount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: bundle = bundles[_type]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: bundle.balances[_account] = bundle.balances[_account].plus(_balance)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: bundle.lockedTokens = bundle.lockedTokens.plus(_balance)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: releaseAccount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: bundle = bundles[_type]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now >= bundle.releaseDate)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: tokens = bundle.balances[_account]

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool)(tokens > 0)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: bundle.balances[_account] = 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: bundle.lockedTokens = bundle.lockedTokens.minus(tokens)

  ID: 7
  Type: NodeType.IF
  Expression: ! token.transfer(_account,tokens)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: revert()()

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  8 -> 9


Contract: FabricTokenSafe
==================================================

Function: TokenSafe
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token = ERC20TokenInterface(_token)

Edges:
  0 -> 1

Function: initBundle
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: bundles[_type].releaseDate = _releaseDate

Edges:
  0 -> 1

Function: addLockedAccount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: bundle = bundles[_type]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: bundle.balances[_account] = bundle.balances[_account].plus(_balance)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: bundle.lockedTokens = bundle.lockedTokens.plus(_balance)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: releaseAccount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: bundle = bundles[_type]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now >= bundle.releaseDate)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: tokens = bundle.balances[_account]

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool)(tokens > 0)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: bundle.balances[_account] = 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: bundle.lockedTokens = bundle.lockedTokens.minus(tokens)

  ID: 7
  Type: NodeType.IF
  Expression: ! token.transfer(_account,tokens)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: revert()()

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  8 -> 9

Function: FabricTokenSafe
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token = ERC20TokenInterface(_token)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: initBundle(CORE_TEAM,TOKENS_LOCKED_CORE_TEAM_RELEASE_DATE)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: addLockedAccount(CORE_TEAM,0xB494096548aA049C066289A083204E923cBf4413,4 * (10 ** 6) * DECIMALS_FACTOR)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: addLockedAccount(CORE_TEAM,0xE3506B01Bee377829ee3CffD8bae650e990c5d68,4 * (10 ** 6) * DECIMALS_FACTOR)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: addLockedAccount(CORE_TEAM,0x3d13219dc1B8913E019BeCf0772C2a54318e5718,4 * (10 ** 6) * DECIMALS_FACTOR)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(bundles[CORE_TEAM].lockedTokens == TOKENS_LOCKED_CORE_TEAM)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: initBundle(ADVISORS,TOKENS_LOCKED_ADVISORS_RELEASE_DATE)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: addLockedAccount(ADVISORS,0x4647Da07dAAb17464278B988CDE59A4b911EBe44,2 * (10 ** 6) * DECIMALS_FACTOR)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: addLockedAccount(ADVISORS,0x3eA2caac5A0A4a55f9e304AcD09b3CEe6cD4Bc39,1 * (10 ** 6) * DECIMALS_FACTOR)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: addLockedAccount(ADVISORS,0xd5f791EC3ED79f79a401b12f7625E1a972382437,1 * (10 ** 6) * DECIMALS_FACTOR)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: addLockedAccount(ADVISORS,0xcaeae3CD1a5d3E6E950424C994e14348ac3Ec5dA,1 * (10 ** 6) * DECIMALS_FACTOR)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: addLockedAccount(ADVISORS,0xb6EA6193058F3c8A4A413d176891d173D62E00bE,1 * (10 ** 6) * DECIMALS_FACTOR)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: addLockedAccount(ADVISORS,0x8b3E184Cf5C3bFDaB1C4D0F30713D30314FcfF7c,1 * (10 ** 6) * DECIMALS_FACTOR)

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(bundles[ADVISORS].lockedTokens == TOKENS_LOCKED_ADVISORS)

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: TokenSafe(_token)

Edges:
  0 -> 15
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  15 -> 1

Function: totalTokensLocked
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: bundles[CORE_TEAM].lockedTokens.plus(bundles[ADVISORS].lockedTokens)

Edges:
  0 -> 1

Function: releaseCoreTeamAccount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: releaseAccount(CORE_TEAM,msg.sender)

Edges:
  0 -> 1

Function: releaseAdvisorsAccount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: releaseAccount(ADVISORS,msg.sender)

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: NAME = Fabric Token

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SYMBOL = FT

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DECIMALS = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DECIMALS_FACTOR = 10 ** uint256(DECIMALS)

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: CONVERSION_RATE = 9000

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_HARD_CAP = 71250 * (10 ** 3) * DECIMALS_FACTOR

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: START_DATE = 1518688800

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: END_DATE = 1522576800

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_CORE_TEAM = 12 * (10 ** 6) * DECIMALS_FACTOR

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_ADVISORS = 7 * (10 ** 6) * DECIMALS_FACTOR

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_CORE_TEAM_RELEASE_DATE = START_DATE + 220752000

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_ADVISORS_RELEASE_DATE = START_DATE + 15552000

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_BOUNTY_PROGRAM = 1 * (10 ** 6) * DECIMALS_FACTOR

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_GAS_PRICE = 50000000000

  ID: 14
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MIN_CONTRIBUTION = 100000000000000000

  ID: 15
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: INDIVIDUAL_ETHER_LIMIT = 9000000000000000000

  ID: 16
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: CORE_TEAM = 0

  ID: 17
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ADVISORS = 1

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17


Contract: Whitelist
==================================================

Function: HasOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = _owner

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: newOwner = _newOwner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: acceptOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransfer(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: Whitelist
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: HasOwner(_owner)

Edges:
  0 -> 1

Function: setWhitelistEntries
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 2
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 3
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 4
  Type: NodeType.IFLOOP
  Expression: i < _entries.length

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: whitelist[_entries[i]] = _status

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: ++ i

Edges:
  0 -> 3
  1 -> 4
  3 -> 1
  4 -> 5
  4 -> 2
  5 -> 6
  6 -> 4

Function: whitelistAddresses
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: setWhitelistEntries(_entries,true)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: blacklistAddresses
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: setWhitelistEntries(_entries,false)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1


Contract: FabricTokenFundraiser
==================================================

Function: Whitelist
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: HasOwner(_owner)

Edges:
  0 -> 1

Function: setWhitelistEntries
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 2
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 3
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 4
  Type: NodeType.IFLOOP
  Expression: i < _entries.length

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: whitelist[_entries[i]] = _status

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: ++ i

Edges:
  0 -> 3
  1 -> 4
  3 -> 1
  4 -> 5
  4 -> 2
  5 -> 6
  6 -> 4

Function: whitelistAddresses
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: setWhitelistEntries(_entries,true)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: blacklistAddresses
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: setWhitelistEntries(_entries,false)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: HasOwner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = _owner

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: newOwner = _newOwner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: acceptOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == newOwner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransfer(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: FabricToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: name = NAME

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: symbol = SYMBOL

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: decimals = DECIMALS

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: totalSupply = _totalSupply

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[owner] = _totalSupply

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: HasOwner(msg.sender)

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: balances[msg.sender] < _value || _value == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: false

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= _value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[_to] = balances[_to].plus(_value)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 7
  Type: NodeType.RETURN
  Expression: true

  ID: 8
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: balances[_from] < _value || allowed[_from][msg.sender] < _value || _value == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: false

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[_to] = balances[_to].plus(_value)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[_from] -= _value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: allowed[_from][msg.sender] -= _value

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_to,_value)

  ID: 8
  Type: NodeType.RETURN
  Expression: true

  ID: 9
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowed[msg.sender][_spender] = _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,_spender,_value)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: freeze
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: frozen = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: unfreeze
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: frozen = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_account]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowed[_owner][_spender]

  ID: 2
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1

Function: FabricTokenFundraiser
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_beneficiary != 0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: beneficiary = _beneficiary

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: conversionRate = CONVERSION_RATE

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: startDate = START_DATE

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: endDate = END_DATE

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: hardCap = TOKENS_HARD_CAP

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: tokensSold = 0

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: minimumContribution = MIN_CONTRIBUTION

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: individualLimit = INDIVIDUAL_ETHER_LIMIT * CONVERSION_RATE

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: fabricTokenSafe = new FabricTokenSafe(this)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: freeze()

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: FabricToken(0)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: Whitelist(msg.sender)

Edges:
  0 -> 12
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  12 -> 13
  13 -> 1

Function: setBeneficiary
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_beneficiary != 0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: beneficiary = _beneficiary

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: BeneficiaryChange(_beneficiary)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: setConversionRate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now < startDate)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_conversionRate > 0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: conversionRate = _conversionRate

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: individualLimit = INDIVIDUAL_ETHER_LIMIT * _conversionRate

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: ConversionRateChange(_conversionRate)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: buyTokens()

Edges:
  0 -> 1

Function: buyTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(! finalized)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now >= startDate)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now <= endDate)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool)(tx.gasprice <= MAX_GAS_PRICE)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.value >= minimumContribution)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: require(bool)(tokensSold <= hardCap)

  ID: 7
  Type: NodeType.VARIABLE
  Expression: tokens = msg.value.mul(conversionRate)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = balances[msg.sender].plus(tokens)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: require(bool)(balances[msg.sender] <= individualLimit)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: tokensSold = tokensSold.plus(tokens)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: totalSupply = totalSupply.plus(tokens)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: Transfer(0x0,msg.sender,tokens)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: FundsReceived(msg.sender,msg.value,tokens,totalSupply,conversionRate)

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: onlyWhitelisted()

Edges:
  0 -> 14
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  14 -> 1

Function: claimPartnerTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(! partnerTokensClaimed)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now >= startDate)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: partnerTokensClaimed = true

  ID: 4
  Type: NodeType.VARIABLE
  Expression: partner1 = 0xA6556B9BD0AAbf0d8824374A3C425d315b09b832

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[partner1] = balances[partner1].plus(125 * (10 ** 4) * DECIMALS_FACTOR)

  ID: 6
  Type: NodeType.VARIABLE
  Expression: partner2 = 0x783A1cBc37a8ef2F368908490b72BfE801DA1877

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balances[partner2] = balances[partner2].plus(750 * (10 ** 4) * DECIMALS_FACTOR)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: totalSupply = totalSupply.plus(875 * (10 ** 4) * DECIMALS_FACTOR)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: finalize
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)((totalSupply >= hardCap) || (now >= endDate))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(! finalized)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Finalized(beneficiary,this.balance,totalSupply)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: beneficiary.transfer(this.balance)

  ID: 5
  Type: NodeType.VARIABLE
  Expression: totalTokensLocked = fabricTokenSafe.totalTokensLocked()

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balances[address(fabricTokenSafe)] = balances[address(fabricTokenSafe)].plus(totalTokensLocked)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: totalSupply = totalSupply.plus(totalTokensLocked)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: balances[owner] = balances[owner].plus(TOKENS_BOUNTY_PROGRAM)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: totalSupply = totalSupply.plus(TOKENS_BOUNTY_PROGRAM)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: finalized = true

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: unfreeze()

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 12
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  12 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: frozen = false

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: finalized = false

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: partnerTokensClaimed = false

Edges:
  0 -> 1
  1 -> 2

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: NAME = Fabric Token

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SYMBOL = FT

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DECIMALS = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DECIMALS_FACTOR = 10 ** uint256(DECIMALS)

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: CONVERSION_RATE = 9000

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_HARD_CAP = 71250 * (10 ** 3) * DECIMALS_FACTOR

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: START_DATE = 1518688800

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: END_DATE = 1522576800

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_CORE_TEAM = 12 * (10 ** 6) * DECIMALS_FACTOR

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_ADVISORS = 7 * (10 ** 6) * DECIMALS_FACTOR

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_CORE_TEAM_RELEASE_DATE = START_DATE + 220752000

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_LOCKED_ADVISORS_RELEASE_DATE = START_DATE + 15552000

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TOKENS_BOUNTY_PROGRAM = 1 * (10 ** 6) * DECIMALS_FACTOR

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_GAS_PRICE = 50000000000

  ID: 14
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MIN_CONTRIBUTION = 100000000000000000

  ID: 15
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: INDIVIDUAL_ETHER_LIMIT = 9000000000000000000

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15


