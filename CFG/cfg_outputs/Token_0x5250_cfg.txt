Contract: Token
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: mint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_to != address(0),Invalid address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply += _value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[_to] += _value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0x0),_to,_value)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: isOwner()

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: validAddress(_to)

  ID: 8
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 7
  7 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= _value,Insufficient balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= _value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[_to] += _value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: isRunning()

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: validAddress(_to)

  ID: 8
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 7
  7 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[_from] >= _value,Insufficient balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowance[_from][msg.sender] >= _value,Insufficient allowance)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[_from] -= _value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[_to] += _value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: allowance[_from][msg.sender] -= _value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_to,_value)

  ID: 7
  Type: NodeType.RETURN
  Expression: true

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: isRunning()

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: validAddress(_to)

  ID: 10
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 8
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  8 -> 9
  9 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowance[msg.sender][_spender] = _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,_spender,_value)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: isRunning()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: validAddress(_spender)

  ID: 6
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: stop
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: stopped = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Stopped(msg.sender)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: isOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: start
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: stopped = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Started(msg.sender)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: isOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: setName
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: oldName = name

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: name = _name

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: NameChanged(oldName,_name)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: isOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(balanceOf[msg.sender] >= _value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= _value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[address(0x0)] += _value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,address(0x0),_value)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Burned(msg.sender,_value)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner != address(0),Invalid owner address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: isOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = ETron

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = ETR

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalSupply = 0

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: stopped = false

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: owner = address(0x0)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 6

Edges:


