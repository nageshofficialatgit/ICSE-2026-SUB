Contract: Ownable
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: contractOwner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(newOwner != address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[newOwner] += balances[contractOwner]

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[contractOwner] -= balances[contractOwner]

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: ownershipTransferred(contractOwner,newOwner)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: contractOwner = newOwner

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1


Contract: Hovaxi
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[contractOwner] = totalSupply

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(newOwner != address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[newOwner] += balances[contractOwner]

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[contractOwner] -= balances[contractOwner]

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: ownershipTransferred(contractOwner,newOwner)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: contractOwner = newOwner

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: changeName
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: changedName(name,newName)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: name = newName

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: changeSymbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: changedSymbol(symbol,newSymbol)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: symbol = newSymbol

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: changeTokenPrice
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: changedTokenPrice(tokenPrice,newPrice)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: tokenPrice = newPrice

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: changeIdoDeadline
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: changedIdoDeadline(idoDeadline,newDate)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: idoDeadline = newDate

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: changeIdoMin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: changedIdoMin(idoMin,newValue)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: idoMin = newValue

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_address]

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf(msg.sender) >= value,insufficient balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[to] += value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,to,value)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf(from) >= value,insufficient balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowance[from][msg.sender] >= value,allowance too low)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[to] += value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[from] -= value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,value)

  ID: 6
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowance[msg.sender][spender] = value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,value)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: idoBuy
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp <= idoDeadline,reverted, IDO has ended)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.value >= idoMin,Amount too small, check website for IDO details)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: idoReceiveamount = msg.value * tokenPrice

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: idoReceiver = msg.sender

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[idoReceiver] += idoReceiveamount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balances[contractOwner] -= idoReceiveamount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: idoAmountRaised += msg.value

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(contractOwner,idoReceiver,idoReceiveamount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp <= idoDeadline,reverted, IDO has ended)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.value >= idoMin,Amount too small, check website for IDO details)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: idoReceiveamount = msg.value * tokenPrice

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: idoReceiver = msg.sender

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[idoReceiver] += idoReceiveamount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balances[contractOwner] -= idoReceiveamount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: idoAmountRaised += msg.value

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(contractOwner,idoReceiver,idoReceiveamount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8

Function: distributeToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 2
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 3
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 4
  Type: NodeType.IFLOOP
  Expression: i < addresses.length

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balances[contractOwner] -= _value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balances[addresses[i]] += _value

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(contractOwner,addresses[i],_value)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 9
  Type: NodeType.RETURN
  Expression: true

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 10
  1 -> 4
  2 -> 9
  3 -> 1
  4 -> 5
  4 -> 2
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 4
  10 -> 3

Function: getEther
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: address(contractOwner).transfer(address(this).balance)

  ID: 2
  Type: NodeType.RETURN
  Expression: true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalSupply = 100000000 * 10 ** 18

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = Hovaxi

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = HOV

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: tokenPrice = 10 ** 16

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: idoDeadline = block.timestamp + (90 * 86400)

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: idoMin = 1 * 10 ** 17

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6


