Contract: PvMverseInvestmentCollector
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: invest()

Edges:
  0 -> 1

Function: invest
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.value > 0,Kein Betrag gesendet.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(totalReceived + msg.value <= cap,Cap erreicht.)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: contributions[msg.sender] += msg.value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: totalReceived += msg.value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: address(targetWallet).transfer(msg.value)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: getBalance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: address(this).balance

Edges:
  0 -> 1

Function: getTotalReceived
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: totalReceived

Edges:
  0 -> 1

Function: getContribution
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: contributions[investor]

Edges:
  0 -> 1

Function: updateTargetWallet
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Nur Owner kann das Ziel aendern.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: targetWallet = newWallet

Edges:
  0 -> 1
  1 -> 2

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Nur Owner kann abheben.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: address(owner).transfer(address(this).balance)

Edges:
  0 -> 1
  1 -> 2

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: targetWallet = 0xA76ff421E5b7A4052665f203D61C2816D1BEdADF

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: cap = (CAP_EUR * 1e18) / 3000

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: CAP_EUR = 500000

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ETH_PRICE = 3000 * 1e18

Edges:
  0 -> 1


