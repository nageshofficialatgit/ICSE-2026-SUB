Contract: IERC20
==================================================


Contract: USDT
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: checkBalance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: usdt = IERC20(usdtAddress)

  ID: 2
  Type: NodeType.RETURN
  Expression: usdt.balanceOf(address(this))

Edges:
  0 -> 1
  1 -> 2

Function: checkEtherBalance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: address(this).balance

Edges:
  0 -> 1

Function: approveUSDT
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: usdt = IERC20(usdtAddress)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: success = usdt.approve(address(this),amount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,Approval failed)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: fundContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: amount = 1000 * 10 ** 6

  ID: 2
  Type: NodeType.VARIABLE
  Expression: usdt = IERC20(usdtAddress)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: allowance = usdt.allowance(msg.sender,address(this))

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowance >= amount,Insufficient allowance for transfer)

  ID: 5
  Type: NodeType.VARIABLE
  Expression: success = usdt.transferFrom(msg.sender,address(this),amount)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,Transfer failed)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: forwardUSDT
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Only owner can call this function)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: amount = 500 * 10 ** 6

  ID: 3
  Type: NodeType.VARIABLE
  Expression: usdt = IERC20(usdtAddress)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: contractBalance = usdt.balanceOf(address(this))

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(contractBalance >= amount,Insufficient USDT balance in contract)

  ID: 6
  Type: NodeType.VARIABLE
  Expression: success = usdt.transfer(recipient,amount)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,Transfer failed)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: forwardETH
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Only owner can call this function)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: amount = 100000000000000000

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(address(this).balance >= amount,Insufficient ETH balance)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: recipient.transfer(amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: usdtAddress = 0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc

Edges:


