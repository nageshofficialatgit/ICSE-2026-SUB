Contract: NewCratePreSale
==================================================

Function: _migrate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: selector = bytes4(sha3()(setData()))

  ID: 2
  Type: NodeType.VARIABLE
  Expression: a = migrators[_index]

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool)(a.delegatecall(selector))

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: NewCratePreSale
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: oldAppreciationRateWei = 100000000000000

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: appreciationRateWei = oldAppreciationRateWei

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: oldPrice = 232600000000000000

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: currentPrice = oldPrice

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: oldCratesSold = 1075

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: cratesSold = oldCratesSold

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: openAll
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: len = addressToPurchasedBlocks[msg.sender].length

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(len > 0)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: count = 0

  ID: 4
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 5
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: i = len - 1

  ID: 7
  Type: NodeType.IFLOOP
  Expression: i >= 0 && len > i

  ID: 8
  Type: NodeType.VARIABLE
  Expression: crateBlock = addressToPurchasedBlocks[msg.sender][i]

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: require(bool)(block.number > crateBlock)

  ID: 10
  Type: NodeType.VARIABLE
  Expression: hash = block.blockhash(crateBlock)

  ID: 11
  Type: NodeType.IF
  Expression: uint256(hash) != 0

  ID: 12
  Type: NodeType.VARIABLE
  Expression: rand = uint256(keccak256()(hash,msg.sender,i)) % (10 ** 20)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: userToRobots[msg.sender].push(rand)

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: count ++

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: expiredCrates[msg.sender] += (i + 1)

  ID: 16
  Type: NodeType.BREAK
  Expression: 

  ID: 17
  Type: NodeType.ENDIF
  Expression: 

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: i --

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: CratesOpened(msg.sender,count)

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: delete addressToPurchasedBlocks[msg.sender]

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 6
  4 -> 7
  5 -> 19
  6 -> 4
  7 -> 8
  7 -> 5
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  11 -> 15
  12 -> 13
  13 -> 14
  14 -> 17
  15 -> 16
  16 -> 5
  17 -> 18
  18 -> 7
  19 -> 20

Function: getPrice
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: currentPrice

Edges:
  0 -> 1

Function: getRobotCountForUser
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: userToRobots[_user].length

Edges:
  0 -> 1

Function: getRobotForUserByIndex
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: userToRobots[_user][_index]

Edges:
  0 -> 1

Function: getRobotsForUser
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: userToRobots[_user]

Edges:
  0 -> 1

Function: getPendingCratesForUser
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: addressToPurchasedBlocks[_user]

Edges:
  0 -> 1

Function: getPendingCrateForUserByIndex
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: addressToPurchasedBlocks[_user][_index]

Edges:
  0 -> 1

Function: getExpiredCratesForUser
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: expiredCrates[_user]

Edges:
  0 -> 1

Function: incrementPrice
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: currentPrice == 100000000000000000

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: appreciationRateWei = 200000000000000

  ID: 3
  Type: NodeType.IF
  Expression: currentPrice == 200000000000000000

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: appreciationRateWei = 100000000000000

  ID: 5
  Type: NodeType.IF
  Expression: currentPrice == 300000000000000000

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: appreciationRateWei = 50000000000000

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: currentPrice += appreciationRateWei

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 9
  3 -> 4
  3 -> 5
  4 -> 8
  5 -> 6
  5 -> 7
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10

Function: purchaseCrates
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now < PRESALE_END_TIMESTAMP)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_cratesToBuy <= 10)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_cratesToBuy >= 1)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool)(cratesSold + _cratesToBuy <= MAX_CRATES_TO_SELL)

  ID: 5
  Type: NodeType.VARIABLE
  Expression: priceToPay = _calculatePayment(_cratesToBuy)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.value >= priceToPay)

  ID: 7
  Type: NodeType.IF
  Expression: msg.value > priceToPay

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: msg.sender.transfer(msg.value - priceToPay)

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: cratesSold += _cratesToBuy

  ID: 11
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 12
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 13
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 14
  Type: NodeType.IFLOOP
  Expression: i < _cratesToBuy

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: incrementPrice()

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: addressToPurchasedBlocks[msg.sender].push(block.number)

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: CratesPurchased(msg.sender,_cratesToBuy)

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: whenNotPaused()

Edges:
  0 -> 19
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  8 -> 9
  9 -> 10
  10 -> 13
  11 -> 14
  12 -> 18
  13 -> 11
  14 -> 15
  14 -> 12
  15 -> 16
  16 -> 17
  17 -> 14
  19 -> 1

Function: _calculatePayment
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: tempPrice = currentPrice

  ID: 2
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 3
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: i = 1

  ID: 5
  Type: NodeType.IFLOOP
  Expression: i < _cratesToBuy

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: tempPrice += (currentPrice + (appreciationRateWei * i))

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 8
  Type: NodeType.RETURN
  Expression: tempPrice

Edges:
  0 -> 1
  1 -> 4
  2 -> 5
  3 -> 8
  4 -> 2
  5 -> 6
  5 -> 3
  6 -> 7
  7 -> 5

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner.transfer(this.balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: addFunds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 1

Function: pause
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: paused = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: SetPaused(paused)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: whenNotPaused()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: unpause
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: paused = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: SetPaused(paused)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: whenPaused()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(newOwner != address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: migrators = (0x700febd9360ac0a0a72f371615427bec4e4454e5,0x72cc898de0a4eac49c46ccb990379099461342f6,0xc3cc48da3b8168154e0f14bf0446c7a93613f0a7,0x4cc96f2ddf6844323ae0d8461d418a4d473b9ac3,0xa52bfcb5ff599e29ee2b9130f1575babaa27de0a,0xe503b42aabda22974e2a8b75fa87e010e1b13584)

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: paused = false

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_CRATES_TO_SELL = 3900

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PRESALE_END_TIMESTAMP = 1518699600

Edges:
  0 -> 1


