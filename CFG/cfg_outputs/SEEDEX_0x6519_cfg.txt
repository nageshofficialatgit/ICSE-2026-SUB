Contract: Context
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1


Contract: IERC20
==================================================


Contract: Ownable
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: msgSender = _msgSender()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = msgSender

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(address(0),msgSender)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _owner

Edges:
  0 -> 1

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(_owner,address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = address(0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1


Contract: IUniswapV2Factory
==================================================


Contract: IUniswapV2Router02
==================================================


Contract: SEEDEX
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _tWallet = tWalletAddress

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _balances[_msgSender()] = _tTotal

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _isExcludedFromFee[owner()] = true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _isExcludedFromFee[_bWallet] = true

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _isExcludedFromFee[address(this)] = true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _isExcludedFromFee[_tWallet] = true

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),_msgSender(),_tTotal)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _owner

Edges:
  0 -> 1

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(_owner,address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = address(0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: name
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _name

Edges:
  0 -> 1

Function: symbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _symbol

Edges:
  0 -> 1

Function: decimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _decimals

Edges:
  0 -> 1

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _tTotal

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _balances[account]

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transfer(_msgSender(),recipient,amount)

  ID: 2
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _allowances[owner][spender]

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _approve(_msgSender(),spender,amount)

  ID: 2
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transfer(sender,recipient,amount)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(ownerAddr != address(0),ERC20: approve from zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(spender != address(0),ERC20: approve to zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _allowances[ownerAddr][spender] = amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Approval(ownerAddr,spender,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: _transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(from != address(0),ERC20: transfer from zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),ERC20: transfer to zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,Transfer amount must be > 0)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: tAmount = 0

  ID: 5
  Type: NodeType.IF
  Expression: from != owner() && to != owner()

  ID: 6
  Type: NodeType.IF
  Expression: ! tradingOpen

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_isExcludedFromFee[from] || _isExcludedFromFee[to],Trading has not been enabled yet)

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.IF
  Expression: from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to]

  ID: 10
  Type: NodeType.IF
  Expression: limitEffect

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount <= _maxTx,Exceeds the maximum transaction amount)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf(to) + amount <= _maxWallet,Exceeds the maximum wallet size)

  ID: 13
  Type: NodeType.ENDIF
  Expression: 

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: _buyTransactionCount ++

  ID: 15
  Type: NodeType.ENDIF
  Expression: 

  ID: 16
  Type: NodeType.IF
  Expression: to == uniswapV2Pair && from != address(this)

  ID: 18
  Type: NodeType.IF
  Expression: from == uniswapV2Pair && to != address(this)

  ID: 20
  Type: NodeType.ENDIF
  Expression: 

  ID: 21
  Type: NodeType.ENDIF
  Expression: 

  ID: 22
  Type: NodeType.VARIABLE
  Expression: contractTokenBalance = balanceOf(address(this))

  ID: 23
  Type: NodeType.VARIABLE
  Expression: canSwap = ! inSwap && (to == uniswapV2Pair) && swapEnabled && (contractTokenBalance > _tSwapThreshold) && (_buyTransactionCount > _manageSwapThreshold)

  ID: 24
  Type: NodeType.IF
  Expression: canSwap

  ID: 25
  Type: NodeType.EXPRESSION
  Expression: _swapTokensForEth(_minimum(amount,_minimum(contractTokenBalance,_maxTSwap)))

  ID: 26
  Type: NodeType.VARIABLE
  Expression: ethInContract = address(this).balance

  ID: 27
  Type: NodeType.IF
  Expression: ethInContract > 0

  ID: 28
  Type: NodeType.EXPRESSION
  Expression: _sendETHToFee(ethInContract)

  ID: 29
  Type: NodeType.ENDIF
  Expression: 

  ID: 30
  Type: NodeType.ENDIF
  Expression: 

  ID: 31
  Type: NodeType.ENDIF
  Expression: 

  ID: 32
  Type: NodeType.IF
  Expression: tAmount > 0

  ID: 33
  Type: NodeType.EXPRESSION
  Expression: _balances[address(this)] += tAmount

  ID: 34
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,address(this),tAmount)

  ID: 35
  Type: NodeType.ENDIF
  Expression: 

  ID: 36
  Type: NodeType.EXPRESSION
  Expression: _balances[from] -= amount

  ID: 37
  Type: NodeType.EXPRESSION
  Expression: _balances[to] += (amount - tAmount)

  ID: 38
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,amount - tAmount)

  ID: 39
  Type: NodeType.IF
  Expression: (_buyTransactionCount > _reduceSTThreshold)

  ID: 40
  Type: NodeType.EXPRESSION
  Expression: tAmount = amount * _endST / 100

  ID: 41
  Type: NodeType.EXPRESSION
  Expression: tAmount = amount * _initST / 100

  ID: 42
  Type: NodeType.ENDIF
  Expression: 

  ID: 43
  Type: NodeType.IF
  Expression: (_buyTransactionCount > _reduceBTThreshold)

  ID: 44
  Type: NodeType.EXPRESSION
  Expression: tAmount = amount * _endBT / 100

  ID: 45
  Type: NodeType.EXPRESSION
  Expression: tAmount = amount * _initBT / 100

  ID: 46
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 31
  6 -> 7
  6 -> 8
  7 -> 8
  8 -> 9
  9 -> 10
  9 -> 15
  10 -> 11
  10 -> 13
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 39
  16 -> 18
  18 -> 43
  18 -> 20
  20 -> 21
  21 -> 22
  22 -> 23
  23 -> 24
  24 -> 25
  24 -> 30
  25 -> 26
  26 -> 27
  27 -> 28
  27 -> 29
  28 -> 29
  29 -> 30
  30 -> 31
  31 -> 32
  32 -> 33
  32 -> 35
  33 -> 34
  34 -> 35
  35 -> 36
  36 -> 37
  37 -> 38
  39 -> 40
  39 -> 41
  40 -> 42
  41 -> 42
  42 -> 21
  43 -> 44
  43 -> 45
  44 -> 46
  45 -> 46
  46 -> 20

Function: _minimum
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 2
  Type: NodeType.IF
  Expression: a < b

  ID: 3
  Type: NodeType.RETURN
  Expression: a

  ID: 4
  Type: NodeType.RETURN
  Expression: b

Edges:
  0 -> 2
  2 -> 3
  2 -> 4

Function: _sendETHToFee
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _tWallet.transfer(amount)

Edges:
  0 -> 1

Function: _swapTokensForEth
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: path = new address[](2)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: path[0] = address(this)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: path[1] = uniswapV2Router.WETH()

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _approve(address(this),address(uniswapV2Router),tokenAmount)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: lockTheSwap()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: createPair
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! tradingOpen,Liquidity has already been initialized)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: tokenAmount = balanceOf(address(this)) - (_tTotal * _initBT / 100)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _approve(address(this),address(uniswapV2Router),_tTotal)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this),uniswapV2Router.WETH())

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),tokenAmount,0,0,owner(),block.timestamp)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 8
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  8 -> 1

Function: removeLimits
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: limitEffect = false

  ID: 2
  Type: NodeType.RETURN
  Expression: true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: setBT
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _endBT = newBT

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newBT <= 5,Must not exceed 5%)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: setST
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _endST = newST

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newST <= 5,Must not exceed 5%)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: openTrading
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! tradingOpen,Trading has already been enabled)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: swapEnabled = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: tradingOpen = true

  ID: 4
  Type: NodeType.RETURN
  Expression: true

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: clearStuckETH
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(tradingOpen,Trading not active; cannot clear ETH)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: contractETH = address(this).balance

  ID: 3
  Type: NodeType.IF
  Expression: contractETH > 0

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _tWallet.transfer(contractETH)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.RETURN
  Expression: true

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5
  5 -> 6
  7 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _initBT = 25

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _initST = 27

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _endBT = 10

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _endST = 25

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _reduceBTThreshold = 30

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _reduceSTThreshold = 45

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _manageSwapThreshold = 40

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _buyTransactionCount = 0

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _maxTx = 100000 * 10 ** _decimals

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _maxWallet = 100000 * 10 ** _decimals

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _tSwapThreshold = 10000 * 10 ** _decimals

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _maxTSwap = 100000 * 10 ** _decimals

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: tradingOpen = false

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: limitEffect = true

  ID: 14
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: inSwap = false

  ID: 15
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: swapEnabled = false

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _bWallet = address(0xdead)

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _decimals = 9

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _tTotal = 10000000 * 10 ** _decimals

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _name = SEEDEX

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _symbol = SEE

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


