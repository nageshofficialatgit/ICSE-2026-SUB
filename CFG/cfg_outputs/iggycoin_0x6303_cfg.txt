Contract: iggycoin
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_taxCollector != address(0),Invalid tax collector)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: taxRate = _taxRate

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: taxCollector = _taxCollector

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: totalSupply = initialSupply * 10 ** uint256(decimals)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balanceOf[owner] = totalSupply

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),owner,totalSupply)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= amount,Insufficient balance)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: taxAmount = (amount * taxRate) / 100

  ID: 3
  Type: NodeType.VARIABLE
  Expression: finalAmount = amount - taxAmount

  ID: 4
  Type: NodeType.IF
  Expression: taxAmount > 0

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balanceOf[taxCollector] += taxAmount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,taxCollector,taxAmount)

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= amount

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += finalAmount

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,to,finalAmount)

  ID: 11
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 7
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowance[msg.sender][spender] = amount

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,amount)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[from] >= amount,Insufficient balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowance[from][msg.sender] >= amount,Allowance exceeded)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: taxAmount = (amount * taxRate) / 100

  ID: 4
  Type: NodeType.VARIABLE
  Expression: finalAmount = amount - taxAmount

  ID: 5
  Type: NodeType.IF
  Expression: taxAmount > 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balanceOf[taxCollector] += taxAmount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,taxCollector,taxAmount)

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: balanceOf[from] -= amount

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += finalAmount

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: allowance[from][msg.sender] -= amount

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,finalAmount)

  ID: 13
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 8
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13

Function: updateTaxRate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newTaxRate <= 10,Tax rate cannot exceed 10%)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: taxRate = newTaxRate

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: TaxRateUpdated(newTaxRate)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: updateTaxCollector
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newCollector != address(0),Invalid tax collector)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: taxCollector = newCollector

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: TaxCollectorUpdated(newCollector)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = iggycoin

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = igc

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 2

Edges:
  0 -> 1
  1 -> 2


