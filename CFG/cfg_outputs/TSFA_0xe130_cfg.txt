Contract: Context
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1


Contract: IERC20
==================================================


Contract: SafeMath
==================================================

Function: add
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: z = x + y

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(z >= x,SafeMath: addition overflow)

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: sub
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(y <= x,errorMsg)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: z = x - y

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: mul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: x == 0

  ID: 2
  Type: NodeType.RETURN
  Expression: 0

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: z = x * y

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(z / x == y,SafeMath: multiplication overflow)

  ID: 6
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: div
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(y > 0,errorMsg)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: z = x / y

  ID: 3
  Type: NodeType.RETURN
  Expression: z

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: Ownable
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: senderAddr = _msgSender()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _contractOwner = senderAddr

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(address(0),senderAddr)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _contractOwner

Edges:
  0 -> 1

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(_contractOwner,address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _contractOwner = address(0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1


Contract: IUniswapV2Factory
==================================================


Contract: IUniswapV2Router02
==================================================


Contract: TSFA
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _feeCollector = address(_msgSender())

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _tokenBalances[_msgSender()] = _totalSupply

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _excludedFromTax[owner()] = true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _excludedFromTax[address(this)] = true

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _excludedFromTax[_feeCollector] = true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),_msgSender(),_totalSupply)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _contractOwner

Edges:
  0 -> 1

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(_contractOwner,address(0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _contractOwner = address(0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: name
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _tokenName

Edges:
  0 -> 1

Function: symbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _tokenSymbol

Edges:
  0 -> 1

Function: decimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _decimalPlaces

Edges:
  0 -> 1

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _totalSupply

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _tokenBalances[account]

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transfer(_msgSender(),recipient,amount)

  ID: 2
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _spenderAllowances[owner][spender]

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _approve(_msgSender(),spender,amount)

  ID: 2
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transfer(sender,recipient,amount)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _approve(sender,_msgSender(),_spenderAllowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance))

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(owner != address(0),ERC20: approve from the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(spender != address(0),ERC20: approve to the zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _spenderAllowances[owner][spender] = amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Approval(owner,spender,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: _transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(from != address(0),ERC20: transfer from the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),ERC20: transfer to the zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,Transfer amount must be greater than zero)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: feeAmount = 0

  ID: 5
  Type: NodeType.IF
  Expression: from != owner() && to != owner()

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: require(bool)(! _blockedBots[from] && ! _blockedBots[to])

  ID: 7
  Type: NodeType.IF
  Expression: from == _swapPair && to != address(_swapRouter) && ! _excludedFromTax[to]

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: feeAmount = amount.mul(_purchaseFee).div(100)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount <= _maxTransactionLimit,Exceeds the _maxTransactionLimit.)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf(to) + amount <= _maxHoldingLimit,Exceeds the maxHoldingLimit.)

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.IF
  Expression: to == _swapPair && from != address(this)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: feeAmount = amount.mul(_saleFee).div(100)

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

  ID: 15
  Type: NodeType.IF
  Expression: from != _swapPair && to != _swapPair

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: feeAmount = amount.mul(_transferFee).div(100)

  ID: 17
  Type: NodeType.ENDIF
  Expression: 

  ID: 18
  Type: NodeType.VARIABLE
  Expression: contractTokenBalance = balanceOf(address(this))

  ID: 19
  Type: NodeType.IF
  Expression: ! _duringSwap && to == _swapPair && _swapActivated && contractTokenBalance > _feeSwapThreshold

  ID: 20
  Type: NodeType.IF
  Expression: block.number > _lastSaleBlock

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: _sellCounter = 0

  ID: 22
  Type: NodeType.ENDIF
  Expression: 

  ID: 23
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_sellCounter < 3,Only 3 sells per block!)

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: swapTokensForEth(min(amount,min(contractTokenBalance,_maxFeeSwap)))

  ID: 25
  Type: NodeType.VARIABLE
  Expression: contractETHBalance = address(this).balance

  ID: 26
  Type: NodeType.IF
  Expression: contractETHBalance > 0

  ID: 27
  Type: NodeType.EXPRESSION
  Expression: sendETHToFee(address(this).balance)

  ID: 28
  Type: NodeType.ENDIF
  Expression: 

  ID: 29
  Type: NodeType.EXPRESSION
  Expression: _sellCounter ++

  ID: 30
  Type: NodeType.EXPRESSION
  Expression: _lastSaleBlock = block.number

  ID: 31
  Type: NodeType.ENDIF
  Expression: 

  ID: 32
  Type: NodeType.ENDIF
  Expression: 

  ID: 33
  Type: NodeType.IF
  Expression: feeAmount > 0

  ID: 34
  Type: NodeType.EXPRESSION
  Expression: _tokenBalances[address(this)] = _tokenBalances[address(this)].add(feeAmount)

  ID: 35
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,address(this),feeAmount)

  ID: 36
  Type: NodeType.ENDIF
  Expression: 

  ID: 37
  Type: NodeType.EXPRESSION
  Expression: _tokenBalances[from] = _tokenBalances[from].sub(amount)

  ID: 38
  Type: NodeType.EXPRESSION
  Expression: _tokenBalances[to] = _tokenBalances[to].add(amount.sub(feeAmount))

  ID: 39
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,amount.sub(feeAmount))

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 32
  6 -> 7
  7 -> 8
  7 -> 11
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  12 -> 14
  13 -> 14
  14 -> 15
  15 -> 16
  15 -> 17
  16 -> 17
  17 -> 18
  18 -> 19
  19 -> 20
  19 -> 31
  20 -> 21
  20 -> 22
  21 -> 22
  22 -> 23
  23 -> 24
  24 -> 25
  25 -> 26
  26 -> 27
  26 -> 28
  27 -> 28
  28 -> 29
  29 -> 30
  30 -> 31
  31 -> 32
  32 -> 33
  33 -> 34
  33 -> 36
  34 -> 35
  35 -> 36
  36 -> 37
  37 -> 38
  38 -> 39

Function: min
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 2
  Type: NodeType.IF
  Expression: (x > y)

  ID: 3
  Type: NodeType.RETURN
  Expression: y

  ID: 4
  Type: NodeType.RETURN
  Expression: x

Edges:
  0 -> 2
  2 -> 3
  2 -> 4

Function: swapTokensForEth
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: path = new address[](2)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: path[0] = address(this)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: path[1] = _swapRouter.WETH()

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _approve(address(this),address(_swapRouter),tokenAmount)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _swapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: lockTheSwap()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: updatevalue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(percentage <= 100,Percentage cannot exceed 100)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _liquidityShare = percentage

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: removeLimits
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _maxTransactionLimit = _totalSupply

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _maxHoldingLimit = _totalSupply

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: MaxTxAmountUpdated(_totalSupply)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: removeTransferTax
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transferFee = 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: TransferTaxUpdated(0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: sendETHToFee
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _feeCollector.transfer(amount)

Edges:
  0 -> 1

Function: addBots
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 2
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 3
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 4
  Type: NodeType.IFLOOP
  Expression: i < bots_.length

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _blockedBots[bots_[i]] = true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 7
  1 -> 4
  3 -> 1
  4 -> 5
  4 -> 2
  5 -> 6
  6 -> 4
  7 -> 3

Function: delBots
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 2
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 3
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 4
  Type: NodeType.IFLOOP
  Expression: i < notbot.length

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _blockedBots[notbot[i]] = false

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 7
  1 -> 4
  3 -> 1
  4 -> 5
  4 -> 2
  5 -> 6
  6 -> 4
  7 -> 3

Function: isBot
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _blockedBots[a]

Edges:
  0 -> 1

Function: openTrading
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! _tradingActive,Trading is already open)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _swapRouter = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _approve(address(this),address(_swapRouter),_totalSupply)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _swapPair = IUniswapV2Factory(_swapRouter.factory()).createPair(address(this),_swapRouter.WETH())

  ID: 5
  Type: NodeType.IF
  Expression: _liquidityShare == 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _liquidityShare = 100 - _purchaseFee

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.VARIABLE
  Expression: tokenAmount = balanceOf(address(this)).mul(_liquidityShare).div(100)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: _swapRouter.addLiquidityETH{value: address(this).balance}(address(this),tokenAmount,0,0,owner(),block.timestamp)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: IERC20(_swapPair).approve(address(_swapRouter),type()(uint256).max)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: _swapActivated = true

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: _tradingActive = true

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 13
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  13 -> 1

Function: reduceFee
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _purchaseFee = purchaseFee

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _saleFee = saleFee

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: manualSwap
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_msgSender() == _feeCollector)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: tokenBalance = balanceOf(address(this))

  ID: 3
  Type: NodeType.IF
  Expression: tokenBalance > 0

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: swapTokensForEth(tokenBalance)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: ethBalance = address(this).balance

  ID: 7
  Type: NodeType.IF
  Expression: ethBalance > 0

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: sendETHToFee(ethBalance)

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  8 -> 9

Function: manualsend
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_msgSender() == _feeCollector)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: contractETHBalance = address(this).balance

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: sendETHToFee(contractETHBalance)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _purchaseFee = 22

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _saleFee = 22

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _transferFee = 0

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _finalPurchaseFee = 0

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _finalSaleFee = 0

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _reducePurchaseFeeAt = 20

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _reduceSaleFeeAt = 20

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _maxTransactionLimit = 84138000 * 10 ** _decimalPlaces

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _maxHoldingLimit = 84138000 * 10 ** _decimalPlaces

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _feeSwapThreshold = 42069000 * 10 ** _decimalPlaces

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _maxFeeSwap = 42069000 * 10 ** _decimalPlaces

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _duringSwap = false

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _swapActivated = false

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _sellCounter = 0

  ID: 14
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _lastSaleBlock = 0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _decimalPlaces = 18

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _totalSupply = 4206900000 * 10 ** _decimalPlaces

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _tokenName = Tariff Stabilization and Fair Trade Act

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _tokenSymbol = TSFA

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


