Contract: CoinREP
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] = totalSupply

Edges:
  0 -> 1
  1 -> 2

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_value > 0,Amount must be greater than 0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_to != address(0),Invalid address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= _value,Insufficient balance)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= _value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balanceOf[_to] += _value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 7
  Type: NodeType.RETURN
  Expression: true

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

  ID: 9
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 8
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  8 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_spender != address(0),Invalid spender address)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: oldAllowance = allowance[msg.sender][_spender]

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: allowance[msg.sender][_spender] = _value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,_spender,_value)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: AllowanceUpdated(msg.sender,_spender,oldAllowance,_value)

  ID: 6
  Type: NodeType.RETURN
  Expression: true

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

  ID: 8
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_from != address(0) && _to != address(0),Invalid address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[_from] >= _value,Insufficient balance)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowance[_from][msg.sender] >= _value,Allowance exceeded)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[_from] -= _value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balanceOf[_to] += _value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: allowance[_from][msg.sender] -= _value

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_to,_value)

  ID: 8
  Type: NodeType.RETURN
  Expression: true

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

  ID: 10
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 9
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  9 -> 1

Function: allowanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowance[_owner][_spender]

Edges:
  0 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = CoinREP

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = REP+

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalSupply = 5000000 * 10 ** uint256(decimals)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


