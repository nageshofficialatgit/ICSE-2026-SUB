Contract: Token
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = totalSupply

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[owner]

Edges:
  0 -> 1

Function: deposit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.value > 0,Deposit must be greater than 0.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] += msg.value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Deposit(msg.sender,msg.value)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,Withdraw amount must be greater than 0.)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balances[msg.sender] >= amount,Insufficient balance.)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: address(msg.sender).transfer(amount)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Withdraw(msg.sender,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf(msg.sender) >= value,Balance too low)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[to] += value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,to,value)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf(from) >= value,Balance too low)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowance[from][msg.sender] >= value,Allowance too low)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[to] += value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balances[from] -= value

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: allowance[from][msg.sender] -= value

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,value)

  ID: 7
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowance[msg.sender][spender] = value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,value)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: deposit()

Edges:
  0 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalSupply = 1000000000000000000000000 * 20 ** 18

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = USDT

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = USDT

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


