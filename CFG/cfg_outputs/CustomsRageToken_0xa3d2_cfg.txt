Contract: CustomsRageToken
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: customsVault = _customsVault

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] = totalSupply

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= amount,Not enough tokens)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: feeBurn = amount * 3 / 100

  ID: 3
  Type: NodeType.VARIABLE
  Expression: feeVault = amount * 2 / 100

  ID: 4
  Type: NodeType.VARIABLE
  Expression: totalFee = feeBurn + feeVault

  ID: 5
  Type: NodeType.VARIABLE
  Expression: amountAfterFee = amount - totalFee

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= amount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balanceOf[to] += amountAfterFee

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: balanceOf[customsVault] += feeVault

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: totalSupply -= feeBurn

  ID: 10
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = Customs Rage

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = TARIFF

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalSupply = 10000000 * 10 ** uint256(decimals)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


