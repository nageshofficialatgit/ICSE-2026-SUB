Contract: TownCrier
==================================================

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: TownCrier
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: requestCnt = 1

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: requests[0].requester = msg.sender

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: killswitch = false

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: unrespondedCnt = 0

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = false

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: upgrade
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == requests[0].requester && unrespondedCnt == 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: newVersion = - int256(newAddr)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: killswitch = true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Upgrade(newAddr)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 5
  2 -> 3
  3 -> 4
  4 -> 5

Function: reset
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == requests[0].requester && unrespondedCnt == 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: GAS_PRICE = price

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: MIN_FEE = price * minGas

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: CANCELLATION_FEE = price * cancellationGas

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Reset(GAS_PRICE,MIN_FEE,CANCELLATION_FEE)

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 6
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: suspend
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == requests[0].requester

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: killswitch = true

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: restart
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == requests[0].requester && newVersion == 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: killswitch = false

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender == requests[0].requester && unrespondedCnt == 0

  ID: 2
  Type: NodeType.IF
  Expression: ! requests[0].requester.call.value(this.balance)()

  ID: 3
  Type: NodeType.THROW
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 5
  2 -> 3
  2 -> 4
  4 -> 5

Function: request
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: externalCallFlag

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: killswitch

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = true

  ID: 6
  Type: NodeType.IF
  Expression: ! msg.sender.call.value(msg.value)()

  ID: 7
  Type: NodeType.THROW
  Expression: 

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = false

  ID: 10
  Type: NodeType.RETURN
  Expression: newVersion

  ID: 11
  Type: NodeType.ENDIF
  Expression: 

  ID: 12
  Type: NodeType.IF
  Expression: msg.value < MIN_FEE

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = true

  ID: 14
  Type: NodeType.IF
  Expression: ! msg.sender.call.value(msg.value)()

  ID: 15
  Type: NodeType.THROW
  Expression: 

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = false

  ID: 18
  Type: NodeType.RETURN
  Expression: FAIL_FLAG

  ID: 19
  Type: NodeType.VARIABLE
  Expression: requestId = requestCnt

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: requestCnt ++

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: unrespondedCnt ++

  ID: 22
  Type: NodeType.VARIABLE
  Expression: paramsHash = sha3()(requestType,requestData)

  ID: 23
  Type: NodeType.EXPRESSION
  Expression: requests[requestId].requester = msg.sender

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: requests[requestId].fee = msg.value

  ID: 25
  Type: NodeType.EXPRESSION
  Expression: requests[requestId].callbackAddr = callbackAddr

  ID: 26
  Type: NodeType.EXPRESSION
  Expression: requests[requestId].callbackFID = callbackFID

  ID: 27
  Type: NodeType.EXPRESSION
  Expression: requests[requestId].paramsHash = paramsHash

  ID: 28
  Type: NodeType.EXPRESSION
  Expression: RequestInfo(requestId,requestType,msg.sender,msg.value,callbackAddr,paramsHash,timestamp,requestData)

  ID: 29
  Type: NodeType.RETURN
  Expression: requestId

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 11
  5 -> 6
  6 -> 7
  6 -> 8
  8 -> 9
  9 -> 10
  11 -> 12
  12 -> 13
  12 -> 19
  13 -> 14
  14 -> 15
  14 -> 16
  16 -> 17
  17 -> 18
  19 -> 20
  20 -> 21
  21 -> 22
  22 -> 23
  23 -> 24
  24 -> 25
  25 -> 26
  26 -> 27
  27 -> 28
  28 -> 29

Function: deliver
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: msg.sender != SGX_ADDRESS || requestId <= 0 || requests[requestId].requester == 0 || requests[requestId].fee == DELIVERED_FEE_FLAG

  ID: 2
  Type: NodeType.RETURN
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: fee = requests[requestId].fee

  ID: 5
  Type: NodeType.IF
  Expression: requests[requestId].paramsHash != paramsHash

  ID: 6
  Type: NodeType.RETURN
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: fee == CANCELLED_FEE_FLAG

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: SGX_ADDRESS.send(CANCELLATION_FEE)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: requests[requestId].fee = DELIVERED_FEE_FLAG

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: unrespondedCnt --

  ID: 11
  Type: NodeType.RETURN
  Expression: 

  ID: 12
  Type: NodeType.ENDIF
  Expression: 

  ID: 13
  Type: NodeType.ENDIF
  Expression: 

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: requests[requestId].fee = DELIVERED_FEE_FLAG

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: unrespondedCnt --

  ID: 16
  Type: NodeType.IF
  Expression: error < 2

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: SGX_ADDRESS.send(fee)

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = true

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: requests[requestId].requester.call.gas(2300).value(fee)()

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = false

  ID: 21
  Type: NodeType.ENDIF
  Expression: 

  ID: 22
  Type: NodeType.VARIABLE
  Expression: callbackGas = (fee - MIN_FEE) / tx.gasprice

  ID: 23
  Type: NodeType.EXPRESSION
  Expression: DeliverInfo(requestId,fee,tx.gasprice,msg.gas,callbackGas,paramsHash,error,respData)

  ID: 24
  Type: NodeType.IF
  Expression: callbackGas > msg.gas - 5000

  ID: 25
  Type: NodeType.EXPRESSION
  Expression: callbackGas = msg.gas - 5000

  ID: 26
  Type: NodeType.ENDIF
  Expression: 

  ID: 27
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = true

  ID: 28
  Type: NodeType.EXPRESSION
  Expression: requests[requestId].callbackAddr.call.gas(callbackGas)(requests[requestId].callbackFID,requestId,error,respData)

  ID: 29
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = false

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  7 -> 8
  7 -> 12
  8 -> 9
  9 -> 10
  10 -> 11
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  16 -> 18
  17 -> 21
  18 -> 19
  19 -> 20
  20 -> 21
  21 -> 22
  22 -> 23
  23 -> 24
  24 -> 25
  24 -> 26
  25 -> 26
  26 -> 27
  27 -> 28
  28 -> 29

Function: cancel
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: externalCallFlag

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: killswitch

  ID: 5
  Type: NodeType.RETURN
  Expression: 0

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.VARIABLE
  Expression: fee = requests[requestId].fee

  ID: 8
  Type: NodeType.IF
  Expression: requests[requestId].requester == msg.sender && fee >= CANCELLATION_FEE

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: requests[requestId].fee = CANCELLED_FEE_FLAG

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = true

  ID: 11
  Type: NodeType.IF
  Expression: ! msg.sender.call.value(fee - CANCELLATION_FEE)()

  ID: 12
  Type: NodeType.THROW
  Expression: 

  ID: 13
  Type: NodeType.ENDIF
  Expression: 

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: externalCallFlag = false

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: Cancel(requestId,msg.sender,requests[requestId].requester,requests[requestId].fee,1)

  ID: 16
  Type: NodeType.RETURN
  Expression: SUCCESS_FLAG

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: Cancel(requestId,msg.sender,requests[requestId].requester,fee,- 1)

  ID: 18
  Type: NodeType.RETURN
  Expression: FAIL_FLAG

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  8 -> 17
  9 -> 10
  10 -> 11
  11 -> 12
  11 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  17 -> 18

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SGX_ADDRESS = 0x18513702cCd928F2A3eb63d900aDf03c9cc81593

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: GAS_PRICE = 5 * 10 ** 10

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MIN_FEE = 30000 * GAS_PRICE

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: CANCELLATION_FEE = 25000 * GAS_PRICE

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: CANCELLED_FEE_FLAG = 1

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DELIVERED_FEE_FLAG = 0

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FAIL_FLAG = - 2 ** 250

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SUCCESS_FLAG = 1

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: newVersion = 0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8


