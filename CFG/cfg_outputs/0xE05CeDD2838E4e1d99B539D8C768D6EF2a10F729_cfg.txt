Contract: SafeMath
==================================================

Function: assert
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! assertion

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3

Function: safeMul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: c = a * b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(a == 0 || c / a == b)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeDiv
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(b > 0)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: c = a / b

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: assert(a == b * c + a % b)

  ID: 4
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


Contract: StandardTokenProtocol
==================================================

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: totalSupply

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1


Contract: StandardToken
==================================================

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: totalSupply

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_owner]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] -= _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[_recipient] += _value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_recipient,_value)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: when_can_transfer(msg.sender,_value)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: when_can_receive(_recipient,_value)

  ID: 7
  Type: NodeType.RETURN
  Expression: o_success

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 6
  6 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowed[_from][msg.sender] -= _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[_from] -= _value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[_recipient] += _value

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_recipient,_value)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: when_can_transfer(_from,_value)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: when_can_receive(_recipient,_value)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: when_is_allowed(_from,msg.sender,_value)

  ID: 9
  Type: NodeType.RETURN
  Expression: o_success

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 7
  7 -> 8
  8 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowed[msg.sender][_spender] = _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,_spender,_value)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.RETURN
  Expression: o_success

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowed[_owner][_spender]

  ID: 2
  Type: NodeType.RETURN
  Expression: o_remaining

Edges:
  0 -> 1


Contract: GUPToken
==================================================

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: super.transfer(_recipient,_amount)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: when_transferable()

  ID: 3
  Type: NodeType.RETURN
  Expression: o_success

Edges:
  0 -> 2
  2 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: super.transferFrom(_from,_recipient,_amount)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: when_transferable()

  ID: 3
  Type: NodeType.RETURN
  Expression: o_success

Edges:
  0 -> 2
  2 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: totalSupply

Edges:
  0 -> 1

Function: GUPToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: endMintingTime = _endMintingTime

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: minter = _minter

Edges:
  0 -> 1
  1 -> 2

Function: createToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[_recipient] += _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply += _value

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: when_mintable()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: only_minter()

  ID: 6
  Type: NodeType.RETURN
  Expression: o_success

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: createIlliquidToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: illiquidBalance[_recipient] += _value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply += _value

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: when_mintable()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: only_minter()

  ID: 6
  Type: NodeType.RETURN
  Expression: o_success

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: makeLiquid
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] += illiquidBalance[msg.sender]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: illiquidBalance[msg.sender] = 0

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: when_thawable()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = Guppy

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = GUP

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 3

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: LOCKOUT_PERIOD = 220752000

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: Contribution
==================================================

Function: assert
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! assertion

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3

Function: safeMul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: c = a * b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(a == 0 || c / a == b)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: safeDiv
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(b > 0)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: c = a / b

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: assert(a == b * c + a % b)

  ID: 4
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: Contribution
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: ownerAddress = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: publicStartTime = _publicStartTime

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: privateStartTime = _privateStartTime

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: publicEndTime = _publicStartTime + 2419200

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: btcsAddress = _btcs

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: multisigAddress = _multisig

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: matchpoolAddress = _matchpool

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: gupToken = new GUPToken(this,publicEndTime)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: gupToken.createIlliquidToken(matchpoolAddress,ALLOC_ILLIQUID_TEAM)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: gupToken.createToken(matchpoolAddress,ALLOC_BOUNTIES)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: gupToken.createToken(matchpoolAddress,ALLOC_LIQUID_TEAM)

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: gupToken.createToken(matchpoolAddress,ALLOC_NEW_USERS)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12

Function: toggleHalt
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: halted = _halted

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: only_owner()

Edges:
  0 -> 2
  2 -> 1

Function: getPriceRate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: now <= publicStartTime + STAGE_ONE_TIME_END

  ID: 2
  Type: NodeType.RETURN
  Expression: PRICE_STAGE_ONE

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.IF
  Expression: now <= publicStartTime + STAGE_TWO_TIME_END

  ID: 5
  Type: NodeType.RETURN
  Expression: PRICE_STAGE_TWO

  ID: 6
  Type: NodeType.ENDIF
  Expression: 

  ID: 7
  Type: NodeType.IF
  Expression: now <= publicStartTime + STAGE_THREE_TIME_END

  ID: 8
  Type: NodeType.RETURN
  Expression: PRICE_STAGE_THREE

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.IF
  Expression: now <= publicStartTime + STAGE_FOUR_TIME_END

  ID: 11
  Type: NodeType.RETURN
  Expression: PRICE_STAGE_FOUR

  ID: 12
  Type: NodeType.RETURN
  Expression: 0

  ID: 14
  Type: NodeType.RETURN
  Expression: o_rate

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  3 -> 4
  4 -> 5
  4 -> 6
  6 -> 7
  7 -> 8
  7 -> 9
  9 -> 10
  10 -> 11
  10 -> 12

Function: processPurchase
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: o_amount = safeDiv(safeMul(msg.value,_rate),1000000000000000000)

  ID: 2
  Type: NodeType.IF
  Expression: o_amount > _remaining

  ID: 3
  Type: NodeType.THROW
  Expression: 

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

  ID: 5
  Type: NodeType.IF
  Expression: ! multisigAddress.send(msg.value)

  ID: 6
  Type: NodeType.THROW
  Expression: 

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

  ID: 8
  Type: NodeType.IF
  Expression: ! gupToken.createToken(msg.sender,o_amount)

  ID: 9
  Type: NodeType.THROW
  Expression: 

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: gupSold += o_amount

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: etherRaised += msg.value

  ID: 13
  Type: NodeType.RETURN
  Expression: o_amount

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 4
  4 -> 5
  5 -> 6
  5 -> 7
  7 -> 8
  8 -> 9
  8 -> 10
  10 -> 11
  11 -> 12
  12 -> 13

Function: preBuy
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: amount = processPurchase(PRICE_BTCS,BTCS_PORTION_MAX - btcsPortionTotal)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: btcsPortionTotal += amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: PreBuy(amount)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: is_pre_crowdfund_period()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: only_btcs()

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: is_not_halted()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 6
  6 -> 1

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: amount = processPurchase(getPriceRate(),ALLOC_CROWDSALE - gupSold)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Buy(msg.sender,amount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: is_crowdfund_period()

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: is_not_halted()

Edges:
  0 -> 3
  1 -> 2
  3 -> 4
  4 -> 1

Function: drain
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! ownerAddress.send(this.balance)

  ID: 2
  Type: NodeType.THROW
  Expression: 

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: only_owner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  4 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: STAGE_ONE_TIME_END = 18000

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: STAGE_TWO_TIME_END = 259200

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: STAGE_THREE_TIME_END = 1209600

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: STAGE_FOUR_TIME_END = 2419200

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PRICE_STAGE_ONE = 480000

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PRICE_STAGE_TWO = 440000

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PRICE_STAGE_THREE = 400000

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PRICE_STAGE_FOUR = 360000

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: PRICE_BTCS = 480000

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MAX_SUPPLY = 100000000000

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ALLOC_ILLIQUID_TEAM = 8000000000

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ALLOC_LIQUID_TEAM = 13000000000

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ALLOC_BOUNTIES = 2000000000

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ALLOC_NEW_USERS = 17000000000

  ID: 14
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ALLOC_CROWDSALE = 60000000000

  ID: 15
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BTCS_PORTION_MAX = 31250 * PRICE_BTCS

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15


