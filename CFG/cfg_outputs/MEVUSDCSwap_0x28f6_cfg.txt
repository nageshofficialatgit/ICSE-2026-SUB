Contract: IERC20
==================================================


Contract: MEVUSDCSwap
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: swap
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: usdcAmount = (FIXED_WETH_AMOUNT * ETH_PRICE * BONUS_MULTIPLIER) / 1e20

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(IERC20(USDC).balanceOf(address(this)) >= usdcAmount,Insufficient USDC)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(IERC20(WETH).transferFrom(msg.sender,address(this),FIXED_WETH_AMOUNT),WETH transfer failed)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: success = IERC20(USDC).transfer(msg.sender,usdcAmount)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,USDC transfer failed)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Swap(msg.sender,FIXED_WETH_AMOUNT,usdcAmount)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1

Function: getUsdcAmount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: (wethAmount * ETH_PRICE * BONUS_MULTIPLIER) / 1e20

Edges:
  0 -> 1

Function: withdrawWETH
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Not owner)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: balance = IERC20(WETH).balanceOf(address(this))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balance > 0,No WETH to withdraw)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: success = IERC20(WETH).transfer(owner,balance)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,WETH transfer failed)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: withdrawETH
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(msg.sender == owner,Not owner)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: balance = address(this).balance

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balance > 0,No ETH to withdraw)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: 

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: (success,None) = owner.call{value: balance}()

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(success,ETH transfer failed)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ETH_PRICE = 2000000000

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BONUS_MULTIPLIER = 200

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FIXED_WETH_AMOUNT = 777000000000000

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4


