Contract: WETH9
==================================================

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: deposit()

Edges:
  0 -> 1

Function: deposit
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] += msg.value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Deposit(msg.sender,msg.value)

Edges:
  0 -> 1
  1 -> 2

Function: withdraw
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(balanceOf[msg.sender] >= wad)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= wad

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: msg.sender.transfer(wad)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Withdrawal(msg.sender,wad)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: this.balance

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowance[msg.sender][guy] = wad

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,guy,wad)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: transferFrom(msg.sender,dst,wad)

Edges:
  0 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(balanceOf[src] >= wad)

  ID: 2
  Type: NodeType.IF
  Expression: src != msg.sender && allowance[src][msg.sender] != uint256(- 1)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool)(allowance[src][msg.sender] >= wad)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: allowance[src][msg.sender] -= wad

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balanceOf[src] -= wad

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balanceOf[dst] += wad

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(src,dst,wad)

  ID: 9
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 5
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = Wrapped Ether

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = WETH

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

Edges:
  0 -> 1
  1 -> 2


