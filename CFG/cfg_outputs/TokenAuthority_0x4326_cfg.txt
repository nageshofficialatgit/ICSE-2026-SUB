Contract: IAccessControl
==================================================


Contract: Context
==================================================

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: _msgData
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.data

Edges:
  0 -> 1

Function: _contextSuffixLength
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: 0

Edges:
  0 -> 1


Contract: IERC165
==================================================


Contract: IMintableBurnable
==================================================


Contract: IToken
==================================================


Contract: ERC165
==================================================

Function: supportsInterface
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: interfaceId == type()(IERC165).interfaceId

Edges:
  0 -> 1


Contract: AccessControl
==================================================

Function: supportsInterface
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: interfaceId == type()(IAccessControl).interfaceId || super.supportsInterface(interfaceId)

Edges:
  0 -> 1

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: _msgData
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.data

Edges:
  0 -> 1

Function: _contextSuffixLength
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: 0

Edges:
  0 -> 1

Function: hasRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _roles[role].hasRole[account]

Edges:
  0 -> 1

Function: _checkRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! hasRole(role,account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert AccessControlUnauthorizedAccount(address,bytes32)(account,role)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: getRoleAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _roles[role].adminRole

Edges:
  0 -> 1

Function: grantRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _grantRole(role,account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyRole(getRoleAdmin(role))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyRole(getRoleAdmin(role))

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: revokeRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _revokeRole(role,account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyRole(getRoleAdmin(role))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyRole(getRoleAdmin(role))

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: renounceRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: callerConfirmation != _msgSender()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert AccessControlBadConfirmation()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _revokeRole(role,callerConfirmation)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4

Function: _setRoleAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: previousAdminRole = getRoleAdmin(role)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _roles[role].adminRole = adminRole

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: RoleAdminChanged(role,previousAdminRole,adminRole)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _grantRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! hasRole(role,account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _roles[role].hasRole[account] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: RoleGranted(role,account,_msgSender())

  ID: 4
  Type: NodeType.RETURN
  Expression: true

  ID: 5
  Type: NodeType.RETURN
  Expression: false

Edges:
  0 -> 1
  1 -> 2
  1 -> 5
  2 -> 3
  3 -> 4

Function: _revokeRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: hasRole(role,account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _roles[role].hasRole[account] = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: RoleRevoked(role,account,_msgSender())

  ID: 4
  Type: NodeType.RETURN
  Expression: true

  ID: 5
  Type: NodeType.RETURN
  Expression: false

Edges:
  0 -> 1
  1 -> 2
  1 -> 5
  2 -> 3
  3 -> 4

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DEFAULT_ADMIN_ROLE = 0x00

Edges:


Contract: TokenAuthority
==================================================

Function: supportsInterface
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: interfaceId == type()(IERC165).interfaceId

Edges:
  0 -> 1

Function: hasRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _roles[role].hasRole[account]

Edges:
  0 -> 1

Function: _checkRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! hasRole(role,account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert AccessControlUnauthorizedAccount(address,bytes32)(account,role)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3

Function: getRoleAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _roles[role].adminRole

Edges:
  0 -> 1

Function: grantRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _grantRole(role,account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyRole(getRoleAdmin(role))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyRole(getRoleAdmin(role))

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: revokeRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _revokeRole(role,account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyRole(getRoleAdmin(role))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyRole(getRoleAdmin(role))

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: renounceRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: callerConfirmation != _msgSender()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert AccessControlBadConfirmation()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _revokeRole(role,callerConfirmation)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4

Function: _setRoleAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: previousAdminRole = getRoleAdmin(role)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _roles[role].adminRole = adminRole

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: RoleAdminChanged(role,previousAdminRole,adminRole)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: _grantRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! hasRole(role,account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _roles[role].hasRole[account] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: RoleGranted(role,account,_msgSender())

  ID: 4
  Type: NodeType.RETURN
  Expression: true

  ID: 5
  Type: NodeType.RETURN
  Expression: false

Edges:
  0 -> 1
  1 -> 2
  1 -> 5
  2 -> 3
  3 -> 4

Function: _revokeRole
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: hasRole(role,account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _roles[role].hasRole[account] = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: RoleRevoked(role,account,_msgSender())

  ID: 4
  Type: NodeType.RETURN
  Expression: true

  ID: 5
  Type: NodeType.RETURN
  Expression: false

Edges:
  0 -> 1
  1 -> 2
  1 -> 5
  2 -> 3
  3 -> 4

Function: _msgSender
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.sender

Edges:
  0 -> 1

Function: _msgData
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: msg.data

Edges:
  0 -> 1

Function: _contextSuffixLength
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: 0

Edges:
  0 -> 1

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _tokenAddress == address(0x0) || admin == address(0x0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert InvalidParams()()

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: tokenAddress = _tokenAddress

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _grantRole(DEFAULT_ADMIN_ROLE,admin)

  ID: 6
  Type: NodeType.IF
  Expression: miner != address(0)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: _grantRole(MINTER_ROLE,miner)

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  6 -> 8
  7 -> 8

Function: whiteListMint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _mint(_account,_amount)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyRole(MINTER_ROLE)

Edges:
  0 -> 2
  2 -> 1

Function: whiteListBurn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: IToken(tokenAddress).isBlackListed(_account)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: revert(string)(addr blocklisted)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _burn(_account,_amount)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyRole(MINTER_ROLE)

Edges:
  0 -> 5
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  5 -> 1

Function: permitBurn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _burn(_account,_amount)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyRole(DEFAULT_ADMIN_ROLE)

Edges:
  0 -> 2
  2 -> 1

Function: _mint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: IMintableBurnable(tokenAddress).whiteListMint(amount,receipt)

Edges:
  0 -> 1

Function: _burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: IMintableBurnable(tokenAddress).whiteListBurn(amount,receipt)

Edges:
  0 -> 1

Function: setMinter
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: grantRole(MINTER_ROLE,minter)

Edges:
  0 -> 1

Function: removeMinter
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: revokeRole(MINTER_ROLE,minter)

Edges:
  0 -> 1

Function: setAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: grantRole(DEFAULT_ADMIN_ROLE,admin)

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DEFAULT_ADMIN_ROLE = 0x00

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MINTER_ROLE = keccak256(bytes)(TOKEN_MINTER_ROLE)

Edges:
  0 -> 1


