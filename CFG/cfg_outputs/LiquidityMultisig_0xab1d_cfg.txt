Contract: IERC20
==================================================


Contract: LiquidityMultisig
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_owners.length >= _requiredSignatures,Owners < Required Signatures)

  ID: 2
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 3
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: i = 0

  ID: 5
  Type: NodeType.IFLOOP
  Expression: i < _owners.length

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: isOwner[_owners[i]] = true

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: owners.push(_owners[i])

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: i ++

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: requiredSignatures = _requiredSignatures

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: lpToken = _lpToken

Edges:
  0 -> 1
  1 -> 4
  2 -> 5
  3 -> 9
  4 -> 2
  5 -> 6
  5 -> 3
  6 -> 7
  7 -> 8
  8 -> 5
  9 -> 10

Function: lockLiquidity
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(IERC20(lpToken).transferFrom(msg.sender,address(this),amount),Transfer failed)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: LiquidityLocked(amount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwners()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: requestLiquidityRecovery
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! executedTxs[txHash],Transaction already executed)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: executedTxs[txHash] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(IERC20(lpToken).transfer(to,amount),Transfer failed)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: LiquidityRecovered(amount)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwners()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1


