Contract: IERC20
==================================================


Contract: BASEDBABY
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(adminAddress != address(0),BASEDBABY: Admin cannot be zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = msg.sender

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _permanentAdmin = adminAddress

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _balances[_owner] = totalSupply

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),_owner,totalSupply)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: _transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(sender != address(0) && recipient != address(0),BASEDBABY: Casting spells into the void)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_balances[sender] >= amount,BASEDBABY: Not enough mana)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! blacklist[sender] && ! blacklist[recipient],BASEDBABY: Dark magic detected)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _balances[sender] = _balances[sender] - amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _balances[recipient] = _balances[recipient] + amount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Transfer(sender,recipient,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _balances[account]

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _transfer(msg.sender,recipient,amount)

  ID: 2
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _allowances[owner_][spender]

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! blacklist[msg.sender] && ! blacklist[spender],BASEDBABY: Dark magic detected)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _allowances[msg.sender][spender] = amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,amount)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_allowances[sender][msg.sender] >= amount,BASEDBABY: Spell power too low)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _transfer(sender,recipient,amount)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _allowances[sender][msg.sender] = _allowances[sender][msg.sender] - amount

  ID: 4
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: addToBlacklist
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(account != address(0),BASEDBABY: Cannot banish the void)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: blacklist[account] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: BlacklistAdded(account)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyAdminOrOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: removeFromBlacklist
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(account != address(0),BASEDBABY: Cannot unbanish the void)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: blacklist[account] = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: BlacklistRemoved(account)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyAdminOrOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newOwner != address(0),BASEDBABY: Cannot transfer to the void)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(_owner,newOwner)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _owner = newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: renounceOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: previousOwner = _owner

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _owner = address(0)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: OwnershipRenounced(previousOwner)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: owner
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _owner

Edges:
  0 -> 1

Function: permanentAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _permanentAdmin

Edges:
  0 -> 1

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = Based baby

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = BASEDBABY

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalSupply = 100_000_000 * 10 ** decimals

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


