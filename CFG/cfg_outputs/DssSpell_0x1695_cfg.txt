Contract: PauseAbstract
==================================================


Contract: Changelog
==================================================


Contract: SpellAction
==================================================


Contract: DssExec
==================================================

Function: description
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: SpellAction(action).description()

Edges:
  0 -> 1

Function: officeHours
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: SpellAction(action).officeHours()

Edges:
  0 -> 1

Function: nextCastTime
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: SpellAction(action).nextCastTime(eta)

  ID: 2
  Type: NodeType.RETURN
  Expression: castTime

Edges:
  0 -> 1

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: pause = PauseAbstract(log.getAddress(MCD_PAUSE))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: expiration = _expiration

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: action = _spellAction

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: sig = abi.encodeWithSignature(execute())

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: _action = _spellAction

  ID: 7
  Type: NodeType.ASSEMBLY
  Expression: 

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: _tag = extcodehash(uint256)(_action)

  ID: 9
  Type: NodeType.ENDASSEMBLY
  Expression: 

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: tag = _tag

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10

Function: schedule
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp <= expiration,This contract has expired)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(eta == 0,This spell has already been scheduled)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: eta = block.timestamp + PauseAbstract(pause).delay()

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: pause.plot(action,tag,sig,eta)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: cast
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! done,spell-already-cast)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: done = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: pause.exec(action,tag,sig,eta)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: log = Changelog(0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F)

Edges:


Contract: GemAbstract
==================================================


Contract: DaiJoinAbstract
==================================================


Contract: Initializable
==================================================


Contract: Authorizable
==================================================


Contract: Fileable
==================================================


Contract: Drippable
==================================================


Contract: Pricing
==================================================


Contract: ERC20
==================================================


Contract: DssVat
==================================================


Contract: ClipLike
==================================================


Contract: DogLike
==================================================


Contract: JoinLike
==================================================


Contract: OracleLike_0
==================================================


Contract: MomLike
==================================================


Contract: RegistryLike
==================================================


Contract: ChainlogLike
==================================================


Contract: IAMLike
==================================================


Contract: LerpFactoryLike
==================================================


Contract: LerpLike
==================================================


Contract: RwaOracleLike
==================================================


Contract: DssExecLib
==================================================

Function: dai
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: getChangelogAddress(MCD_DAI)

Edges:
  0 -> 1

Function: mkr
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: getChangelogAddress(MCD_GOV)

Edges:
  0 -> 1

Function: vat
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: getChangelogAddress(MCD_VAT)

Edges:
  0 -> 1

Function: jug
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: getChangelogAddress(MCD_JUG)

Edges:
  0 -> 1

Function: pot
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: getChangelogAddress(MCD_POT)

Edges:
  0 -> 1

Function: vow
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: getChangelogAddress(MCD_VOW)

Edges:
  0 -> 1

Function: end
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: getChangelogAddress(MCD_END)

Edges:
  0 -> 1

Function: reg
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: getChangelogAddress(ILK_REGISTRY)

Edges:
  0 -> 1

Function: daiJoin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: getChangelogAddress(MCD_JOIN_DAI)

Edges:
  0 -> 1

Function: lerpFab
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: getChangelogAddress(LERP_FAB)

Edges:
  0 -> 1

Function: clip
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _clip

Edges:
  0 -> 1

Function: flip
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _flip

Edges:
  0 -> 1

Function: calc
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _calc

Edges:
  0 -> 1

Function: getChangelogAddress
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: setAuthority
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: canCast
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: nextCastTime
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: castTime

Edges:
  0 -> 1

Function: setValue
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: setDSR
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: setIlkStabilityFee
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: sendPaymentFromSurplusBuffer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: linearInterpolation
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

Edges:

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: LOG = 0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: WAD = 10 ** 18

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: RAY = 10 ** 27

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: RAD = 10 ** 45

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: THOUSAND = 10 ** 3

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MILLION = 10 ** 6

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BPS_ONE_PCT = 100

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: BPS_ONE_HUNDRED_PCT = 100 * BPS_ONE_PCT

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: RATES_ONE_HUNDRED_PCT = 1000000021979553151239153027

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8


Contract: OracleLike_1
==================================================


Contract: DssAction
==================================================

Function: officeHours
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1

Function: execute
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: actions()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: limited()

Edges:
  0 -> 2
  2 -> 1

Function: nextCastTime
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(eta <= type()(uint40).max)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: castTime = DssExecLib.nextCastTime(uint40(eta),uint40(block.timestamp),officeHours())

  ID: 3
  Type: NodeType.RETURN
  Expression: castTime

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: DaiUsdsLike
==================================================


Contract: SUsdsLike
==================================================


Contract: ProxyLike
==================================================


Contract: DssSpellAction
==================================================

Function: officeHours
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1

Function: execute
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: actions()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: limited()

Edges:
  0 -> 2
  2 -> 1

Function: nextCastTime
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(eta <= type()(uint40).max)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: castTime = DssExecLib.nextCastTime(uint40(eta),uint40(block.timestamp),officeHours())

  ID: 3
  Type: NodeType.RETURN
  Expression: castTime

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: actions
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.setIlkStabilityFee(ETH-A,NINE_PT_SEVEN_FIVE_PCT_RATE,true)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.setIlkStabilityFee(ETH-B,TEN_PT_TWO_FIVE_PCT_RATE,true)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.setIlkStabilityFee(ETH-C,NINE_PT_FIVE_PCT_RATE,true)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.setIlkStabilityFee(WSTETH-A,TEN_PT_SEVEN_FIVE_PCT_RATE,true)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.setIlkStabilityFee(WSTETH-B,TEN_PT_FIVE_PCT_RATE,true)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.setIlkStabilityFee(WBTC-A,FOURTEEN_PT_TWO_FIVE_PCT_RATE,true)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.setIlkStabilityFee(WBTC-B,FOURTEEN_PT_SEVEN_FIVE_PCT_RATE,true)

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.setIlkStabilityFee(WBTC-C,FOURTEEN_PCT_RATE,true)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.setIlkStabilityFee(ALLOCATOR-SPARK-A,ONE_PT_THREE_THREE_PCT_RATE,true)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.setDSR(SEVEN_PT_TWO_FIVE_PCT_RATE,true)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: SUsdsLike(SUSDS).drip()

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: SUsdsLike(SUSDS).file(ssr,EIGHT_PT_SEVEN_FIVE_PCT_RATE)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: DAI.approve(MCD_JOIN_DAI,406451520000000000000000)

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: DaiJoinAbstract(MCD_JOIN_DAI).join(MCD_VOW,406451520000000000000000)

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: _transferUsds(INTEGRATION_BOOST_INITIATIVE,3_000_000 * WAD)

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: _transferUsds(GFXLABS,1_000 * WAD)

  ID: 17
  Type: NodeType.TRY
  Expression: ProxyLike(SPARK_PROXY).exec(SPARK_SPELL,abi.encodeWithSignature(execute()))

  ID: 18
  Type: NodeType.CATCH
  Expression: 

  ID: 19
  Type: NodeType.CATCH
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18
  17 -> 19

Function: _transferUsds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(wad % WAD == 0,transferUsds/non-integer-wad)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: DssExecLib.sendPaymentFromSurplusBuffer(address(this),wad / WAD)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: DAI.approve(DAI_USDS,wad)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: DaiUsdsLike(DAI_USDS).daiToUsds(usr,wad)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DAI = GemAbstract(DssExecLib.dai())

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MKR = GemAbstract(DssExecLib.mkr())

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: DAI_USDS = DssExecLib.getChangelogAddress(DAI_USDS)

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SUSDS = DssExecLib.getChangelogAddress(SUSDS)

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MCD_JOIN_DAI = DssExecLib.daiJoin()

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MCD_VAT = DssExecLib.vat()

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: MCD_VOW = DssExecLib.vow()

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: description = 2025-02-06 MakerDAO Executive Spell | Hash: 0xc89ebc18cbe250c96a4a72bdbdb45cf258b6634597b119fdb1fd0969e79cf629

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: ONE_PT_THREE_THREE_PCT_RATE = 1000000000418960282689704878

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SEVEN_PT_TWO_FIVE_PCT_RATE = 1000000002219443553326580536

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: EIGHT_PT_SEVEN_FIVE_PCT_RATE = 1000000002659864411854984565

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: NINE_PT_FIVE_PCT_RATE = 1000000002877801985002875644

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: NINE_PT_SEVEN_FIVE_PCT_RATE = 1000000002950116251408586949

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TEN_PT_TWO_FIVE_PCT_RATE = 1000000003094251918120023627

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TEN_PT_FIVE_PCT_RATE = 1000000003166074807451009595

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: TEN_PT_SEVEN_FIVE_PCT_RATE = 1000000003237735385034516037

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FOURTEEN_PCT_RATE = 1000000004154878953532704765

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FOURTEEN_PT_TWO_FIVE_PCT_RATE = 1000000004224341833701283597

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: FOURTEEN_PT_SEVEN_FIVE_PCT_RATE = 1000000004362812761691191350

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: WAD = 10 ** 18

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: RAY = 10 ** 27

  ID: 14
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: INTEGRATION_BOOST_INITIATIVE = 0xD6891d1DFFDA6B0B1aF3524018a1eE2E608785F7

  ID: 15
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: GFXLABS = 0xa6e8772af29b29B9202a073f8E36f447689BEef6

  ID: 16
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SPARK_PROXY = 0x3300f198988e4C9C63F75dF86De36421f06af8c4

  ID: 17
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: SPARK_SPELL = 0xD5c59b7c1DD8D2663b4c826574ed968B2C8329C0

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17


Contract: DssSpell
==================================================

Function: description
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: SpellAction(action).description()

Edges:
  0 -> 1

Function: officeHours
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: SpellAction(action).officeHours()

Edges:
  0 -> 1

Function: nextCastTime
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: SpellAction(action).nextCastTime(eta)

  ID: 2
  Type: NodeType.RETURN
  Expression: castTime

Edges:
  0 -> 1

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: DssExec(block.timestamp + 2592000,address(new DssSpellAction()))

Edges:
  0 -> 1

Function: schedule
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp <= expiration,This contract has expired)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(eta == 0,This spell has already been scheduled)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: eta = block.timestamp + PauseAbstract(pause).delay()

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: pause.plot(action,tag,sig,eta)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: cast
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! done,spell-already-cast)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: done = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: pause.exec(action,tag,sig,eta)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: log = Changelog(0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F)

Edges:


