Contract: AdminStorage
==================================================


Contract: ProxyStorage
==================================================

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _name = UDET

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _symbol = UDET

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _decimals = 6

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _totalSupply = 7_000_000_000 * 10 ** _decimals

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: stakingLockPeriod = 1209600

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _MAX_FEE = 50

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _MAX_SETTABLE_BASIS_POINTS = 20

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _MAX_SETTABLE_FEE = 50

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7


Contract: IERC20
==================================================


Contract: IProxy
==================================================


Contract: TokenImplUDET
==================================================

Function: receive
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(exchangeRate > 0,EXCHANGE_DISABLED)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _exchangeTokensInternal(msg.value)

Edges:
  0 -> 1
  1 -> 2

Function: init
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! _initialized,INITIALIZED)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _initialized = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _userData[admin].balance = _totalSupply

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0),admin,_totalSupply)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: name
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _name

Edges:
  0 -> 1

Function: symbol
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _symbol

Edges:
  0 -> 1

Function: decimals
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _decimals

Edges:
  0 -> 1

Function: totalSupply
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _totalSupply

Edges:
  0 -> 1

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _userData[account].balance

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! transferPaused && recipient != address(0),PAUSED_ZERO_ADDRESS)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _transfer(msg.sender,recipient,amount)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _allowances[ownerAddr][spender]

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: owner = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount == 0 || _allowances[owner][spender] == 0,RESET_ZERO_CHANGES)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _approve(msg.sender,spender,amount)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: currentAllowance = _allowances[sender][msg.sender]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! transferPaused && currentAllowance > amount && ! _userData[msg.sender].isBlacklisted,PAUSED_ZERO_EXCEEDS_BLACKLISTED)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _transfer(sender,recipient,amount)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _approve(sender,msg.sender,currentAllowance - amount)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 1

Function: increaseAllowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: sender = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _approve(sender,spender,_allowances[sender][spender] + addedValue)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: decreaseAllowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: sender = msg.sender

  ID: 2
  Type: NodeType.VARIABLE
  Expression: current = _allowances[sender][spender]

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(current >= subtractedValue,ALLOWANCE_BELOW_ZERO)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _approve(sender,spender,current - subtractedValue)

  ID: 5
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: _transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(recipient != address(0) && sender != address(0) && _userData[sender].balance > amount && ! _userData[sender].isBlacklisted,ZERO_NO_BALANCE_BLACKLISTED)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _userData[sender].balance -= amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _userData[recipient].balance += amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(sender,recipient,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: _approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(ownerAddr != address(0) && spender != address(0),ZERO_ADDRESS)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _allowances[ownerAddr][spender] = amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Approval(ownerAddr,spender,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: stake
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! transferPaused && ! _userData[msg.sender].isBlacklisted,PAUSED_BLACKLISTED)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _stake(msg.sender,amount)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: unstake
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! transferPaused && ! _userData[msg.sender].isBlacklisted,PAUSED_BLACKLISTED)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _unstake(msg.sender,amount)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: nonReentrant()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: stakedBalanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: _userData[account].stakedBalance

Edges:
  0 -> 1

Function: setFee
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(newBasisPoints < _MAX_SETTABLE_BASIS_POINTS && newMaxFee < _MAX_SETTABLE_FEE,FEE_MAX_FEE_TOO_HIGH)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: oldBbasisPointsRate = basisPointsRate

  ID: 3
  Type: NodeType.VARIABLE
  Expression: oldMaximumFee = _MAX_FEE

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: basisPointsRate = newBasisPoints

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _MAX_FEE = newMaxFee

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: FeeUpdated(oldBbasisPointsRate,basisPointsRate,oldMaximumFee,_MAX_FEE)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  7 -> 1

Function: blacklist
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _userData[account].isBlacklisted = status

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Blacklisted(account,status)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: setExchangeRate
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: oldRate = exchangeRate

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: exchangeRate = newRate

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ExchangeRateUpdated(oldRate,newRate)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: _stake
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount != 0 && _userData[account].balance > amount,INVALID_AMOUNT)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: _contract = address(this)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _userData[account].balance -= amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _userData[account].stakedBalance += amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _userData[account].stakeTimestamp = block.timestamp

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: Staked(account,amount)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(account,_contract,amount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7

Function: _unstake
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount != 0 && _userData[account].stakedBalance > amount,INVALID_AMOUNT)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(block.timestamp > _userData[account].stakeTimestamp + stakingLockPeriod,LOCK_PERIOD_ACTIVE)

  ID: 4
  Type: NodeType.VARIABLE
  Expression: unstakeAmount = amount - fee

  ID: 5
  Type: NodeType.VARIABLE
  Expression: _contract = address(this)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _userData[account].stakedBalance -= amount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: _userData[account].balance += unstakeAmount

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: _userData[admin].balance += fee

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: Unstaked(account,unstakeAmount)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: Transfer(_contract,admin,fee)

  ID: 11
  Type: NodeType.IF
  Expression: amount > _MAX_FEE

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: fee = _MAX_FEE

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: fee = amount

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 11
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  11 -> 12
  11 -> 13
  12 -> 14
  13 -> 14
  14 -> 4

Function: togglePause
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: transferPaused = ! transferPaused

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: PauseToggled(msg.sender,transferPaused)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: _transferToAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: oldAdminBalance = _userData[oldAdmin].balance

  ID: 2
  Type: NodeType.VARIABLE
  Expression: oldAdminStakedBalance = _userData[oldAdmin].stakedBalance

  ID: 3
  Type: NodeType.VARIABLE
  Expression: _contract = address(this)

  ID: 4
  Type: NodeType.IF
  Expression: oldAdminBalance != 0

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: _userData[oldAdmin].balance = 0

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: _userData[newAdmin].balance += oldAdminBalance

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: Transfer(oldAdmin,newAdmin,oldAdminBalance)

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.IF
  Expression: oldAdminStakedBalance != 0

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: _userData[oldAdmin].stakedBalance = 0

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: _userData[newAdmin].stakedBalance += oldAdminStakedBalance

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: _userData[newAdmin].stakeTimestamp = _userData[oldAdmin].stakeTimestamp

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: Transfer(oldAdmin,_contract,oldAdminStakedBalance)

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 15
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 8
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  9 -> 14
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  15 -> 1

Function: _exchangeTokensInternal
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: tokenAmount = amount * exchangeRate

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(exchangeRate != 0 && _userData[address(this)].balance >= tokenAmount,DISABLED_NO_BALANCE)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _userData[address(this)].balance -= tokenAmount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: _userData[msg.sender].balance += tokenAmount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(this),msg.sender,tokenAmount)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5

Function: _become
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: proxy._acceptImplementation()

Edges:
  0 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _name = UDET

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _symbol = UDET

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _decimals = 6

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _totalSupply = 7_000_000_000 * 10 ** _decimals

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: stakingLockPeriod = 1209600

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _MAX_FEE = 50

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _MAX_SETTABLE_BASIS_POINTS = 20

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: _MAX_SETTABLE_FEE = 50

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7


