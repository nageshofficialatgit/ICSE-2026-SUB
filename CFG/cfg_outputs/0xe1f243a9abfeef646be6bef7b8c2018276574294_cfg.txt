Contract: Ownable
==================================================

Function: Ownable
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: newOwner != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1


Contract: SafeMath
==================================================

Function: mul
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: c = a * b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(a == 0 || c / a == b)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: div
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: c = a / b

  ID: 2
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2

Function: sub
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(b <= a)

  ID: 2
  Type: NodeType.RETURN
  Expression: a - b

Edges:
  0 -> 1
  1 -> 2

Function: add
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: c = a + b

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(c >= a)

  ID: 3
  Type: NodeType.RETURN
  Expression: c

Edges:
  0 -> 1
  1 -> 2
  2 -> 3


Contract: ERC20Basic
==================================================


Contract: BasicToken
==================================================

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = balances[msg.sender].sub(_value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[_to] = balances[_to].add(_value)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_owner]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1


Contract: ERC20
==================================================


Contract: StandardToken
==================================================

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = balances[msg.sender].sub(_value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[_to] = balances[_to].add(_value)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,_to,_value)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_owner]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: _allowance = allowed[_from][msg.sender]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balances[_to] = balances[_to].add(_value)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balances[_from] = balances[_from].sub(_value)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: allowed[_from][msg.sender] = _allowance.sub(_value)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: Transfer(_from,_to,_value)

  ID: 6
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)((_value == 0) || (allowed[msg.sender][_spender] == 0))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: allowed[msg.sender][_spender] = _value

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,_spender,_value)

  ID: 4
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowed[_owner][_spender]

  ID: 2
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1


Contract: Manageable
==================================================

Function: Ownable
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: newOwner != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: enableManager
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerEnabled[_manager] == false)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerEnabled[_manager] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerEnabledEvent(_manager)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: disableManager
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerEnabled[_manager] == true)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerEnabled[_manager] = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerDisabledEvent(_manager)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: grantManagerPermission
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerPermissions[_manager][_permissionName] == false)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerPermissions[_manager][_permissionName] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerPermissionGrantedEvent(_manager,_permissionName)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 6
  6 -> 1

Function: revokeManagerPermission
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerPermissions[_manager][_permissionName] == true)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerPermissions[_manager][_permissionName] = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerPermissionRevokedEvent(_manager,_permissionName)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 6
  6 -> 1

Function: isManagerEnabled
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: managerEnabled[_manager]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

Edges:
  0 -> 2
  2 -> 1

Function: isPermissionGranted
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: managerPermissions[_manager][_permissionName]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: isManagerAllowed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: (managerEnabled[_manager] && managerPermissions[_manager][_permissionName])

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 2
  2 -> 3
  3 -> 1


Contract: Pausable
==================================================

Function: enableManager
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerEnabled[_manager] == false)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerEnabled[_manager] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerEnabledEvent(_manager)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: disableManager
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerEnabled[_manager] == true)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerEnabled[_manager] = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerDisabledEvent(_manager)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: grantManagerPermission
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerPermissions[_manager][_permissionName] == false)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerPermissions[_manager][_permissionName] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerPermissionGrantedEvent(_manager,_permissionName)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 6
  6 -> 1

Function: revokeManagerPermission
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerPermissions[_manager][_permissionName] == true)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerPermissions[_manager][_permissionName] = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerPermissionRevokedEvent(_manager,_permissionName)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 6
  6 -> 1

Function: isManagerEnabled
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: managerEnabled[_manager]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

Edges:
  0 -> 2
  2 -> 1

Function: isPermissionGranted
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: managerPermissions[_manager][_permissionName]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: isManagerAllowed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: (managerEnabled[_manager] && managerPermissions[_manager][_permissionName])

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: Ownable
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: newOwner != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: pauseContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: paused = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: PauseEvent()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAllowedManager(pause_contract)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: whenContractNotPaused()

Edges:
  0 -> 3
  1 -> 2
  3 -> 4
  4 -> 1

Function: unpauseContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: paused = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: UnpauseEvent()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAllowedManager(unpause_contract)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: whenContractPaused()

Edges:
  0 -> 3
  1 -> 2
  3 -> 4
  4 -> 1

Function: getPaused
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: paused

Edges:
  0 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: paused = true

Edges:


Contract: NamedToken
==================================================

Function: NamedToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: name = _name

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: symbol = _symbol

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: decimals = _decimals

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: getNameHash
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: keccak256()(name)

  ID: 2
  Type: NodeType.RETURN
  Expression: result

Edges:
  0 -> 1

Function: getSymbolHash
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: keccak256()(symbol)

  ID: 2
  Type: NodeType.RETURN
  Expression: result

Edges:
  0 -> 1


Contract: AngelToken
==================================================

Function: pauseContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: paused = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: PauseEvent()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAllowedManager(pause_contract)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: whenContractNotPaused()

Edges:
  0 -> 3
  1 -> 2
  3 -> 4
  4 -> 1

Function: unpauseContract
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: paused = false

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: UnpauseEvent()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAllowedManager(unpause_contract)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: whenContractPaused()

Edges:
  0 -> 3
  1 -> 2
  3 -> 4
  4 -> 1

Function: getPaused
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: paused

Edges:
  0 -> 1

Function: enableManager
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerEnabled[_manager] == false)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerEnabled[_manager] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerEnabledEvent(_manager)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: disableManager
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerEnabled[_manager] == true)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerEnabled[_manager] = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerDisabledEvent(_manager)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 1

Function: grantManagerPermission
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerPermissions[_manager][_permissionName] == false)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerPermissions[_manager][_permissionName] = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerPermissionGrantedEvent(_manager,_permissionName)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 6
  6 -> 1

Function: revokeManagerPermission
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(managerPermissions[_manager][_permissionName] == true)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: managerPermissions[_manager][_permissionName] = false

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: ManagerPermissionRevokedEvent(_manager,_permissionName)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 5
  5 -> 6
  6 -> 1

Function: isManagerEnabled
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: managerEnabled[_manager]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

Edges:
  0 -> 2
  2 -> 1

Function: isPermissionGranted
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: managerPermissions[_manager][_permissionName]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: isManagerAllowed
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: (managerEnabled[_manager] && managerPermissions[_manager][_permissionName])

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: onlyValidAddress(_manager)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyValidPermissionName(_permissionName)

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: Ownable
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

Edges:
  0 -> 1

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: newOwner != address(0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: owner = newOwner

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  1 -> 3
  2 -> 3
  4 -> 1

Function: NamedToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: name = _name

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: symbol = _symbol

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: decimals = _decimals

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: getNameHash
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: keccak256()(name)

  ID: 2
  Type: NodeType.RETURN
  Expression: result

Edges:
  0 -> 1

Function: getSymbolHash
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: keccak256()(symbol)

  ID: 2
  Type: NodeType.RETURN
  Expression: result

Edges:
  0 -> 1

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(spendingBlocksNumber[_from] == 0)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: result = super.transferFrom(_from,_to,_value)

  ID: 3
  Type: NodeType.IF
  Expression: result == true && _to == centralBankAddress

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: AngelCentralBank(centralBankAddress).angelBurn(_from,_value)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.RETURN
  Expression: result

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: whenContractNotPaused()

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5
  5 -> 6
  7 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: super.approve(_spender,_value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: whenContractNotPaused()

Edges:
  0 -> 2
  2 -> 1

Function: allowance
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: allowed[_owner][_spender]

  ID: 2
  Type: NodeType.RETURN
  Expression: remaining

Edges:
  0 -> 1

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: _to != centralBankAddress

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(! paused)

  ID: 3
  Type: NodeType.ENDIF
  Expression: 

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool)(spendingBlocksNumber[msg.sender] == 0)

  ID: 5
  Type: NodeType.VARIABLE
  Expression: result = super.transfer(_to,_value)

  ID: 6
  Type: NodeType.IF
  Expression: result == true && _to == centralBankAddress

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: AngelCentralBank(centralBankAddress).angelBurn(msg.sender,_value)

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.RETURN
  Expression: result

Edges:
  0 -> 1
  1 -> 2
  1 -> 3
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  6 -> 8
  7 -> 8
  8 -> 9

Function: balanceOf
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: balances[_owner]

  ID: 2
  Type: NodeType.RETURN
  Expression: balance

Edges:
  0 -> 1

Function: AngelToken
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: centralBankAddress = msg.sender

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: NamedToken(Angel Token,ANGL,18)

Edges:
  0 -> 2
  2 -> 1

Function: mint
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[_account] = balances[_account].add(_value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply = totalSupply.add(_value)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: MintEvent(_account,_value)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: Transfer(address(0x0),_account,_value)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyAllowedManager(mint_tokens)

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: burn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: balances[msg.sender] = balances[msg.sender].sub(_value)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: totalSupply = totalSupply.sub(_value)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: BurnEvent(msg.sender,_value)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyAllowedManager(burn_tokens)

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: blockSpending
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: spendingBlocksNumber[_account] = spendingBlocksNumber[_account].add(1)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: SpendingBlockedEvent(_account)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAllowedManager(block_spending)

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: unblockSpending
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: spendingBlocksNumber[_account] = spendingBlocksNumber[_account].sub(1)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: SpendingUnblockedEvent(_account)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAllowedManager(unblock_spending)

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: paused = true

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: centralBankAddress = 0x0

Edges:
  0 -> 1


Contract: AngelCentralBank
==================================================

Function: AngelCentralBank
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: angelToken = new AngelToken()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: angelToken.enableManager(address(this))

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: angelToken.grantManagerPermission(address(this),mint_tokens)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: angelToken.grantManagerPermission(address(this),burn_tokens)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: angelToken.grantManagerPermission(address(this),unpause_contract)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: angelToken.transferOwnership(angelFoundationAddress)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: angelRaise()

Edges:
  0 -> 1

Function: angelRaise
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.value > 0)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now >= icoLaunchTimestamp && now < icoFinishTimestamp)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: _purchasedTokensWei = 0

  ID: 4
  Type: NodeType.VARIABLE
  Expression: _notProcessedEthWei = 0

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: (_purchasedTokensWei,_notProcessedEthWei) = calculatePurchasedTokens(totalTokensSold,msg.value)

  ID: 6
  Type: NodeType.VARIABLE
  Expression: _actualInvestment = (msg.value - _notProcessedEthWei)

  ID: 7
  Type: NodeType.VARIABLE
  Expression: _newRecordIndex = investments[msg.sender].length

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: investments[msg.sender].length += 1

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: investments[msg.sender][_newRecordIndex].tokensSoldBeforeWei = totalTokensSold

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: investments[msg.sender][_newRecordIndex].investedEthWei = _actualInvestment

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: investments[msg.sender][_newRecordIndex].purchasedTokensWei = _purchasedTokensWei

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: investments[msg.sender][_newRecordIndex].refundedEthWei = 0

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: investments[msg.sender][_newRecordIndex].returnedTokensWei = 0

  ID: 14
  Type: NodeType.IF
  Expression: investors[msg.sender] == false

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: totalInvestors += 1

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: investors[msg.sender] = true

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: totalTokensSold += _purchasedTokensWei

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: angelToken.mint(msg.sender,_purchasedTokensWei)

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: angelToken.mint(angelFoundationAddress,_purchasedTokensWei * angelFoundationShareNumerator / (angelFoundationShareDenominator - angelFoundationShareNumerator))

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: angelFoundationAddress.transfer(_actualInvestment * initialFundsReleaseNumerator / initialFundsReleaseDenominator)

  ID: 22
  Type: NodeType.IF
  Expression: _notProcessedEthWei > 0

  ID: 23
  Type: NodeType.EXPRESSION
  Expression: msg.sender.transfer(_notProcessedEthWei)

  ID: 24
  Type: NodeType.ENDIF
  Expression: 

  ID: 25
  Type: NodeType.IF
  Expression: totalTokensSold >= icoCap

  ID: 26
  Type: NodeType.EXPRESSION
  Expression: icoFinishTimestamp = now

  ID: 27
  Type: NodeType.EXPRESSION
  Expression: finishIco()

  ID: 28
  Type: NodeType.ENDIF
  Expression: 

  ID: 29
  Type: NodeType.EXPRESSION
  Expression: InvestmentEvent(msg.sender,_actualInvestment,_purchasedTokensWei)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13
  13 -> 14
  14 -> 15
  14 -> 16
  15 -> 16
  16 -> 17
  17 -> 18
  18 -> 19
  19 -> 20
  20 -> 21
  21 -> 22
  22 -> 23
  22 -> 24
  23 -> 24
  24 -> 25
  25 -> 26
  25 -> 28
  26 -> 27
  27 -> 28
  28 -> 29

Function: calculatePurchasedTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _purchasedTokensWei = 0

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: _notProcessedEthWei = _investedEthWei

  ID: 3
  Type: NodeType.VARIABLE
  Expression: 

  ID: 4
  Type: NodeType.VARIABLE
  Expression: 

  ID: 5
  Type: NodeType.VARIABLE
  Expression: 

  ID: 6
  Type: NodeType.VARIABLE
  Expression: _isCapReached = false

  ID: 7
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 8
  Type: NodeType.IFLOOP
  Expression: (_notProcessedEthWei > 0) && (_isCapReached == false)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: _landmarkPrice = calculateLandmarkPrice(_totalTokensSoldBefore + _purchasedTokensWei)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: _maxLandmarkTokensWei = landmarkSize - ((_totalTokensSoldBefore + _purchasedTokensWei) % landmarkSize)

  ID: 11
  Type: NodeType.IF
  Expression: _totalTokensSoldBefore + _purchasedTokensWei + _maxLandmarkTokensWei >= icoCap

  ID: 12
  Type: NodeType.EXPRESSION
  Expression: _maxLandmarkTokensWei = icoCap - _totalTokensSoldBefore - _purchasedTokensWei

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: _isCapReached = true

  ID: 14
  Type: NodeType.ENDIF
  Expression: 

  ID: 15
  Type: NodeType.EXPRESSION
  Expression: _maxLandmarkEthWei = _maxLandmarkTokensWei * _landmarkPrice / (10 ** 18)

  ID: 16
  Type: NodeType.IF
  Expression: _notProcessedEthWei >= _maxLandmarkEthWei

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: _purchasedTokensWei += _maxLandmarkTokensWei

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: _notProcessedEthWei -= _maxLandmarkEthWei

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: _purchasedTokensWei += _notProcessedEthWei * (10 ** 18) / _landmarkPrice

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: _notProcessedEthWei = 0

  ID: 21
  Type: NodeType.ENDIF
  Expression: 

  ID: 22
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 23
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_purchasedTokensWei > 0)

  ID: 24
  Type: NodeType.RETURN
  Expression: (_purchasedTokensWei,_notProcessedEthWei)

  ID: 25
  Type: NodeType.RETURN
  Expression: (_purchasedTokensWei,_notProcessedEthWei)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 9
  8 -> 9
  8 -> 22
  9 -> 10
  10 -> 11
  11 -> 12
  11 -> 14
  12 -> 13
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  16 -> 19
  17 -> 18
  18 -> 21
  19 -> 20
  20 -> 21
  21 -> 8
  22 -> 23
  23 -> 24

Function: angelBurn
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(msg.sender == address(angelToken))

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now >= icoLaunchTimestamp && now < secondRefundRoundFinishTimestamp)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: _notProcessedTokensWei = _returnedTokensWei

  ID: 4
  Type: NodeType.VARIABLE
  Expression: _refundedEthWei = 0

  ID: 5
  Type: NodeType.VARIABLE
  Expression: _allRecordsNumber = investments[_investor].length

  ID: 6
  Type: NodeType.VARIABLE
  Expression: _recordMaxReturnedTokensWei = 0

  ID: 7
  Type: NodeType.VARIABLE
  Expression: _recordTokensWeiToProcess = 0

  ID: 8
  Type: NodeType.VARIABLE
  Expression: _tokensSoldWei = 0

  ID: 9
  Type: NodeType.VARIABLE
  Expression: _recordRefundedEthWei = 0

  ID: 10
  Type: NodeType.VARIABLE
  Expression: _recordNotProcessedTokensWei = 0

  ID: 11
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 12
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 13
  Type: NodeType.VARIABLE
  Expression: _recordID = 0

  ID: 14
  Type: NodeType.IFLOOP
  Expression: _recordID < _allRecordsNumber

  ID: 15
  Type: NodeType.IF
  Expression: investments[_investor][_recordID].purchasedTokensWei <= investments[_investor][_recordID].returnedTokensWei || investments[_investor][_recordID].investedEthWei <= investments[_investor][_recordID].refundedEthWei

  ID: 16
  Type: NodeType.CONTINUE
  Expression: 

  ID: 17
  Type: NodeType.ENDIF
  Expression: 

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: _recordMaxReturnedTokensWei = investments[_investor][_recordID].purchasedTokensWei - investments[_investor][_recordID].returnedTokensWei

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_recordTokensWeiToProcess > 0)

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: _tokensSoldWei = investments[_investor][_recordID].tokensSoldBeforeWei + investments[_investor][_recordID].returnedTokensWei

  ID: 22
  Type: NodeType.EXPRESSION
  Expression: (_recordRefundedEthWei,_recordNotProcessedTokensWei) = calculateRefundedEth(_tokensSoldWei,_recordTokensWeiToProcess)

  ID: 23
  Type: NodeType.IF
  Expression: _recordRefundedEthWei > (investments[_investor][_recordID].investedEthWei - investments[_investor][_recordID].refundedEthWei)

  ID: 24
  Type: NodeType.EXPRESSION
  Expression: _recordRefundedEthWei = (investments[_investor][_recordID].investedEthWei - investments[_investor][_recordID].refundedEthWei)

  ID: 25
  Type: NodeType.ENDIF
  Expression: 

  ID: 26
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_recordRefundedEthWei > 0)

  ID: 27
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_recordNotProcessedTokensWei == 0)

  ID: 28
  Type: NodeType.EXPRESSION
  Expression: _refundedEthWei += _recordRefundedEthWei

  ID: 29
  Type: NodeType.EXPRESSION
  Expression: _notProcessedTokensWei -= _recordTokensWeiToProcess

  ID: 30
  Type: NodeType.EXPRESSION
  Expression: investments[_investor][_recordID].refundedEthWei += _recordRefundedEthWei

  ID: 31
  Type: NodeType.EXPRESSION
  Expression: investments[_investor][_recordID].returnedTokensWei += _recordTokensWeiToProcess

  ID: 32
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(investments[_investor][_recordID].refundedEthWei <= investments[_investor][_recordID].investedEthWei)

  ID: 33
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(investments[_investor][_recordID].returnedTokensWei <= investments[_investor][_recordID].purchasedTokensWei)

  ID: 34
  Type: NodeType.IF
  Expression: _notProcessedTokensWei == 0

  ID: 35
  Type: NodeType.BREAK
  Expression: 

  ID: 36
  Type: NodeType.ENDIF
  Expression: 

  ID: 37
  Type: NodeType.EXPRESSION
  Expression: _recordID += 1

  ID: 38
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_notProcessedTokensWei < _returnedTokensWei)

  ID: 39
  Type: NodeType.EXPRESSION
  Expression: require(bool)(_refundedEthWei > 0)

  ID: 40
  Type: NodeType.VARIABLE
  Expression: _refundedEthWeiWithDiscount = calculateRefundedEthWithDiscount(_refundedEthWei)

  ID: 41
  Type: NodeType.EXPRESSION
  Expression: angelToken.burn(_returnedTokensWei - _notProcessedTokensWei)

  ID: 42
  Type: NodeType.IF
  Expression: _notProcessedTokensWei > 0

  ID: 43
  Type: NodeType.EXPRESSION
  Expression: angelToken.transfer(_investor,_notProcessedTokensWei)

  ID: 44
  Type: NodeType.ENDIF
  Expression: 

  ID: 45
  Type: NodeType.EXPRESSION
  Expression: _investor.transfer(_refundedEthWeiWithDiscount)

  ID: 46
  Type: NodeType.EXPRESSION
  Expression: RefundEvent(_investor,_refundedEthWeiWithDiscount,_returnedTokensWei - _notProcessedTokensWei)

  ID: 47
  Type: NodeType.IF
  Expression: (_notProcessedTokensWei < _recordMaxReturnedTokensWei)

  ID: 48
  Type: NodeType.EXPRESSION
  Expression: _recordTokensWeiToProcess = _notProcessedTokensWei

  ID: 49
  Type: NodeType.EXPRESSION
  Expression: _recordTokensWeiToProcess = _recordMaxReturnedTokensWei

  ID: 50
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 13
  11 -> 14
  12 -> 38
  13 -> 11
  14 -> 15
  14 -> 12
  15 -> 16
  15 -> 17
  16 -> 37
  17 -> 18
  18 -> 47
  20 -> 21
  21 -> 22
  22 -> 23
  23 -> 24
  23 -> 25
  24 -> 25
  25 -> 26
  26 -> 27
  27 -> 28
  28 -> 29
  29 -> 30
  30 -> 31
  31 -> 32
  32 -> 33
  33 -> 34
  34 -> 35
  34 -> 36
  35 -> 12
  36 -> 37
  37 -> 14
  38 -> 39
  39 -> 40
  40 -> 41
  41 -> 42
  42 -> 43
  42 -> 44
  43 -> 44
  44 -> 45
  45 -> 46
  47 -> 48
  47 -> 49
  48 -> 50
  49 -> 50
  50 -> 20

Function: calculateRefundedEthWithDiscount
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: now <= firstRefundRoundFinishTimestamp

  ID: 2
  Type: NodeType.RETURN
  Expression: (_refundedEthWei * firstRefundRoundRateNumerator / firstRefundRoundRateDenominator)

  ID: 3
  Type: NodeType.RETURN
  Expression: (_refundedEthWei * secondRefundRoundRateNumerator / secondRefundRoundRateDenominator)

Edges:
  0 -> 1
  1 -> 2
  1 -> 3

Function: calculateRefundedEth
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: _refundedEthWei = 0

  ID: 2
  Type: NodeType.VARIABLE
  Expression: _refundedTokensWei = 0

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: _notProcessedTokensWei = _returnedTokensWei

  ID: 4
  Type: NodeType.VARIABLE
  Expression: _landmarkPrice = 0

  ID: 5
  Type: NodeType.VARIABLE
  Expression: _maxLandmarkTokensWei = 0

  ID: 6
  Type: NodeType.VARIABLE
  Expression: _maxLandmarkEthWei = 0

  ID: 7
  Type: NodeType.VARIABLE
  Expression: _isCapReached = false

  ID: 8
  Type: NodeType.STARTLOOP
  Expression: 

  ID: 9
  Type: NodeType.IFLOOP
  Expression: (_notProcessedTokensWei > 0) && (_isCapReached == false)

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: _landmarkPrice = calculateLandmarkPrice(_totalTokensSoldBefore + _refundedTokensWei)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: _maxLandmarkTokensWei = landmarkSize - ((_totalTokensSoldBefore + _refundedTokensWei) % landmarkSize)

  ID: 12
  Type: NodeType.IF
  Expression: _totalTokensSoldBefore + _refundedTokensWei + _maxLandmarkTokensWei >= icoCap

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: _maxLandmarkTokensWei = icoCap - _totalTokensSoldBefore - _refundedTokensWei

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: _isCapReached = true

  ID: 15
  Type: NodeType.ENDIF
  Expression: 

  ID: 16
  Type: NodeType.EXPRESSION
  Expression: _maxLandmarkEthWei = _maxLandmarkTokensWei * _landmarkPrice / (10 ** 18)

  ID: 17
  Type: NodeType.IF
  Expression: _notProcessedTokensWei > _maxLandmarkTokensWei

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: _refundedEthWei += _maxLandmarkEthWei

  ID: 19
  Type: NodeType.EXPRESSION
  Expression: _refundedTokensWei += _maxLandmarkTokensWei

  ID: 20
  Type: NodeType.EXPRESSION
  Expression: _notProcessedTokensWei -= _maxLandmarkTokensWei

  ID: 21
  Type: NodeType.EXPRESSION
  Expression: _refundedEthWei += _notProcessedTokensWei * _landmarkPrice / (10 ** 18)

  ID: 22
  Type: NodeType.EXPRESSION
  Expression: _refundedTokensWei += _notProcessedTokensWei

  ID: 23
  Type: NodeType.EXPRESSION
  Expression: _notProcessedTokensWei = 0

  ID: 24
  Type: NodeType.ENDIF
  Expression: 

  ID: 25
  Type: NodeType.ENDLOOP
  Expression: 

  ID: 26
  Type: NodeType.EXPRESSION
  Expression: assert(bool)(_refundedEthWei > 0)

  ID: 27
  Type: NodeType.RETURN
  Expression: (_refundedEthWei,_notProcessedTokensWei)

  ID: 28
  Type: NodeType.RETURN
  Expression: (_refundedEthWei,_notProcessedTokensWei)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 10
  9 -> 10
  9 -> 25
  10 -> 11
  11 -> 12
  12 -> 13
  12 -> 15
  13 -> 14
  14 -> 15
  15 -> 16
  16 -> 17
  17 -> 18
  17 -> 21
  18 -> 19
  19 -> 20
  20 -> 24
  21 -> 22
  22 -> 23
  23 -> 24
  24 -> 9
  25 -> 26
  26 -> 27

Function: calculateLandmarkPrice
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.RETURN
  Expression: initialTokenPrice + initialTokenPrice * landmarkPriceStepNumerator / landmarkPriceStepDenominator * (_totalTokensSoldBefore / landmarkSize)

Edges:
  0 -> 1

Function: finishIco
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now >= icoFinishTimestamp)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool)(isIcoFinished == false)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: isIcoFinished = true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: angelToken.unpauseContract()

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: withdrawFoundationFunds
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool)(now > firstRefundRoundFinishTimestamp)

  ID: 2
  Type: NodeType.IF
  Expression: now > firstRefundRoundFinishTimestamp && now <= secondRefundRoundFinishTimestamp

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool)(firstRefundRoundFundsWithdrawal == false)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: firstRefundRoundFundsWithdrawal = true

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: angelFoundationAddress.transfer(this.balance * afterFirstRefundRoundFundsReleaseNumerator / afterFirstRefundRoundFundsReleaseDenominator)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: angelFoundationAddress.transfer(this.balance)

  ID: 7
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  2 -> 6
  3 -> 4
  4 -> 5
  5 -> 7
  6 -> 7

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: initialTokenPrice = 1 * (10 ** 18) / (10 ** 4)

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: angelFoundationAddress = address(0x2b0556a6298eA3D35E90F1df32cc126b31F59770)

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: icoLaunchTimestamp = 1511784000

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: icoFinishTimestamp = 1513727999

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: firstRefundRoundFinishTimestamp = 1520424000

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: secondRefundRoundFinishTimestamp = 1524744000

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalInvestors = 0

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: totalTokensSold = 0

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: isIcoFinished = false

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: firstRefundRoundFundsWithdrawal = false

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9

Function: slitherConstructorConstantVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: icoCap = 70000000 * (10 ** 18)

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: landmarkSize = 1000000 * (10 ** 18)

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: landmarkPriceStepNumerator = 10

  ID: 3
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: landmarkPriceStepDenominator = 100

  ID: 4
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: firstRefundRoundRateNumerator = 80

  ID: 5
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: firstRefundRoundRateDenominator = 100

  ID: 6
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: secondRefundRoundRateNumerator = 40

  ID: 7
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: secondRefundRoundRateDenominator = 100

  ID: 8
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: initialFundsReleaseNumerator = 20

  ID: 9
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: initialFundsReleaseDenominator = 100

  ID: 10
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: afterFirstRefundRoundFundsReleaseNumerator = 50

  ID: 11
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: afterFirstRefundRoundFundsReleaseDenominator = 100

  ID: 12
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: angelFoundationShareNumerator = 30

  ID: 13
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: angelFoundationShareDenominator = 100

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  12 -> 13


