Contract: token
==================================================


Contract: CrowdSale
==================================================

Function: CrowdSale
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: beneficiary = ifSuccessfulSendTo

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: fundingGoal = fundingGoalInEthers * 1000000000000000000

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: startTime = startTimeInSeconds

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: deadline = startTimeInSeconds + durationInMinutes * 60

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: price = szaboCostOfEachToken * 1000000000000000

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: tokenReward = token(addressOfTokenUsedAsReward)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: purchase
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.VARIABLE
  Expression: amount = msg.value

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] += amount

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: amountRaised += amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: tokenReward.transferFrom(beneficiary,msg.sender,(amount * price) / 1000000000000000000)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: checkGoalReached()

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: FundTransfer(msg.sender,amount,true)

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6

Function: fallback
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: purchase()

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: isOpen()

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: afterStart()

Edges:
  0 -> 2
  2 -> 3
  3 -> 1

Function: shiftSalePurchase
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: purchase()

  ID: 2
  Type: NodeType.RETURN
  Expression: true

  ID: 3
  Type: NodeType.RETURN
  Expression: success

Edges:
  0 -> 1
  1 -> 2

Function: checkGoalReached
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: amountRaised >= fundingGoal && ! fundingGoalReached

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: fundingGoalReached = true

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: GoalReached(beneficiary,amountRaised)

  ID: 4
  Type: NodeType.ENDIF
  Expression: 

Edges:
  0 -> 1
  1 -> 2
  1 -> 4
  2 -> 3
  3 -> 4

Function: closeCrowdsale
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: crowdsaleClosed = true

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: CrowdsaleClose(amountRaised,fundingGoalReached)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: isOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: safeWithdrawal
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.IF
  Expression: ! fundingGoalReached

  ID: 2
  Type: NodeType.VARIABLE
  Expression: amount = balanceOf[msg.sender]

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] = 0

  ID: 4
  Type: NodeType.IF
  Expression: amount > 0

  ID: 5
  Type: NodeType.IF
  Expression: msg.sender.send(amount)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: FundTransfer(msg.sender,amount,false)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] = amount

  ID: 8
  Type: NodeType.ENDIF
  Expression: 

  ID: 9
  Type: NodeType.ENDIF
  Expression: 

  ID: 10
  Type: NodeType.ENDIF
  Expression: 

  ID: 11
  Type: NodeType.IF
  Expression: fundingGoalReached && beneficiary == msg.sender

  ID: 12
  Type: NodeType.IF
  Expression: beneficiary.send(amountRaised)

  ID: 13
  Type: NodeType.EXPRESSION
  Expression: FundTransfer(beneficiary,amountRaised,false)

  ID: 14
  Type: NodeType.EXPRESSION
  Expression: fundingGoalReached = false

  ID: 15
  Type: NodeType.ENDIF
  Expression: 

  ID: 16
  Type: NodeType.ENDIF
  Expression: 

  ID: 17
  Type: NodeType.EXPRESSION
  Expression: afterDeadline()

  ID: 18
  Type: NodeType.EXPRESSION
  Expression: isClosed()

Edges:
  0 -> 17
  1 -> 2
  1 -> 10
  2 -> 3
  3 -> 4
  4 -> 5
  4 -> 9
  5 -> 6
  5 -> 7
  6 -> 8
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12
  11 -> 16
  12 -> 13
  12 -> 14
  13 -> 15
  14 -> 15
  15 -> 16
  17 -> 18
  18 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: fundingGoalReached = false

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: crowdsaleClosed = false

Edges:
  0 -> 1


