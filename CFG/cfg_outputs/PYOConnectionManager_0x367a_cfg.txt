Contract: IERC20
==================================================


Contract: PYOConnectionManager
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: token = IERC20(0x24796F5620Ac8B6e5059C033a7a6860B70D7098c)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: requestFee = 1e19

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = msg.sender

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: isAdmin[owner] = true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: transferOwnership
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_newOwner != address(0),Cannot use zero address)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: oldOwner = owner

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: owner = _newOwner

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: OwnershipTransferred(oldOwner,owner,block.timestamp)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: addAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_admin != address(0),Cannot use zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(! isAdmin[_admin],Already an admin)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: isAdmin[_admin] = true

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: AdminAdded(_admin,msg.sender,block.timestamp)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: removeAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(isAdmin[_admin],Not an admin)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: delete isAdmin[_admin]

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: AdminRemoved(_admin,msg.sender,block.timestamp)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: resignAsAdmin
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: delete isAdmin[msg.sender]

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: AdminResigned(msg.sender,block.timestamp)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: withdrawTokens
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(recipient != address(0),Cannot withdraw to zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(amount > 0,Amount must be greater than zero)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(IERC20(tokenAddress).balanceOf(address(this)) >= amount,Insufficient balance)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(IERC20(tokenAddress).transfer(recipient,amount),Token transfer failed)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: TokensWithdrawn(tokenAddress,recipient,amount,block.timestamp)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: onlyAdminOrOwner()

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: whenAdminWithdrawalsNotPaused()

Edges:
  0 -> 6
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  6 -> 7
  7 -> 1

Function: setTokenAddress
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(_newToken != address(0),Cannot use zero address)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: oldToken = address(token)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: token = IERC20(_newToken)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: TokenAddressChanged(oldToken,_newToken,msg.sender,block.timestamp)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 5
  1 -> 2
  2 -> 3
  3 -> 4
  5 -> 1

Function: setRequestsPaused
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: requestsPaused = _paused

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: RequestsPauseStateChanged(msg.sender,_paused,block.timestamp)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: setResponsesPaused
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: responsesPaused = _paused

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: ResponsesPauseStateChanged(msg.sender,_paused,block.timestamp)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: setAdminWithdrawalsPaused
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: adminWithdrawalsPaused = _paused

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: AdminWithdrawalsPauseStateChanged(msg.sender,_paused,block.timestamp)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyOwner()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: setRequestFee
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: requestFee = _newFee

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: RequestFeeChanged(msg.sender,requestFee,block.timestamp)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: onlyAdmin()

Edges:
  0 -> 3
  1 -> 2
  3 -> 1

Function: sendConnectionRequest
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),Cannot use zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != msg.sender,Cannot send to self)

  ID: 3
  Type: NodeType.IF
  Expression: requestFee > 0

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(token.transferFrom(msg.sender,address(this),requestFee),Token transfer failed)

  ID: 5
  Type: NodeType.ENDIF
  Expression: 

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: PYOConnectionRequest(to,msg.sender,publicKey,data,block.timestamp)

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: whenRequestsNotPaused()

Edges:
  0 -> 7
  1 -> 2
  2 -> 3
  3 -> 4
  3 -> 5
  4 -> 5
  5 -> 6
  7 -> 1

Function: sendConnectionResponse
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != address(0),Cannot use zero address)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(to != msg.sender,Cannot send to self)

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: PYOConnectionResponse(to,msg.sender,response,block.timestamp)

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: whenResponsesNotPaused()

Edges:
  0 -> 4
  1 -> 2
  2 -> 3
  4 -> 1

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: requestsPaused = false

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: responsesPaused = false

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: adminWithdrawalsPaused = false

Edges:
  0 -> 1
  1 -> 2


