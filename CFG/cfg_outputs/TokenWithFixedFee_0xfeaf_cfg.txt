Contract: TokenWithFixedFee
==================================================

Function: constructor
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: totalSupply = initialSupply * (10 ** decimals)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: feeInEth = _feeInEth

  ID: 3
  Type: NodeType.EXPRESSION
  Expression: feeCollector = _feeCollector

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] = totalSupply

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4

Function: transfer
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= amount,Not enough tokens for transfer)

  ID: 2
  Type: NodeType.VARIABLE
  Expression: feeAmount = feeInEth

  ID: 3
  Type: NodeType.VARIABLE
  Expression: transferAmount = amount

  ID: 4
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[msg.sender] >= amount + feeAmount,Not enough tokens to cover the fee)

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: balanceOf[msg.sender] -= amount + feeAmount

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balanceOf[recipient] += transferAmount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balanceOf[feeCollector] += feeAmount

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,recipient,transferAmount)

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: Transfer(msg.sender,feeCollector,feeAmount)

  ID: 10
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10

Function: setFeeInEth
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: feeInEth = _feeInEth

Edges:
  0 -> 1

Function: setFeeCollector
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: feeCollector = _feeCollector

Edges:
  0 -> 1

Function: approve
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: allowance[msg.sender][spender] = amount

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: Approval(msg.sender,spender,amount)

  ID: 3
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3

Function: transferFrom
------------------------------
Nodes:
  ID: 0
  Type: NodeType.ENTRYPOINT
  Expression: 

  ID: 1
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[sender] >= amount,Not enough funds)

  ID: 2
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(allowance[sender][msg.sender] >= amount,Transfer limit exceeded)

  ID: 3
  Type: NodeType.VARIABLE
  Expression: feeAmount = feeInEth

  ID: 4
  Type: NodeType.VARIABLE
  Expression: transferAmount = amount

  ID: 5
  Type: NodeType.EXPRESSION
  Expression: require(bool,string)(balanceOf[sender] >= amount + feeAmount,Not enough funds to cover the fee)

  ID: 6
  Type: NodeType.EXPRESSION
  Expression: balanceOf[sender] -= amount + feeAmount

  ID: 7
  Type: NodeType.EXPRESSION
  Expression: balanceOf[recipient] += transferAmount

  ID: 8
  Type: NodeType.EXPRESSION
  Expression: balanceOf[feeCollector] += feeAmount

  ID: 9
  Type: NodeType.EXPRESSION
  Expression: allowance[sender][msg.sender] -= amount

  ID: 10
  Type: NodeType.EXPRESSION
  Expression: Transfer(sender,recipient,transferAmount)

  ID: 11
  Type: NodeType.EXPRESSION
  Expression: Transfer(sender,feeCollector,feeAmount)

  ID: 12
  Type: NodeType.RETURN
  Expression: true

Edges:
  0 -> 1
  1 -> 2
  2 -> 3
  3 -> 4
  4 -> 5
  5 -> 6
  6 -> 7
  7 -> 8
  8 -> 9
  9 -> 10
  10 -> 11
  11 -> 12

Function: slitherConstructorVariables
------------------------------
Nodes:
  ID: 0
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: name = USD_TEST

  ID: 1
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: symbol = USD_TEST

  ID: 2
  Type: NodeType.OTHER_ENTRYPOINT
  Expression: decimals = 18

Edges:
  0 -> 1
  1 -> 2


